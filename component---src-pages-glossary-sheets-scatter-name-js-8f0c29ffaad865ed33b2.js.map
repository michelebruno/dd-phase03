{"version":3,"file":"component---src-pages-glossary-sheets-scatter-name-js-8f0c29ffaad865ed33b2.js","mappings":"iMAIe,SAASA,EAAT,GAAuE,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,OAAcC,GAA4B,EAAlCC,KAAkC,EAA5BD,SAASE,EAAmB,EAAnBA,OAAmB,EAAXC,SAEtE,OAAO,uBAAKC,UAAWC,GAAAA,CAAW,gDAAiDL,GAAW,iBAAkBE,GAAU,kBACtH,uBAAKE,UAAU,UAAf,KAIA,uBAAKA,UAAW,WACZ,2BACI,4BAAOL,IAEX,yBAAID,KCTD,SAASQ,EAAT,GAA2C,IAAD,IAA3BC,KAAOC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAEzC,OAAO,gBAACC,EAAA,EAAD,CAAQC,WAAS,GACpB,sBAAIP,UAAW,WAAYI,EAAOI,MAClC,uBAAKR,UAAU,cACX,uBAAKA,UAAW,SACXK,EAASI,MAAMC,QAAO,kBAAyB,WAAzB,EAAEC,UAAiCC,KACtD,gBAAEC,EAAF,EAAEA,UAAWlB,EAAb,EAAaA,OAAb,OAAyB,gBAACF,EAAD,CAASE,OAAQA,EAAQG,QAAM,GAAEe,OAGlE,uBAAKb,UAAW,SAEXK,EAASI,MAAMC,QAAO,kBAAyB,YAAzB,EAAEC,UAAkCC,KACvD,gBAAEC,EAAF,EAAEA,UAAWlB,EAAb,EAAaA,OAAb,OAAyB,gBAACF,EAAD,CAASE,OAAQA,EAAQC,SAAO,GAAEiB","sources":["webpack://phase-03/./src/components/Comment.js","webpack://phase-03/./src/pages/glossary/{SheetsScatter.name}.js"],"sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\n\nexport default function Comment({children, author, date, promask, nomask, petition}) {\n\n    return <div className={classNames(\"flex p-4 w-full bg-white text-black boreder-2\", promask && 'border-promask', nomask && 'border-nomask')}>\n        <div className=\"w-2/12\">\n            t\n        </div>\n\n        <div className={\"w-10/12\"}>\n            <div>\n                <span>{author}</span>\n            </div>\n            <p>{children}</p>\n        </div>\n\n    </div>\n\n}","import React from \"react\"\nimport {graphql} from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nimport Comment from \"../../components/Comment\";\n\n\nexport default function Word({data: {entity, comments}}) {\n\n    return <Layout container>\n        <h1 className={\"text-xl\"}>{entity.name}</h1>\n        <div className=\"flex gap-8\">\n            <div className={\"w-1/2\"}>\n                {comments.nodes.filter(({origin}) => origin === 'nomask').map(\n                    ({extracted, author}) => <Comment author={author} nomask>{extracted}</Comment>\n                )}\n            </div>\n            <div className={\"w-1/2\"}>\n\n                {comments.nodes.filter(({origin}) => origin === 'promask').map(\n                    ({extracted, author}) => <Comment author={author} promask>{extracted}</Comment>\n                )}\n            </div>\n        </div>\n    </Layout>\n}\n\n\nexport const query = graphql`\n    query($name: String!) {\n        entity: sheetsScatter(name: { eq: $name }) {\n            name\n            countNomask\n        }\n        comments: allSheetsEstratti(filter: {word: {eq: $name}}) {\n            nodes {\n                ...CommentFragment\n            }\n        }\n        related: allSheetsDistribuzione(filter: {word: {eq: $name}}) {\n            nodes {\n                secondWord\n            }\n        }\n    }\n`\n\n"],"names":["Comment","children","author","promask","date","nomask","petition","className","classNames","Word","data","entity","comments","Layout","container","name","nodes","filter","origin","map","extracted"],"sourceRoot":""}