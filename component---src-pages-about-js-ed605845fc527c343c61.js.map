{"version":3,"file":"component---src-pages-about-js-ed605845fc527c343c61.js","mappings":"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","sources":["webpack://phase-03/./node_modules/@babel/runtime/regenerator/index.js","webpack://phase-03/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://phase-03/./src/pages/about.js","webpack://phase-03/./node_modules/regenerator-runtime/runtime.js"],"sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {useLayoutEffect} from 'react';\nimport gsap from 'gsap';\nimport {ScrollTrigger} from 'gsap/ScrollTrigger';\nimport Layout from '../components/Layout';\nimport Button from '../components/Button';\nimport Image from '../components/Image';\nimport petitionJson from '../data/petition.json';\nimport commentJson from '../data/sample-comments.json';\n\ngsap.registerPlugin(ScrollTrigger);\n\nfunction HoverImage({children, component: Component, image, imageUrl, ...props}) {\n  const imgClassName = 'transition-transform fixed z-[-1] hidden opacity-50 top-0 left-0';\n\n  return (\n    <span className=\"relative \">\n      <span\n        className=\"underline\"\n        {...props}\n        onMouseMove={e => {\n          e.target.parentNode.querySelector('img').style.display = 'block';\n          e.target.parentNode.querySelector(\n            'img'\n          ).style.transform = `translateX(calc(${e.clientX}px - 50%)) translateY(calc(${e.clientY}px - 50%))`;\n        }}\n        onMouseLeave={e => {\n          e.target.parentNode.querySelector('img').style.display = 'none';\n        }}\n      >\n        {children}\n      </span>\n      {image && (\n        <Image\n          image={image}\n          className={imgClassName}\n          style={{\n            minWidth: '20vw',\n            transitionDuration: '100ms',\n            transitionTimingFunction: 'cubic-bezier(0.34, 1.56, 0.64, 1)',\n          }}\n        />\n      )}\n      {imageUrl && (\n        <img\n          src={imageUrl}\n          className={imgClassName}\n          style={{\n            minWidth: '20vw',\n            transitionDuration: '100ms',\n            transitionTimingFunction: 'cubic-bezier(0.34, 1.56, 0.64, 1)',\n          }}\n        />\n      )}\n    </span>\n  );\n}\n\nHoverImage.defaultProps = {\n  components: 'span',\n};\n\nexport default function About({\n  data: {\n    images: {nodes: images},\n    meme,\n    team: {nodes: team},\n  },\n}) {\n  useLayoutEffect(async () => {\n    const {ScrollSpy} = await import('bootstrap');\n    console.log(ScrollSpy);\n    const scrollSpy = new ScrollSpy(document.body, {\n      target: '#about-nav',\n      offset: 80,\n    });\n\n    return () => scrollSpy.dispose();\n  }, []);\n\n  return (\n    <Layout container footer light>\n      <h2 className=\"text-[4.34vw] leading-[1.15] uppercase\">\n        Opinion library is a website built to explore the language and arguments used in comments to\n        petitions regarding the mask mandate in the United States.\n      </h2>\n\n      <div className=\"mt-32 grid grid-cols-3 gap-x-8\">\n        <article className=\"col-span-2 relative z-10\">\n          <p>\n            The research presented in this website was carried out during the Final Synthesis Studio\n            of the Master Degree in Communication Design offered by Politecnico di Milano.\n          </p>\n          <p>\n            The research examined petitions published on change.org during the pandemic. Starting\n            from an analysis of the main petition themes across different countries, the focus of\n            the research narrowed down to the images and language used on the platform.\n          </p>\n          <p>\n            The aim of this website is to make the dataset used in this research available to\n            researchers and potential activists interested in the subject. To do this, we set\n            ourselves the objective of realising a tool to explore the language and arguments used\n            in comments to petitions regarding the mask mandate in the{' '}\n            <HoverImage imageUrl=\"https://media4.giphy.com/media/UPm8BqL6igDUPZ29ik/200.gif\">\n              United States\n            </HoverImage>\n            .\n          </p>\n\n          <section id=\"data\">\n            <h2>Data</h2>\n            <p>\n              Comments on change.org differ slightly from comments on other platforms. Only those\n              who signed a petition can leave a comment on it, as the platform intends comments as\n              \"reasons to sign\" and prompts users to explain why they signed right after they do so.\n              This means there are no comments against a petition but only comments supporting it.\n            </p>\n            <p>\n              When publishing a petition on change.org, users must add at least one tag to indicate\n              its general subject. Tags differ from country to country, and the{' '}\n              <HoverImage imageUrl=\"https://c.tenor.com/HbNBhv5Qt3cAAAAC/reaction-trump.gif\">\n                United States is the only country\n              </HoverImage>{' '}\n              with tags both in favour and against the same issue: mask mandates. Finding this\n              interesting, we decided to collect all the petitions that used these tags.\n            </p>\n            <p>\n              The first step was compiling a list of all the tags related to mask mandates and group\n              them according to their position: in favour or against.\n            </p>\n            <div>\n              <Image\n                image={images.find(i => i.relativePath === 'about/tags.png')}\n                className=\"mx-auto w-7/12\"\n              />\n            </div>\n            <p>\n              We then made a list of all the petitions presenting at least one of the tags above.\n              Since there was no easy way to do this from the website, we wrote a script in python\n              to do this for us. The script sends requests to change.org's server-side API, asking\n              for all the petitions tagged with a specific tag. The server then answers back with a{' '}\n              <HoverImage imageUrl=\"https://media.giphy.com/media/xT3i16tDII3UHUpjVe/giphy.gif\">\n                *.json\n              </HoverImage>{' '}\n              file containing all the petitions we asked for — this includes the title, body, image,\n              signature count, etc.\n            </p>\n            <div className=\"text-base w-full overflow-hidden no-scrollbar border-2 border-black rounded-3xl w-7/12 mx-auto\">\n              <h3 className=\"bg-black text-white px-8 py-4 sticky top-0 left-0 select-none\">\n                <code>petition.json</code>\n              </h3>\n              <pre className=\"px-8 py-4 h-96 bg-white overflow-scroll\">\n                {JSON.stringify(petitionJson.items[0].petition, null, 2)}\n              </pre>\n            </div>\n            <p>\n              We filtered the petitions, selecting only the 100 most signed in both groups. Once we\n              had the petitions, we could use their ID to ask the API for their comments. Once\n              again, the server answered back with a *.json file containing all the comments for\n              each petition.\n            </p>\n\n            <div className=\"text-base w-full overflow-hidden border-2 border-black rounded-3xl w-7/12 mx-auto\">\n              <h3 className=\"bg-black text-white px-8 py-4 sticky top-0 left-0 select-none\">\n                <code>comments.json</code>\n              </h3>\n              <pre className=\"px-8 py-4 h-96 bg-white overflow-scroll no-scrollbar\">\n                {JSON.stringify(commentJson.items, null, 2)}\n              </pre>\n            </div>\n            <p>\n              Once all the comments were gathered, we used Google Natural Language API to extract\n              entities from the dataset — these are words and n-grams. This was a quick and easy way\n              to get rid of punctuation, articles, conjunctions and verbs.\n            </p>\n\n            <div>\n              <Image\n                image={images.find(i => i.relativePath === 'about/google-nl.png')}\n                className=\"mx-auto w-7/12\"\n              />\n            </div>\n\n            <p>\n              At this point, we counted how many times each word appeared and converted the absolute\n              number to percentage values for both groups.\n            </p>\n            <div>\n              <Image\n                image={images.find(i => i.relativePath === 'about/sheets.png')}\n                onClick={() =>\n                  window.open(\n                    'https://docs.google.com/spreadsheets/d/1XJLmkWSeTswgk32Ap1tPVyqcX_qy__h7pV7zGfd067Y/edit?usp=sharing',\n                    '_blank'\n                  )\n                }\n                className=\"mx-auto w-7/12 cursor-pointer\"\n              />\n            </div>\n\n            <p>\n              We then used these percentages to determine whether the word was used with the same\n              frequency by both groups or if one used it more than the other. We used the following\n              proportion to transform the two percentages into a single, more readable metric.\n            </p>\n            <div>\n              <Image\n                image={images.find(i => i.relativePath === 'about/normalize.png')}\n                onClick={() =>\n                  window.open(\n                    'https://docs.google.com/spreadsheets/d/1XJLmkWSeTswgk32Ap1tPVyqcX_qy__h7pV7zGfd067Y/edit?usp=sharing',\n                    '_blank'\n                  )\n                }\n                className=\"mx-auto w-full\"\n              />\n            </div>\n          </section>\n\n          <section id=\"interactions\">\n            <h2>Interactions</h2>\n            <p>\n              The archive presents two kinds of information: how often a word is used by a certain\n              group and which are the comments mentioning that word. Presenting both information to\n              the same panel would result in an overcrowded interface,{' '}\n              <HoverImage imageUrl=\"https://i.pinimg.com/originals/93/a6/42/93a642306c8514a49749bdd557c4b46a.gif\">\n                confusing the user\n              </HoverImage>\n              .\n            </p>\n            <p>\n              For this reason we decided to present the information in two different screens:\n              related words and opinions. Such a division also allowed us to give sequentiality to\n              the navigation, forcing the user to see how a word is used before reading the\n              comments. This offers preliminary information to the user while they’re deciding which\n              comments to read while also allowing them to understand the context of the comments\n              they’re reading of one and the{' '}\n              <HoverImage imageUrl=\"https://aptly.de/wp-content/uploads/2016/03/When-I-send-requirements-to-another-scrum-team.gif\">\n                other side\n              </HoverImage>\n              .\n            </p>\n          </section>\n\n          <section id=\"team\">\n            <h2 id=\"team\">The team</h2>\n            <p>This project was created by:</p>\n\n            <div className=\"grid grid-cols-4 gap-4\">\n              {team.map((t, i) => (\n                <div className=\"relative group\" key={t.publicURL}>\n                  <Image\n                    image={meme.nodes[i]}\n                    className=\"absolute opacity-0  group-hover:opacity-100 z-[-1] group-hover:z-20 right-1/2 top-1/2 -translate-y-1/2 translate-x-2/3\"\n                    style={{minWidth: '15vw'}}\n                  />\n\n                  <Image image={t} />\n                </div>\n              ))}\n            </div>\n          </section>\n        </article>\n\n        <nav className=\"relative uppercase\" id=\"about-nav\">\n          <ul className=\"nav flex flex-col gap-y-2 z-10 sticky top-24\">\n            <li className=\"nav-item\">\n              <Button className=\"nav-link\" as=\"a\" href=\"#data\" light>\n                Data\n              </Button>\n            </li>\n            <li className=\"nav-item\">\n              <Button as=\"a\" href=\"#interactions\" className=\"nav-link\" light>\n                Interactions\n              </Button>\n            </li>\n            <li className=\"nav-item\">\n              <Button as=\"a\" href=\"#team\" className=\"nav-link\" light>\n                The team\n              </Button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  {\n    images: allFile(filter: {relativeDirectory: {eq: \"about\"}}) {\n      nodes {\n        childImageSharp {\n          gatsbyImageData\n        }\n        id\n        relativePath\n        publicURL\n      }\n    }\n    team: allFile(filter: {relativeDirectory: {eq: \"team\"}}, sort: {fields: [name], order: ASC}) {\n      nodes {\n        childImageSharp {\n          gatsbyImageData\n        }\n        id\n        relativePath\n        publicURL\n      }\n    }\n    meme: allFile(filter: {relativeDirectory: {eq: \"meme\"}}, sort: {fields: [name], order: ASC}) {\n      nodes {\n        childImageSharp {\n          gatsbyImageData\n        }\n        id\n        relativePath\n        publicURL\n      }\n    }\n  }\n`;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","HoverImage","children","image","component","imageUrl","props","imgClassName","className","onMouseMove","e","target","parentNode","querySelector","style","display","transform","clientX","clientY","onMouseLeave","Image","minWidth","transitionDuration","transitionTimingFunction","src","About","data","images","nodes","meme","team","useLayoutEffect","ScrollSpy","console","log","scrollSpy","document","body","offset","dispose","Layout","container","footer","light","id","find","i","relativePath","JSON","stringify","petitionJson","commentJson","onClick","window","open","map","t","publicURL","Button","as","href","gsap","ScrollTrigger","defaultProps","components","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"sourceRoot":""}