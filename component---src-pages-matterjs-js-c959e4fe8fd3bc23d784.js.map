{"version":3,"file":"component---src-pages-matterjs-js-c959e4fe8fd3bc23d784.js","mappings":"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","sources":["webpack://phase-03/./node_modules/matter-dom-plugin/src/body/DomBody.js","webpack://phase-03/./node_modules/matter-dom-plugin/src/constraint/DomMouseConstraint.js","webpack://phase-03/./node_modules/matter-dom-plugin/src/core/Engine.js","webpack://phase-03/./node_modules/matter-dom-plugin/src/factory/DomBodies.js","webpack://phase-03/./node_modules/matter-dom-plugin/src/matter-dom-plugin.js","webpack://phase-03/./node_modules/matter-dom-plugin/src/render/RenderDom.js","webpack://phase-03/./src/pages/matterjs.js"],"sourcesContent":["var DomBody = {};\n\nmodule.exports = function (Matter) {\n  var Vertices = Matter.Vertices;\n  var Vector = Matter.Vector;\n  var Sleeping = Matter.Sleeping;\n  var Render = Matter.Render;\n  var Common = Matter.Common;\n  var Bounds = Matter.Bounds;\n  var Axes = Matter.Axes;\n  var Body = Matter.Body;\n  var Events = Matter.Events; // Extend Body\n\n  DomBody = Common.clone(Body, true);\n\n  DomBody.create = function (options) {\n    var body = Body.create.apply(null, arguments); //body.Dom.element.setAttribute('matter-id', body.id);\n\n    return body;\n  };\n\n  DomBody.setVertices = function (body, vertices) {\n    Body.setVertices.apply(null, arguments);\n  };\n\n  DomBody.setPosition = function (body, position) {\n    Body.setPosition.apply(null, arguments);\n  };\n\n  DomBody.setAngle = function (body, angle) {\n    Body.setAngle.apply(null, arguments);\n  };\n\n  DomBody.scale = function (body, scaleX, scaleY, point) {\n    Body.scale.apply(null, arguments);\n  };\n\n  DomBody.update = function (body, deltaTime, timeScale, correction) {\n    Body.update.apply(null, arguments);\n  };\n\n  return DomBody;\n};","var DomMouseConstraint = {};\n\nmodule.exports = function (Matter) {\n  var Vertices = Matter.Vertices;\n  var Sleeping = Matter.Sleeping;\n  var Mouse = Matter.Mouse;\n  var Events = Matter.Events;\n  var Detector = Matter.Detector;\n  var Constraint = Matter.Constraint;\n  var Composite = Matter.Composite;\n  var Common = Matter.Common;\n  var Bounds = Matter.Bounds;\n\n  DomMouseConstraint.create = function (engine, options) {\n    var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n    if (!mouse) {\n      if (engine && engine.render && engine.render.canvas) {\n        mouse = Mouse.create(engine.render.canvas);\n      } else if (options && options.element) {\n        mouse = Mouse.create(options.element);\n      } else {\n        mouse = Mouse.create();\n        Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n      }\n    }\n\n    var constraint = Constraint.create({\n      label: 'Mouse Constraint',\n      pointA: mouse.position,\n      pointB: {\n        x: 0,\n        y: 0\n      },\n      length: 0.01,\n      stiffness: 0.1,\n      angularStiffness: 1,\n      render: {\n        strokeStyle: '#90EE90',\n        lineWidth: 3\n      }\n    });\n    var defaults = {\n      type: 'mouseConstraint',\n      mouse: mouse,\n      element: null,\n      body: null,\n      constraint: constraint,\n      collisionFilter: {\n        category: 0x0001,\n        mask: 0xFFFFFFFF,\n        group: 0\n      }\n    };\n    var domMouseConstraint = Common.extend(defaults, options);\n    Events.on(engine, 'beforeUpdate', function () {\n      var allBodies = Composite.allBodies(engine.world);\n      DomMouseConstraint.update(domMouseConstraint, allBodies);\n\n      _triggerEvents(domMouseConstraint);\n    });\n    return domMouseConstraint;\n  };\n\n  DomMouseConstraint.update = function (mouseConstraint, bodies) {\n    var mouse = mouseConstraint.mouse,\n        constraint = mouseConstraint.constraint,\n        body = mouseConstraint.body;\n    var mousePositionInWorld;\n\n    if (mouse.button === 0) {\n      if (!constraint.bodyB) {\n        var allDomBodies = document.querySelectorAll('[matter]');\n\n        for (var i = 0; i < bodies.length; i++) {\n          body = bodies[i];\n          mousePositionInWorld = body.Dom.render.mapping.viewToWorld(mouse.position);\n          var bodyPositionInView = body.Dom.render.mapping.worldToView(body.position);\n\n          if (Bounds.contains(body.bounds, mousePositionInWorld)) {\n            constraint.pointA = mousePositionInWorld;\n            constraint.bodyB = mouseConstraint.body = body; //constraint.pointB = {x: mousePositionInWorld.x - body.position.x, y: mousePositionInWorld.y - body.position.y};\n\n            constraint.pointB = {\n              x: 0,\n              y: 0\n            };\n            constraint.angleB = body.angle;\n            break;\n          }\n        }\n      } else {\n        Sleeping.set(constraint.bodyB, false);\n        mousePositionInWorld = body.Dom.render.mapping.viewToWorld(mouse.position);\n        constraint.pointA = mousePositionInWorld;\n      }\n    } else {\n      constraint.bodyB = mouseConstraint.body = null;\n      constraint.pointB = null;\n      if (body) Events.trigger(mouseConstraint, 'enddrag', {\n        mouse: mouse,\n        body: body\n      });\n    }\n  };\n\n  var _triggerEvents = function _triggerEvents(mouseConstraint) {\n    var mouse = mouseConstraint.mouse,\n        mouseEvents = mouse.sourceEvents;\n    if (mouseEvents.mousemove) Events.trigger(mouseConstraint, 'mousemove', {\n      mouse: mouse\n    });\n    if (mouseEvents.mousedown) Events.trigger(mouseConstraint, 'mousedown', {\n      mouse: mouse\n    });\n    if (mouseEvents.mouseup) Events.trigger(mouseConstraint, 'mouseup', {\n      mouse: mouse\n    }); // reset the mouse state ready for the next step\n\n    Mouse.clearSourceEvents(mouse);\n  };\n\n  return DomMouseConstraint;\n};","module.exports = function (Matter) {\n  // Patch Engine\n  var World = Matter.World;\n  var Sleeping = Matter.Sleeping;\n  var Resolver = Matter.Resolver;\n  var Render = Matter.Render;\n  var Pairs = Matter.Pair;\n  var Metrics = Matter.Metrics;\n  var Grid = Matter.Grid;\n  var Events = Matter.Events;\n  var Composite = Matter.Composite;\n  var Constraint = Matter.Constraint;\n  var Common = Matter.Common;\n  var Body = Matter.Body;\n  var DomBody = Matter.DomBody;\n  var Engine = Matter.Engine;\n  var superUpdate = Engine.update;\n\n  Engine.update = function (engine, delta, correction) {\n    superUpdate(engine, delta, correction);\n    delta = delta || 1000 / 60;\n    correction = correction || 1;\n    var world = engine.world;\n    var timing = engine.timing;\n    var allBodies = Composite.allBodies(world);\n\n    _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n    return engine;\n  };\n\n  var _bodiesUpdate = function _bodiesUpdate(bodies, deltaTime, timeScale, correction, worldBounds) {\n    for (var i = 0; i < bodies.length; i++) {\n      var body = bodies[i];\n      if (body.isStatic || body.isSleeping) continue;\n      DomBody.update(body, deltaTime, timeScale, correction);\n    }\n  };\n};","var DomBodies = {};\n\nmodule.exports = function (Matter) {\n  var Body = Matter.Body;\n  var Bodies = Matter.Bodies;\n  var DomBody = Matter.DomBody;\n  var Vertices = Matter.Vertices;\n  var Common = Matter.Common;\n  var World = Matter.World;\n  var Bounds = Matter.Bounds;\n  var Vector = Matter.Vector;\n\n  DomBodies.create = function (options) {\n    var bodyType = options.bodyType; // Required\n\n    var el = options.el; // Required\n\n    var render = options.render; // Required\n\n    var position = options.position; // Required\n\n    delete options.bodyType; //delete options.el;\n\n    delete options.render;\n    delete options.position;\n    options.domRenderer = render;\n    /*\r\n    options.Dom = {\r\n        render: render,\r\n        element: null\r\n    }\r\n    */\n\n    var worldBody = null;\n    var domBody = document.querySelector(el);\n    var positionInWorld = render.mapping.viewToWorld({\n      x: position.x,\n      y: position.y\n    });\n\n    if (bodyType == \"block\") {\n      var blockDimensionsInWorld = render.mapping.viewToWorld({\n        x: domBody.offsetWidth,\n        y: domBody.offsetHeight\n      }); //console.log(\"One block, please!\")\n\n      worldBody = DomBodies.OGblock(positionInWorld.x, positionInWorld.y, blockDimensionsInWorld.x, blockDimensionsInWorld.y, options);\n    } else if (bodyType == \"circle\") {\n      var circleRadiusInWorld = render.mapping.viewToWorld(domBody.offsetWidth / 2); //console.log(\"One circle, please!\");\n\n      worldBody = DomBodies.circle(positionInWorld.x, positionInWorld.y, circleRadiusInWorld, options);\n    }\n\n    if (worldBody) {\n      // TODO TEST THIS!!\n      //domBody.setAttribute('matter-id', worldBody.id);\n      World.add(render.engine.world, [worldBody]);\n    }\n\n    return worldBody;\n  };\n\n  DomBodies.OGblock = function (x, y, width, height, options) {\n    var options = options || {};\n    var block = {\n      label: 'Block Body',\n      position: {\n        x: x,\n        y: y\n      },\n      vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n    };\n\n    if (options.chamfer) {\n      var chamfer = option.chamfer;\n      block.vertices = Vertices.chamfer(block.vertices, chamfer.radius, chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n      delete options.chamfer;\n    }\n\n    return DomBody.create(Common.extend({}, block, options));\n  };\n\n  DomBodies.block = function (x, y, options) {\n    var defaults = {\n      Dom: {\n        element: null,\n        render: null\n      }\n    };\n    var options = options || {};\n    options = Common.extend(defaults, options);\n    var render = options.Dom.render;\n    var element = options.Dom.element;\n    var positionInWorld = render.mapping.viewToWorld({\n      x: x,\n      y: y\n    });\n    var elementDimensionsInWorld = render.mapping.viewToWorld({\n      x: element.offsetWidth,\n      y: element.offsetHeight\n    });\n    var block = {\n      label: 'DOM Block Body',\n      position: {\n        x: positionInWorld.x,\n        y: positionInWorld.y\n      },\n      vertices: Vertices.fromPath('L 0 0 L ' + elementDimensionsInWorld.x + ' 0 L ' + elementDimensionsInWorld.x + ' ' + elementDimensionsInWorld.y + ' L 0 ' + elementDimensionsInWorld.y)\n    };\n\n    if (options.chamfer) {\n      var chamfer = option.chamfer;\n      block.vertices = Vertices.chamfer(block.vertices, chamfer.radius, chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n      delete options.chamfer;\n    }\n\n    var body = DomBody.create(Common.extend({}, block, options)); //element.setAttribute('matter-id', body.id);\n\n    return body;\n  };\n\n  DomBodies.circle = function (x, y, radius, options, maxSides) {\n    options = options || {};\n    var circle = {\n      label: 'Circle Body',\n      circleRadius: radius\n    }; // approximate circles with polygons until true circles implemented in SAT\n\n    maxSides = maxSides || 25;\n    var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius))); // optimisation: always use even number of sides (half the number of unique axes)\n\n    if (sides % 2 === 1) sides += 1;\n    return DomBodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n  };\n\n  DomBodies.polygon = function (x, y, sides, radius, options) {\n    options = options || {};\n    if (sides < 3) return Bodies.circle(x, y, radius, options);\n    var theta = 2 * Math.PI / sides,\n        path = '',\n        offset = theta * 0.5;\n\n    for (var i = 0; i < sides; i += 1) {\n      var angle = offset + i * theta,\n          xx = Math.cos(angle) * radius,\n          yy = Math.sin(angle) * radius;\n      path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n    }\n\n    var polygon = {\n      label: 'Polygon Body',\n      position: {\n        x: x,\n        y: y\n      },\n      vertices: Vertices.fromPath(path)\n    };\n\n    if (options.chamfer) {\n      var chamfer = options.chamfer;\n      polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n      delete options.chamfer;\n    }\n\n    return DomBody.create(Common.extend({}, polygon, options));\n  };\n\n  return DomBodies;\n};","var Matter = require('matter-js');\n\nvar RenderDom = require('./render/RenderDom.js');\n\nvar DomBody = require('./body/DomBody.js');\n\nvar DomBodies = require('./factory/DomBodies.js');\n\nvar DomMouseConstraint = require('./constraint/DomMouseConstraint.js');\n\nvar Engine = require('./core/Engine.js');\n\nvar MatterDomPlugin = {\n  name: 'matter-dom-plugin',\n  version: '1.0.0',\n  for: 'matter-js@^0.12.0',\n  install: function install(matter) {\n    MatterDomPlugin.installRenderDom(matter);\n    MatterDomPlugin.installDomBody(matter);\n    MatterDomPlugin.installDomBodies(matter); // Depends on DomBody\n\n    MatterDomPlugin.installDomMouseConstraint(matter);\n    MatterDomPlugin.installEngine(matter);\n  },\n  installRenderDom: function installRenderDom(matter) {\n    console.log(\"Installing RenderDom module.\");\n    matter.RenderDom = RenderDom(matter);\n  },\n  installDomBodies: function installDomBodies(matter) {\n    console.log(\"Installing DomBodies module.\");\n    matter.DomBodies = DomBodies(matter);\n  },\n  installDomMouseConstraint: function installDomMouseConstraint(matter) {\n    console.log(\"Installing DomMouseConstraint.\");\n    matter.DomMouseConstraint = DomMouseConstraint(matter);\n  },\n  installDomBody: function installDomBody(matter) {\n    console.log(\"Installing DomBody updates.\");\n    matter.DomBody = DomBody(matter);\n  },\n  installEngine: function installEngine(matter) {\n    console.log(\"Patching Engine.\");\n    Engine(matter);\n  }\n};\nMatter.Plugin.register(MatterDomPlugin);\nmodule.exports.MatterDomPlugin = MatterDomPlugin;","var RenderDom = {};\n\nmodule.exports = function (Matter) {\n  var Common = Matter.Common;\n  var Composite = Matter.Composite;\n  var Events = Matter.Events;\n  var Render = Matter.Render;\n\n  var _requestAnimationFrame, _cancelAnimationFrame;\n\n  if (typeof window !== 'undefined') {\n    _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      window.setTimeout(function () {\n        callback(Common.now());\n      }, 1000 / 60);\n    };\n\n    _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n  }\n\n  RenderDom.create = function (options) {\n    var defaults = {\n      engine: null,\n      element: window,\n      controller: RenderDom,\n      frameRequestId: null,\n      options: {}\n    };\n    /*\r\n    try{\r\n        if(!options){\r\n            throw (new Error('No engine was specified. Create an options object and specify the engine with the engine property.'));\r\n        }\r\n          if(!options.engine){\r\n            throw (new Error('No engine was specified. Create an options object and specify the engine with the engine property.'));\r\n        }\r\n    }catch(e){\r\n        console.log(`${e.name}: ${e.message}`);\r\n        return;\r\n    }*/\n\n    var engine = options.engine;\n    var render = Common.extend(defaults, options);\n    render.mapping = {};\n    render.mapping.ratioMultiplier = 1 / 6; // VIEW is base ratio. Mapping to World.\n\n    render.mapping.VIEW = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    render.mapping.VIEW.center = {\n      x: render.mapping.VIEW.width / 2,\n      y: render.mapping.VIEW.height / 2\n    };\n    render.mapping.WORLD = {\n      width: render.mapping.VIEW.width * render.mapping.ratioMultiplier,\n      height: render.mapping.VIEW.height * render.mapping.ratioMultiplier\n    };\n    render.mapping.WORLD.center = {\n      x: render.mapping.WORLD.width / 2,\n      y: render.mapping.WORLD.height / 2\n    };\n\n    render.mapping.viewToWorld = function (value) {\n      if (typeof value === 'object' && value !== null) {\n        return {\n          x: render.mapping.ratioMultiplier * value.x,\n          y: render.mapping.ratioMultiplier * value.y\n        };\n      } else {\n        return render.mapping.ratioMultiplier * value;\n      }\n    };\n\n    render.mapping.worldToView = function (value) {\n      if (typeof value === 'object' && value !== null) {\n        return {\n          x: value.x / render.mapping.ratioMultiplier,\n          y: value.y / render.mapping.ratioMultiplier\n        };\n      } else {\n        return value / render.mapping.ratioMultiplier;\n      }\n    };\n\n    var debugElement = document.querySelector('#debug');\n    debugElement.style.position = \"absolute\";\n    var debugRender = Render.create({\n      element: document.querySelector('#debug'),\n      engine: engine,\n      options: {\n        width: render.mapping.WORLD.width,\n        height: render.mapping.WORLD.height,\n        background: '#fafafa',\n        wireframeBackground: '#222',\n        hasBounds: false,\n        enabled: true,\n        wireframes: true,\n        showSleeping: true,\n        showDebug: false,\n        showBroadphase: false,\n        showBounds: false,\n        showVelocity: false,\n        showCollisions: false,\n        showAxes: false,\n        showPositions: false,\n        showAngleIndicator: false,\n        showIds: false,\n        showShadows: false\n      }\n    });\n    Render.run(debugRender);\n    render.DebugRender = debugRender;\n    return render;\n  };\n\n  RenderDom.run = function (render) {\n    (function loop(time) {\n      render.frameRequestId = _requestAnimationFrame(loop);\n      RenderDom.world(render);\n    })();\n  };\n\n  RenderDom.stop = function (render) {\n    _cancelAnimationFrame(render.frameRequestId);\n  };\n\n  RenderDom.world = function (render) {\n    var engine = render.engine,\n        world = engine.world,\n        allBodies = Composite.allBodies(world),\n        allConstraints = Composite.allConstraints(world),\n        domBodies = document.querySelectorAll('[matter]');\n    var event = {\n      timestamp: engine.timing.timestamp\n    };\n    Events.trigger(render, 'beforeRender', event); // TODO bounds if specified\n\n    RenderDom.bodies(render, domBodies);\n  };\n  /**\r\n   * Map Dom view elements position to matter world bodys position\r\n   */\n\n\n  RenderDom.bodies = function (render, bodies, context) {\n    var c = context,\n        engine = render.engine,\n        world = engine.world,\n        options = render.options,\n        matterBodies = Composite.allBodies(world),\n        domBody;\n\n    for (var i = 0; i < matterBodies.length; i++) {\n      var matterBody = matterBodies[i];\n\n      for (var k = matterBody.parts.length > 1 ? 1 : 0; k < matterBody.parts.length; k++) {\n        var matterPart = matterBody.parts[k];\n        var domPart = matterPart.Dom.element;\n        var bodyWorldPoint = render.mapping.worldToView({\n          x: matterPart.position.x,\n          y: matterPart.position.y\n        });\n        var bodyViewOffset = {\n          x: domPart.offsetWidth / 2,\n          y: domPart.offsetHeight / 2\n        };\n        domPart.style.position = \"absolute\";\n        domPart.style.transform = \"translate(\".concat(bodyWorldPoint.x - bodyViewOffset.x, \"px, \").concat(bodyWorldPoint.y - bodyViewOffset.y, \"px)\");\n        domPart.style.transform += \"rotate(\".concat(matterBody.angle, \"rad)\");\n      }\n    }\n  };\n\n  return RenderDom;\n};","import React from \"react\";\n\n\nimport {useEffect, useRef} from 'react'\nimport Matter, {Engine, Render, Bodies, World,} from 'matter-js'\nimport 'matter-dom-plugin'\nimport Layout from \"../components/Layout\";\n\nfunction Comp(props) {\n    const scene = useRef()\n    const engine = useRef(Engine.create())\n    useEffect(() => {\n\n        Matter.use('matter-dom-plugin')\n\n        // mount\n        const cw = document.body.clientWidth\n        const ch = document.body.clientHeight\n\n        const render = Render.create({\n            element: scene.current,\n            engine: engine.current,\n            options: {\n                width: cw,\n                height: ch,\n                wireframes: false,\n                background: 'transparent'\n            }\n        })\n\n        // unmount\n        return () => {\n            // destroy Matter\n            Render.stop(render)\n            World.clear(engine.current.world)\n            Engine.clear(engine.current)\n            render.canvas.remove()\n            render.canvas = null\n            render.context = null\n            render.textures = {}\n        }\n    }, [])\n\n    return <Layout>\n        <div ref={scene} className={\"w-screen h-screen\"} />\n    </Layout>\n\n}\n\nexport default Comp"],"names":["DomBody","module","exports","Matter","Vertices","Vector","Sleeping","Render","Common","Body","Bounds","Axes","Events","clone","create","options","body","apply","arguments","setVertices","vertices","setPosition","position","setAngle","angle","scale","scaleX","scaleY","point","update","deltaTime","timeScale","correction","DomMouseConstraint","Mouse","Constraint","Detector","Composite","engine","mouse","render","canvas","element","warn","defaults","type","constraint","label","pointA","pointB","x","y","length","stiffness","angularStiffness","strokeStyle","lineWidth","collisionFilter","category","mask","group","domMouseConstraint","extend","on","allBodies","world","_triggerEvents","mouseConstraint","bodies","mousePositionInWorld","button","bodyB","set","Dom","mapping","viewToWorld","document","querySelectorAll","i","worldToView","contains","bounds","angleB","trigger","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","World","Resolver","Pair","Metrics","Grid","Engine","superUpdate","delta","timing","_bodiesUpdate","worldBounds","isStatic","isSleeping","DomBodies","Bodies","bodyType","el","domRenderer","worldBody","domBody","querySelector","positionInWorld","blockDimensionsInWorld","offsetWidth","offsetHeight","OGblock","circleRadiusInWorld","circle","add","width","height","block","fromPath","chamfer","option","radius","quality","qualityMin","qualityMax","elementDimensionsInWorld","maxSides","circleRadius","sides","Math","ceil","max","min","polygon","theta","PI","path","offset","xx","cos","yy","sin","toFixed","RenderDom","MatterDomPlugin","name","version","for","install","matter","installRenderDom","installDomBody","installDomBodies","installDomMouseConstraint","installEngine","console","log","Plugin","register","_requestAnimationFrame","_cancelAnimationFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","now","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","controller","frameRequestId","ratioMultiplier","VIEW","innerWidth","innerHeight","center","WORLD","value","style","debugRender","background","wireframeBackground","hasBounds","enabled","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showAxes","showPositions","showAngleIndicator","showIds","showShadows","run","DebugRender","loop","time","stop","domBodies","allConstraints","event","timestamp","context","matterBodies","matterBody","k","parts","matterPart","domPart","bodyWorldPoint","bodyViewOffset","transform","concat","props","scene","useRef","useEffect","cw","clientWidth","ch","clientHeight","current","remove","textures","ref","className"],"sourceRoot":""}