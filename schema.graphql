# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Add date formatting options."
directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

"Link to node by foreign-key relation."
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"Link to File node by relative path."
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"Proxy resolver from another field."
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"Infer field types from field values."
directive @infer on OBJECT

"Do not infer field types from field values."
directive @dontInfer on OBJECT

"Define the mime-types handled by this type."
directive @mimeTypes(
    "The mime-types handled by this type."
    types: [String!]! = []
) on OBJECT

"Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`."
directive @childOf(
    "A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin."
    mimeTypes: [String!]! = [],
    "A list of types this type is a child of. Usually these are the types handled by a transformer plugin."
    types: [String!]! = []
) on OBJECT

"""

DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".

Adds root query fields for an interface. All implementing types must also implement the Node interface.
"""
directive @nodeInterface on INTERFACE

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type CommentsJson implements Node {
    children: [Node!]!
    comment: String
    commentId: Int
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    internal: Internal!
    origin: String
    parent: Node
    petition: CommentsJsonPetition
    sentences: [[String]]
    showInHome: Boolean
    user: Int
}

type CommentsJsonConnection {
    distinct(field: CommentsJsonFieldsEnum!): [String!]!
    edges: [CommentsJsonEdge!]!
    group(field: CommentsJsonFieldsEnum!, limit: Int, skip: Int): [CommentsJsonGroupConnection!]!
    max(field: CommentsJsonFieldsEnum!): Float
    min(field: CommentsJsonFieldsEnum!): Float
    nodes: [CommentsJson!]!
    pageInfo: PageInfo!
    sum(field: CommentsJsonFieldsEnum!): Float
    totalCount: Int!
}

type CommentsJsonEdge {
    next: CommentsJson
    node: CommentsJson!
    previous: CommentsJson
}

type CommentsJsonGroupConnection {
    distinct(field: CommentsJsonFieldsEnum!): [String!]!
    edges: [CommentsJsonEdge!]!
    field: String!
    fieldValue: String
    group(field: CommentsJsonFieldsEnum!, limit: Int, skip: Int): [CommentsJsonGroupConnection!]!
    max(field: CommentsJsonFieldsEnum!): Float
    min(field: CommentsJsonFieldsEnum!): Float
    nodes: [CommentsJson!]!
    pageInfo: PageInfo!
    sum(field: CommentsJsonFieldsEnum!): Float
    totalCount: Int!
}

type CommentsJsonPetition {
    created_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    slug: String
    title: String
}

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    "Returns the first child node of type CommentsJson or null if there are no children of given type on this node"
    childCommentsJson: CommentsJson
    "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
    childImageSharp: ImageSharp
    "Returns the first child node of type ImagesJson or null if there are no children of given type on this node"
    childImagesJson: ImagesJson
    children: [Node!]!
    "Returns all children nodes filtered by type CommentsJson"
    childrenCommentsJson: [CommentsJson]
    "Returns all children nodes filtered by type ImageSharp"
    childrenImageSharp: [ImageSharp]
    "Returns all children nodes filtered by type ImagesJson"
    childrenImagesJson: [ImagesJson]
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Options to pass to sharp when generating AVIF images."
        avifOptions: AVIFOptions,
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat],
        """

        The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
        The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
        matching the aspect ratio of the source image.
        """
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
        and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overridden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download.
        You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
        does not actually span the full width of the screen, in which case you should pass the correct size here.
        """
        sizes: String,
        "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type ImagesJson implements Node {
    children: [Node!]!
    count: Int
    id: ID!
    internal: Internal!
    items: [ImagesJsonItems]
    last_page: Boolean
    limit: Int
    offset: Int
    order: String
    parent: Node
    query_source: String
    total_count: Int
}

type ImagesJsonConnection {
    distinct(field: ImagesJsonFieldsEnum!): [String!]!
    edges: [ImagesJsonEdge!]!
    group(field: ImagesJsonFieldsEnum!, limit: Int, skip: Int): [ImagesJsonGroupConnection!]!
    max(field: ImagesJsonFieldsEnum!): Float
    min(field: ImagesJsonFieldsEnum!): Float
    nodes: [ImagesJson!]!
    pageInfo: PageInfo!
    sum(field: ImagesJsonFieldsEnum!): Float
    totalCount: Int!
}

type ImagesJsonEdge {
    next: ImagesJson
    node: ImagesJson!
    previous: ImagesJson
}

type ImagesJsonGroupConnection {
    distinct(field: ImagesJsonFieldsEnum!): [String!]!
    edges: [ImagesJsonEdge!]!
    field: String!
    fieldValue: String
    group(field: ImagesJsonFieldsEnum!, limit: Int, skip: Int): [ImagesJsonGroupConnection!]!
    max(field: ImagesJsonFieldsEnum!): Float
    min(field: ImagesJsonFieldsEnum!): Float
    nodes: [ImagesJson!]!
    pageInfo: PageInfo!
    sum(field: ImagesJsonFieldsEnum!): Float
    totalCount: Int!
}

type ImagesJsonItems {
    card_context: ImagesJsonItemsCard_context
    children_count: Int
    comment: String
    commentable_entity: ImagesJsonItemsCommentable_entity
    commentable_id: Int
    commentable_type: String
    created_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    likes: Int
    parent_id: Int
    petition: ImagesJsonItemsPetition
    role: String
    user: ImagesJsonItemsUser
}

type ImagesJsonItemsCard_context {
    kind: String
    weekly_signature_count: Int
}

type ImagesJsonItemsCommentable_entity {
    activity: ImagesJsonItemsCommentable_entityActivity
    ask: String
    calculated_goal: Int
    created_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    creator_name: String
    creator_photo: ImagesJsonItemsCommentable_entityCreator_photo
    daily_signature_count: Int
    daily_signup_count: Int
    description: String
    discoverable: Boolean
    display_title: String
    displayed_signature_count: Int
    document_id: String
    enable_human_verification: Boolean
    hide_comments: Boolean
    hide_dm_action_panel: Boolean
    id: Int
    is_pledge: Boolean
    is_verified_victory: Boolean
    is_victory: Boolean
    languages: [String]
    last_edited_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    letter_body: String
    media: ImagesJsonItemsCommentable_entityMedia
    monthly_signature_count: Int
    monthly_signup_count: Int
    organization: ImagesJsonItemsCommentable_entityOrganization
    original_locale: String
    petition_status: String
    petition_title: String
    photo: ImagesJsonItemsCommentable_entityPhoto
    primary_target: ImagesJsonItemsCommentable_entityPrimary_target
    progress: Float
    published_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    relevant_location: ImagesJsonItemsCommentable_entityRelevant_location
    slug: String
    sponsored_campaign: Boolean
    status: String
    tags: [ImagesJsonItemsCommentable_entityTags]
    targeting_description: String
    targets: [ImagesJsonItemsCommentable_entityTargets]
    title: String
    total_page_views: Int
    total_share_count: Int
    total_signature_count: Int
    total_signup_count: Int
    user: ImagesJsonItemsCommentable_entityUser
    weekly_signature_count: Int
    weekly_signup_count: Int
}

type ImagesJsonItemsCommentable_entityActivity {
    recruit__count: Int
    recruit__last_updated: Int
    recruit_abi_gmail_count: Int
    recruit_abi_gmail_last_updated: Int
    recruit_copylink_count: Int
    recruit_copylink_last_updated: Int
    recruit_email_count: Int
    recruit_email_last_updated: Int
    recruit_facebook_count: Int
    recruit_facebook_last_updated: Int
    recruit_facebook_messenger_mobile_count: Int
    recruit_facebook_messenger_mobile_last_updated: Int
    recruit_sms_count: Int
    recruit_sms_last_updated: Int
    recruit_twitter_count: Int
    recruit_twitter_last_updated: Int
    recruit_whatsapp_count: Int
    recruit_whatsapp_last_updated: Int
    share_copylink_count: Int
    share_copylink_last_updated: Float
    share_email_count: Int
    share_email_last_updated: Float
    share_facebook_count: Int
    share_facebook_last_updated: Float
    share_facebook_messenger_count: Int
    share_facebook_messenger_last_updated: Float
    share_sms_count: Int
    share_sms_last_updated: Float
    share_twitter_count: Int
    share_twitter_last_updated: Float
    share_whatsapp_count: Int
    share_whatsapp_last_updated: Float
}

type ImagesJsonItemsCommentable_entityCreator_photo {
    id: Int
    sizes: ImagesJsonItemsCommentable_entityCreator_photoSizes
    url: String
}

type ImagesJsonItemsCommentable_entityCreator_photoSizes {
    large: ImagesJsonItemsCommentable_entityCreator_photoSizesLarge
    medium: ImagesJsonItemsCommentable_entityCreator_photoSizesMedium
    small: ImagesJsonItemsCommentable_entityCreator_photoSizesSmall
}

type ImagesJsonItemsCommentable_entityCreator_photoSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityCreator_photoSizesLargeSize
    url: String
}

type ImagesJsonItemsCommentable_entityCreator_photoSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityCreator_photoSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityCreator_photoSizesMediumSize
    url: String
}

type ImagesJsonItemsCommentable_entityCreator_photoSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityCreator_photoSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityCreator_photoSizesSmallSize
    url: String
}

type ImagesJsonItemsCommentable_entityCreator_photoSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityMedia {
    id: Int
    sizes: ImagesJsonItemsCommentable_entityMediaSizes
    type: String
    url: String
}

type ImagesJsonItemsCommentable_entityMediaSizes {
    large: ImagesJsonItemsCommentable_entityMediaSizesLarge
    medium: ImagesJsonItemsCommentable_entityMediaSizesMedium
    small: ImagesJsonItemsCommentable_entityMediaSizesSmall
    square: ImagesJsonItemsCommentable_entityMediaSizesSquare
}

type ImagesJsonItemsCommentable_entityMediaSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityMediaSizesLargeSize
    url: String
}

type ImagesJsonItemsCommentable_entityMediaSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityMediaSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityMediaSizesMediumSize
    url: String
}

type ImagesJsonItemsCommentable_entityMediaSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityMediaSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityMediaSizesSmallSize
    url: String
}

type ImagesJsonItemsCommentable_entityMediaSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityMediaSizesSquare {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityMediaSizesSquareSize
    url: String
}

type ImagesJsonItemsCommentable_entityMediaSizesSquareSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityOrganization {
    country_code: String
    formatted_location_string: String
    id: Int
    name: String
    photo: ImagesJsonItemsCommentable_entityOrganizationPhoto
    slug: String
    website: String
}

type ImagesJsonItemsCommentable_entityOrganizationPhoto {
    id: Int
    sizes: ImagesJsonItemsCommentable_entityOrganizationPhotoSizes
    url: String
}

type ImagesJsonItemsCommentable_entityOrganizationPhotoSizes {
    large: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesLarge
    medium: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesMedium
    small: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesSmall
}

type ImagesJsonItemsCommentable_entityOrganizationPhotoSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesLargeSize
    url: String
}

type ImagesJsonItemsCommentable_entityOrganizationPhotoSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityOrganizationPhotoSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesMediumSize
    url: String
}

type ImagesJsonItemsCommentable_entityOrganizationPhotoSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityOrganizationPhotoSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesSmallSize
    url: String
}

type ImagesJsonItemsCommentable_entityOrganizationPhotoSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityPhoto {
    id: Int
    sizes: ImagesJsonItemsCommentable_entityPhotoSizes
    type: String
    url: String
}

type ImagesJsonItemsCommentable_entityPhotoSizes {
    large: ImagesJsonItemsCommentable_entityPhotoSizesLarge
    medium: ImagesJsonItemsCommentable_entityPhotoSizesMedium
    small: ImagesJsonItemsCommentable_entityPhotoSizesSmall
    square: ImagesJsonItemsCommentable_entityPhotoSizesSquare
}

type ImagesJsonItemsCommentable_entityPhotoSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityPhotoSizesLargeSize
    url: String
}

type ImagesJsonItemsCommentable_entityPhotoSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityPhotoSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityPhotoSizesMediumSize
    url: String
}

type ImagesJsonItemsCommentable_entityPhotoSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityPhotoSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityPhotoSizesSmallSize
    url: String
}

type ImagesJsonItemsCommentable_entityPhotoSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityPhotoSizesSquare {
    processing: Boolean
    size: ImagesJsonItemsCommentable_entityPhotoSizesSquareSize
    url: String
}

type ImagesJsonItemsCommentable_entityPhotoSizesSquareSize {
    height: Int
    width: Int
}

type ImagesJsonItemsCommentable_entityPrimary_target {
    additional_data: ImagesJsonItemsCommentable_entityPrimary_targetAdditional_data
    display_name: String
    has_email: Boolean
    id: Int
    is_person: Boolean
    publicly_visible: Boolean
    slug: String
    type: String
}

type ImagesJsonItemsCommentable_entityPrimary_targetAdditional_data {
    first_name: String
    last_name: String
    title: String
}

type ImagesJsonItemsCommentable_entityRelevant_location {
    city: String
    country_code: String
    google_places_id: String
    lat: Float
    lng: Float
}

type ImagesJsonItemsCommentable_entityTags {
    created_by_owner: Boolean
    created_by_staff_member: Boolean
    id: Int
    locale: String
    name: String
    photo_id: Int
    slug: String
    total_count: Int
}

type ImagesJsonItemsCommentable_entityTargets {
    additional_data: ImagesJsonItemsCommentable_entityTargetsAdditional_data
    display_name: String
    has_email: Boolean
    id: Int
    is_person: Boolean
    publicly_visible: Boolean
    slug: String
    type: String
}

type ImagesJsonItemsCommentable_entityTargetsAdditional_data {
    first_name: String
    last_name: String
    title: String
}

type ImagesJsonItemsCommentable_entityUser {
    city: String
    country_code: String
    display_name: String
    first_name: String
    id: Int
    last_name: String
    locale: String
    short_display_name: String
    slug: String
}

type ImagesJsonItemsPetition {
    activity: ImagesJsonItemsPetitionActivity
    ask: String
    calculated_goal: Int
    created_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    creator_name: String
    creator_photo: ImagesJsonItemsPetitionCreator_photo
    daily_signature_count: Int
    daily_signup_count: Int
    description: String
    discoverable: Boolean
    display_title: String
    displayed_signature_count: Int
    document_id: String
    enable_human_verification: Boolean
    hide_comments: Boolean
    hide_dm_action_panel: Boolean
    id: Int
    is_pledge: Boolean
    is_verified_victory: Boolean
    is_victory: Boolean
    languages: [String]
    last_edited_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    letter_body: String
    media: ImagesJsonItemsPetitionMedia
    monthly_signature_count: Int
    monthly_signup_count: Int
    organization: ImagesJsonItemsPetitionOrganization
    original_locale: String
    petition_status: String
    petition_title: String
    photo: ImagesJsonItemsPetitionPhoto
    primary_target: ImagesJsonItemsPetitionPrimary_target
    progress: Float
    published_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    relevant_location: ImagesJsonItemsPetitionRelevant_location
    slug: String
    sponsored_campaign: Boolean
    status: String
    tags: [ImagesJsonItemsPetitionTags]
    targeting_description: String
    targets: [ImagesJsonItemsPetitionTargets]
    title: String
    total_page_views: Int
    total_share_count: Int
    total_signature_count: Int
    total_signup_count: Int
    user: ImagesJsonItemsPetitionUser
    victory_description: String
    weekly_signature_count: Int
    weekly_signup_count: Int
}

type ImagesJsonItemsPetitionActivity {
    recruit__count: Int
    recruit__last_updated: Int
    recruit_copylink_count: Int
    recruit_copylink_last_updated: Int
    recruit_email_count: Int
    recruit_email_last_updated: Int
    recruit_facebook_count: Int
    recruit_facebook_last_updated: Int
    recruit_facebook_messenger_mobile_count: Int
    recruit_facebook_messenger_mobile_last_updated: Int
    recruit_sms_count: Int
    recruit_sms_last_updated: Int
    recruit_twitter_count: Int
    recruit_twitter_last_updated: Int
    recruit_whatsapp_count: Int
    recruit_whatsapp_last_updated: Int
    share_copylink_count: Int
    share_copylink_last_updated: Float
    share_email_count: Int
    share_email_last_updated: Float
    share_facebook_count: Int
    share_facebook_last_updated: Float
    share_facebook_messenger_count: Int
    share_facebook_messenger_last_updated: Float
    share_sms_count: Int
    share_sms_last_updated: Float
    share_twitter_count: Int
    share_twitter_last_updated: Float
    share_whatsapp_count: Int
    share_whatsapp_last_updated: Float
}

type ImagesJsonItemsPetitionCreator_photo {
    id: Int
    sizes: ImagesJsonItemsPetitionCreator_photoSizes
    url: String
}

type ImagesJsonItemsPetitionCreator_photoSizes {
    large: ImagesJsonItemsPetitionCreator_photoSizesLarge
    medium: ImagesJsonItemsPetitionCreator_photoSizesMedium
    small: ImagesJsonItemsPetitionCreator_photoSizesSmall
}

type ImagesJsonItemsPetitionCreator_photoSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsPetitionCreator_photoSizesLargeSize
    url: String
}

type ImagesJsonItemsPetitionCreator_photoSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionCreator_photoSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsPetitionCreator_photoSizesMediumSize
    url: String
}

type ImagesJsonItemsPetitionCreator_photoSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionCreator_photoSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsPetitionCreator_photoSizesSmallSize
    url: String
}

type ImagesJsonItemsPetitionCreator_photoSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionMedia {
    id: Int
    sizes: ImagesJsonItemsPetitionMediaSizes
    type: String
    url: String
}

type ImagesJsonItemsPetitionMediaSizes {
    large: ImagesJsonItemsPetitionMediaSizesLarge
    medium: ImagesJsonItemsPetitionMediaSizesMedium
    small: ImagesJsonItemsPetitionMediaSizesSmall
    square: ImagesJsonItemsPetitionMediaSizesSquare
}

type ImagesJsonItemsPetitionMediaSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsPetitionMediaSizesLargeSize
    url: String
}

type ImagesJsonItemsPetitionMediaSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionMediaSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsPetitionMediaSizesMediumSize
    url: String
}

type ImagesJsonItemsPetitionMediaSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionMediaSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsPetitionMediaSizesSmallSize
    url: String
}

type ImagesJsonItemsPetitionMediaSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionMediaSizesSquare {
    processing: Boolean
    size: ImagesJsonItemsPetitionMediaSizesSquareSize
    url: String
}

type ImagesJsonItemsPetitionMediaSizesSquareSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionOrganization {
    address: String
    city: String
    country_code: String
    fb_page: String
    formatted_location_string: String
    id: Int
    mission: String
    name: String
    photo: ImagesJsonItemsPetitionOrganizationPhoto
    postal_code: String
    slug: String
    state: String
    state_code: String
    twitter_page: String
    website: String
    zipcode: String
}

type ImagesJsonItemsPetitionOrganizationPhoto {
    id: Int
    sizes: ImagesJsonItemsPetitionOrganizationPhotoSizes
    url: String
}

type ImagesJsonItemsPetitionOrganizationPhotoSizes {
    large: ImagesJsonItemsPetitionOrganizationPhotoSizesLarge
    medium: ImagesJsonItemsPetitionOrganizationPhotoSizesMedium
    small: ImagesJsonItemsPetitionOrganizationPhotoSizesSmall
}

type ImagesJsonItemsPetitionOrganizationPhotoSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsPetitionOrganizationPhotoSizesLargeSize
    url: String
}

type ImagesJsonItemsPetitionOrganizationPhotoSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionOrganizationPhotoSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsPetitionOrganizationPhotoSizesMediumSize
    url: String
}

type ImagesJsonItemsPetitionOrganizationPhotoSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionOrganizationPhotoSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsPetitionOrganizationPhotoSizesSmallSize
    url: String
}

type ImagesJsonItemsPetitionOrganizationPhotoSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionPhoto {
    id: Int
    sizes: ImagesJsonItemsPetitionPhotoSizes
    type: String
    url: String
}

type ImagesJsonItemsPetitionPhotoSizes {
    large: ImagesJsonItemsPetitionPhotoSizesLarge
    medium: ImagesJsonItemsPetitionPhotoSizesMedium
    small: ImagesJsonItemsPetitionPhotoSizesSmall
    square: ImagesJsonItemsPetitionPhotoSizesSquare
}

type ImagesJsonItemsPetitionPhotoSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsPetitionPhotoSizesLargeSize
    url: String
}

type ImagesJsonItemsPetitionPhotoSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionPhotoSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsPetitionPhotoSizesMediumSize
    url: String
}

type ImagesJsonItemsPetitionPhotoSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionPhotoSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsPetitionPhotoSizesSmallSize
    url: String
}

type ImagesJsonItemsPetitionPhotoSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionPhotoSizesSquare {
    processing: Boolean
    size: ImagesJsonItemsPetitionPhotoSizesSquareSize
    url: String
}

type ImagesJsonItemsPetitionPhotoSizesSquareSize {
    height: Int
    width: Int
}

type ImagesJsonItemsPetitionPrimary_target {
    additional_data: ImagesJsonItemsPetitionPrimary_targetAdditional_data
    display_name: String
    has_email: Boolean
    id: Int
    is_person: Boolean
    locale: String
    publicly_visible: Boolean
    slug: String
    type: String
}

type ImagesJsonItemsPetitionPrimary_targetAdditional_data {
    first_name: String
    last_name: String
}

type ImagesJsonItemsPetitionRelevant_location {
    country_code: String
}

type ImagesJsonItemsPetitionTags {
    created_by_owner: Boolean
    created_by_staff_member: Boolean
    id: Int
    locale: String
    name: String
    photo_id: Int
    slug: String
    total_count: Int
}

type ImagesJsonItemsPetitionTargets {
    additional_data: ImagesJsonItemsPetitionTargetsAdditional_data
    confirmed_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    display_name: String
    has_email: Boolean
    id: Int
    is_person: Boolean
    locale: String
    publicly_visible: Boolean
    slug: String
    type: String
}

type ImagesJsonItemsPetitionTargetsAdditional_data {
    first_name: String
    last_name: String
}

type ImagesJsonItemsPetitionUser {
    city: String
    country_code: String
    description: String
    display_name: String
    first_name: String
    id: Int
    last_name: String
    locale: String
    short_display_name: String
    slug: String
    state_code: String
    website: String
}

type ImagesJsonItemsUser {
    city: String
    country_code: String
    display_name: String
    first_name: String
    id: Int
    last_name: String
    locale: String
    photo: ImagesJsonItemsUserPhoto
    short_display_name: String
    slug: String
    state_code: String
}

type ImagesJsonItemsUserPhoto {
    id: Int
    sizes: ImagesJsonItemsUserPhotoSizes
    url: String
}

type ImagesJsonItemsUserPhotoSizes {
    large: ImagesJsonItemsUserPhotoSizesLarge
    medium: ImagesJsonItemsUserPhotoSizesMedium
    small: ImagesJsonItemsUserPhotoSizesSmall
    xlarge: ImagesJsonItemsUserPhotoSizesXlarge
}

type ImagesJsonItemsUserPhotoSizesLarge {
    processing: Boolean
    size: ImagesJsonItemsUserPhotoSizesLargeSize
    url: String
}

type ImagesJsonItemsUserPhotoSizesLargeSize {
    height: Int
    width: Int
}

type ImagesJsonItemsUserPhotoSizesMedium {
    processing: Boolean
    size: ImagesJsonItemsUserPhotoSizesMediumSize
    url: String
}

type ImagesJsonItemsUserPhotoSizesMediumSize {
    height: Int
    width: Int
}

type ImagesJsonItemsUserPhotoSizesSmall {
    processing: Boolean
    size: ImagesJsonItemsUserPhotoSizesSmallSize
    url: String
}

type ImagesJsonItemsUserPhotoSizesSmallSize {
    height: Int
    width: Int
}

type ImagesJsonItemsUserPhotoSizesXlarge {
    processing: Boolean
    size: ImagesJsonItemsUserPhotoSizesXlargeSize
    url: String
}

type ImagesJsonItemsUserPhotoSizesXlargeSize {
    height: Int
    width: Int
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type Mdx implements Node {
    body: String!
    children: [Node!]!
    excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
    fileAbsolutePath: String!
    frontmatter: MdxFrontmatter
    headings(depth: HeadingsMdx): [MdxHeadingMdx]
    html: String
    id: ID!
    internal: Internal!
    mdxAST: JSON
    parent: Node
    rawBody: String!
    slug: String
    tableOfContents(maxDepth: Int): JSON
    timeToRead: Int
    wordCount: MdxWordCount
}

type MdxConnection {
    distinct(field: MdxFieldsEnum!): [String!]!
    edges: [MdxEdge!]!
    group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
    max(field: MdxFieldsEnum!): Float
    min(field: MdxFieldsEnum!): Float
    nodes: [Mdx!]!
    pageInfo: PageInfo!
    sum(field: MdxFieldsEnum!): Float
    totalCount: Int!
}

type MdxEdge {
    next: Mdx
    node: Mdx!
    previous: Mdx
}

type MdxFrontmatter {
    title: String!
}

type MdxGroupConnection {
    distinct(field: MdxFieldsEnum!): [String!]!
    edges: [MdxEdge!]!
    field: String!
    fieldValue: String
    group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
    max(field: MdxFieldsEnum!): Float
    min(field: MdxFieldsEnum!): Float
    nodes: [Mdx!]!
    pageInfo: PageInfo!
    sum(field: MdxFieldsEnum!): Float
    totalCount: Int!
}

type MdxHeadingMdx {
    depth: Int
    value: String
}

type MdxWordCount {
    paragraphs: Int
    sentences: Int
    words: Int
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type Query {
    allCommentsJson(filter: CommentsJsonFilterInput, limit: Int, skip: Int, sort: CommentsJsonSortInput): CommentsJsonConnection!
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allImagesJson(filter: ImagesJsonFilterInput, limit: Int, skip: Int, sort: ImagesJsonSortInput): ImagesJsonConnection!
    allMdx(filter: MdxFilterInput, limit: Int, skip: Int, sort: MdxSortInput): MdxConnection!
    allSheetsArchivioVaccine(filter: SheetsArchivioVaccineFilterInput, limit: Int, skip: Int, sort: SheetsArchivioVaccineSortInput): SheetsArchivioVaccineConnection!
    allSheetsChiFaCosa(filter: SheetsChiFaCosaFilterInput, limit: Int, skip: Int, sort: SheetsChiFaCosaSortInput): SheetsChiFaCosaConnection!
    allSheetsDistribuzione(filter: SheetsDistribuzioneFilterInput, limit: Int, skip: Int, sort: SheetsDistribuzioneSortInput): SheetsDistribuzioneConnection!
    allSheetsDistribuzioneV2(filter: SheetsDistribuzioneV2FilterInput, limit: Int, skip: Int, sort: SheetsDistribuzioneV2SortInput): SheetsDistribuzioneV2Connection!
    allSheetsEstratti(filter: SheetsEstrattiFilterInput, limit: Int, skip: Int, sort: SheetsEstrattiSortInput): SheetsEstrattiConnection!
    allSheetsScatter(filter: SheetsScatterFilterInput, limit: Int, skip: Int, sort: SheetsScatterSortInput): SheetsScatterConnection!
    allSheetsSelezionatiVaccine(filter: SheetsSelezionatiVaccineFilterInput, limit: Int, skip: Int, sort: SheetsSelezionatiVaccineSortInput): SheetsSelezionatiVaccineConnection!
    allSheetsTestiFinding(filter: SheetsTestiFindingFilterInput, limit: Int, skip: Int, sort: SheetsTestiFindingSortInput): SheetsTestiFindingConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    commentsJson(children: NodeFilterListInput, comment: StringQueryOperatorInput, commentId: IntQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, origin: StringQueryOperatorInput, parent: NodeFilterInput, petition: CommentsJsonPetitionFilterInput, sentences: StringQueryOperatorInput, showInHome: BooleanQueryOperatorInput, user: IntQueryOperatorInput): CommentsJson
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childCommentsJson: CommentsJsonFilterInput, childImageSharp: ImageSharpFilterInput, childImagesJson: ImagesJsonFilterInput, children: NodeFilterListInput, childrenCommentsJson: CommentsJsonFilterListInput, childrenImageSharp: ImageSharpFilterListInput, childrenImagesJson: ImagesJsonFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
    imagesJson(children: NodeFilterListInput, count: IntQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, items: ImagesJsonItemsFilterListInput, last_page: BooleanQueryOperatorInput, limit: IntQueryOperatorInput, offset: IntQueryOperatorInput, order: StringQueryOperatorInput, parent: NodeFilterInput, query_source: StringQueryOperatorInput, total_count: IntQueryOperatorInput): ImagesJson
    mdx(body: StringQueryOperatorInput, children: NodeFilterListInput, excerpt: StringQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MdxFrontmatterFilterInput, headings: MdxHeadingMdxFilterListInput, html: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, mdxAST: JSONQueryOperatorInput, parent: NodeFilterInput, rawBody: StringQueryOperatorInput, slug: StringQueryOperatorInput, tableOfContents: JSONQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MdxWordCountFilterInput): Mdx
    sheetsArchivioVaccine(author: StringQueryOperatorInput, children: NodeFilterListInput, childrenCount: StringQueryOperatorInput, comment: StringQueryOperatorInput, commentableId: StringQueryOperatorInput, commentableType: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, descr: StringQueryOperatorInput, extracted: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, likes: StringQueryOperatorInput, origin: StringQueryOperatorInput, parent: NodeFilterInput, petitionLink: StringQueryOperatorInput, petitionSlug: StringQueryOperatorInput, role: StringQueryOperatorInput, sheetsId: StringQueryOperatorInput, word: StringQueryOperatorInput): SheetsArchivioVaccine
    sheetsChiFaCosa(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, parole: StringQueryOperatorInput, persone: StringQueryOperatorInput): SheetsChiFaCosa
    sheetsDistribuzione(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, nomask: IntQueryOperatorInput, nomaskDelta: FloatQueryOperatorInput, nomask__: FloatQueryOperatorInput, parent: NodeFilterInput, promaks__: FloatQueryOperatorInput, promask: IntQueryOperatorInput, promaskDelta: FloatQueryOperatorInput, secondWord: StringQueryOperatorInput, summedPercentage: FloatQueryOperatorInput, word: StringQueryOperatorInput): SheetsDistribuzione
    sheetsDistribuzioneV2(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, nomask: StringQueryOperatorInput, nomaskDelta: FloatQueryOperatorInput, nomask__: FloatQueryOperatorInput, parent: NodeFilterInput, promaks__: FloatQueryOperatorInput, promask: StringQueryOperatorInput, promaskDelta: FloatQueryOperatorInput, secondWord: StringQueryOperatorInput, summedPercentage: FloatQueryOperatorInput, word: StringQueryOperatorInput): SheetsDistribuzioneV2
    sheetsEstratti(author: StringQueryOperatorInput, children: NodeFilterListInput, childrenCount: StringQueryOperatorInput, comment: StringQueryOperatorInput, commentId: IntQueryOperatorInput, commentableId: StringQueryOperatorInput, commentableType: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, extracted: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, likes: StringQueryOperatorInput, origin: StringQueryOperatorInput, parent: NodeFilterInput, petitionLink: StringQueryOperatorInput, petitionSlug: StringQueryOperatorInput, role: StringQueryOperatorInput, scelto: StringQueryOperatorInput, word: StringQueryOperatorInput): SheetsEstratti
    sheetsScatter(children: NodeFilterListInput, countNomask: IntQueryOperatorInput, countPromask: IntQueryOperatorInput, deltaNomask: FloatQueryOperatorInput, deltaPromask: FloatQueryOperatorInput, finding: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, normalizedNomask: FloatQueryOperatorInput, normalizedPromask: FloatQueryOperatorInput, parent: NodeFilterInput, percentageBoth: FloatQueryOperatorInput, percentageNomask: FloatQueryOperatorInput, percentagePromask: FloatQueryOperatorInput, scelta: StringQueryOperatorInput): SheetsScatter
    sheetsSelezionatiVaccine(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, no: StringQueryOperatorInput, parent: NodeFilterInput, pro: StringQueryOperatorInput): SheetsSelezionatiVaccine
    sheetsTestiFinding(children: NodeFilterListInput, finding: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, word: StringQueryOperatorInput): SheetsTestiFinding
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, jsxRuntime: StringQueryOperatorInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, children: NodeFilterListInput, functionRoute: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, parent: NodeFilterInput, pluginName: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: JSONQueryOperatorInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type SheetsArchivioVaccine implements Node {
    author: String
    children: [Node!]!
    childrenCount: String
    comment: String
    commentableId: String
    commentableType: String
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    descr: String
    extracted: String
    id: ID!
    internal: Internal!
    likes: String
    origin: String
    parent: Node
    petitionLink: String
    petitionSlug: String
    role: String
    sheetsId: String
    word: String
}

type SheetsArchivioVaccineConnection {
    distinct(field: SheetsArchivioVaccineFieldsEnum!): [String!]!
    edges: [SheetsArchivioVaccineEdge!]!
    group(field: SheetsArchivioVaccineFieldsEnum!, limit: Int, skip: Int): [SheetsArchivioVaccineGroupConnection!]!
    max(field: SheetsArchivioVaccineFieldsEnum!): Float
    min(field: SheetsArchivioVaccineFieldsEnum!): Float
    nodes: [SheetsArchivioVaccine!]!
    pageInfo: PageInfo!
    sum(field: SheetsArchivioVaccineFieldsEnum!): Float
    totalCount: Int!
}

type SheetsArchivioVaccineEdge {
    next: SheetsArchivioVaccine
    node: SheetsArchivioVaccine!
    previous: SheetsArchivioVaccine
}

type SheetsArchivioVaccineGroupConnection {
    distinct(field: SheetsArchivioVaccineFieldsEnum!): [String!]!
    edges: [SheetsArchivioVaccineEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsArchivioVaccineFieldsEnum!, limit: Int, skip: Int): [SheetsArchivioVaccineGroupConnection!]!
    max(field: SheetsArchivioVaccineFieldsEnum!): Float
    min(field: SheetsArchivioVaccineFieldsEnum!): Float
    nodes: [SheetsArchivioVaccine!]!
    pageInfo: PageInfo!
    sum(field: SheetsArchivioVaccineFieldsEnum!): Float
    totalCount: Int!
}

type SheetsChiFaCosa implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
    parole: String
    persone: String
}

type SheetsChiFaCosaConnection {
    distinct(field: SheetsChiFaCosaFieldsEnum!): [String!]!
    edges: [SheetsChiFaCosaEdge!]!
    group(field: SheetsChiFaCosaFieldsEnum!, limit: Int, skip: Int): [SheetsChiFaCosaGroupConnection!]!
    max(field: SheetsChiFaCosaFieldsEnum!): Float
    min(field: SheetsChiFaCosaFieldsEnum!): Float
    nodes: [SheetsChiFaCosa!]!
    pageInfo: PageInfo!
    sum(field: SheetsChiFaCosaFieldsEnum!): Float
    totalCount: Int!
}

type SheetsChiFaCosaEdge {
    next: SheetsChiFaCosa
    node: SheetsChiFaCosa!
    previous: SheetsChiFaCosa
}

type SheetsChiFaCosaGroupConnection {
    distinct(field: SheetsChiFaCosaFieldsEnum!): [String!]!
    edges: [SheetsChiFaCosaEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsChiFaCosaFieldsEnum!, limit: Int, skip: Int): [SheetsChiFaCosaGroupConnection!]!
    max(field: SheetsChiFaCosaFieldsEnum!): Float
    min(field: SheetsChiFaCosaFieldsEnum!): Float
    nodes: [SheetsChiFaCosa!]!
    pageInfo: PageInfo!
    sum(field: SheetsChiFaCosaFieldsEnum!): Float
    totalCount: Int!
}

type SheetsDistribuzione implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    nomask: Int
    nomaskDelta: Float
    nomask__: Float
    parent: Node
    promaks__: Float
    promask: Int
    promaskDelta: Float
    secondWord: String
    summedPercentage: Float
    word: String
}

type SheetsDistribuzioneConnection {
    distinct(field: SheetsDistribuzioneFieldsEnum!): [String!]!
    edges: [SheetsDistribuzioneEdge!]!
    group(field: SheetsDistribuzioneFieldsEnum!, limit: Int, skip: Int): [SheetsDistribuzioneGroupConnection!]!
    max(field: SheetsDistribuzioneFieldsEnum!): Float
    min(field: SheetsDistribuzioneFieldsEnum!): Float
    nodes: [SheetsDistribuzione!]!
    pageInfo: PageInfo!
    sum(field: SheetsDistribuzioneFieldsEnum!): Float
    totalCount: Int!
}

type SheetsDistribuzioneEdge {
    next: SheetsDistribuzione
    node: SheetsDistribuzione!
    previous: SheetsDistribuzione
}

type SheetsDistribuzioneGroupConnection {
    distinct(field: SheetsDistribuzioneFieldsEnum!): [String!]!
    edges: [SheetsDistribuzioneEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsDistribuzioneFieldsEnum!, limit: Int, skip: Int): [SheetsDistribuzioneGroupConnection!]!
    max(field: SheetsDistribuzioneFieldsEnum!): Float
    min(field: SheetsDistribuzioneFieldsEnum!): Float
    nodes: [SheetsDistribuzione!]!
    pageInfo: PageInfo!
    sum(field: SheetsDistribuzioneFieldsEnum!): Float
    totalCount: Int!
}

type SheetsDistribuzioneV2 implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    nomask: String
    nomaskDelta: Float
    nomask__: Float
    parent: Node
    promaks__: Float
    promask: String
    promaskDelta: Float
    secondWord: String
    summedPercentage: Float
    word: String
}

type SheetsDistribuzioneV2Connection {
    distinct(field: SheetsDistribuzioneV2FieldsEnum!): [String!]!
    edges: [SheetsDistribuzioneV2Edge!]!
    group(field: SheetsDistribuzioneV2FieldsEnum!, limit: Int, skip: Int): [SheetsDistribuzioneV2GroupConnection!]!
    max(field: SheetsDistribuzioneV2FieldsEnum!): Float
    min(field: SheetsDistribuzioneV2FieldsEnum!): Float
    nodes: [SheetsDistribuzioneV2!]!
    pageInfo: PageInfo!
    sum(field: SheetsDistribuzioneV2FieldsEnum!): Float
    totalCount: Int!
}

type SheetsDistribuzioneV2Edge {
    next: SheetsDistribuzioneV2
    node: SheetsDistribuzioneV2!
    previous: SheetsDistribuzioneV2
}

type SheetsDistribuzioneV2GroupConnection {
    distinct(field: SheetsDistribuzioneV2FieldsEnum!): [String!]!
    edges: [SheetsDistribuzioneV2Edge!]!
    field: String!
    fieldValue: String
    group(field: SheetsDistribuzioneV2FieldsEnum!, limit: Int, skip: Int): [SheetsDistribuzioneV2GroupConnection!]!
    max(field: SheetsDistribuzioneV2FieldsEnum!): Float
    min(field: SheetsDistribuzioneV2FieldsEnum!): Float
    nodes: [SheetsDistribuzioneV2!]!
    pageInfo: PageInfo!
    sum(field: SheetsDistribuzioneV2FieldsEnum!): Float
    totalCount: Int!
}

type SheetsEstratti implements Node {
    author: String
    children: [Node!]!
    childrenCount: String
    comment: String
    commentId: Int
    commentableId: String
    commentableType: String
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    extracted: String
    id: ID!
    internal: Internal!
    likes: String
    origin: String
    parent: Node
    petitionLink: String
    petitionSlug: String
    role: String
    scelto: String
    splitted: [String]
    userId: String
    word: String
}

type SheetsEstrattiConnection {
    distinct(field: SheetsEstrattiFieldsEnum!): [String!]!
    edges: [SheetsEstrattiEdge!]!
    group(field: SheetsEstrattiFieldsEnum!, limit: Int, skip: Int): [SheetsEstrattiGroupConnection!]!
    max(field: SheetsEstrattiFieldsEnum!): Float
    min(field: SheetsEstrattiFieldsEnum!): Float
    nodes: [SheetsEstratti!]!
    pageInfo: PageInfo!
    sum(field: SheetsEstrattiFieldsEnum!): Float
    totalCount: Int!
}

type SheetsEstrattiEdge {
    next: SheetsEstratti
    node: SheetsEstratti!
    previous: SheetsEstratti
}

type SheetsEstrattiGroupConnection {
    distinct(field: SheetsEstrattiFieldsEnum!): [String!]!
    edges: [SheetsEstrattiEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsEstrattiFieldsEnum!, limit: Int, skip: Int): [SheetsEstrattiGroupConnection!]!
    max(field: SheetsEstrattiFieldsEnum!): Float
    min(field: SheetsEstrattiFieldsEnum!): Float
    nodes: [SheetsEstratti!]!
    pageInfo: PageInfo!
    sum(field: SheetsEstrattiFieldsEnum!): Float
    totalCount: Int!
}

type SheetsScatter implements Node {
    children: [Node!]!
    countNomask: Int
    countPromask: Int
    deltaNomask: Float
    deltaPromask: Float
    finding: String
    id: ID!
    internal: Internal!
    name: String
    normalizedNomask: Float
    normalizedPromask: Float
    parent: Node
    percentageBoth: Float
    percentageNomask: Float
    percentagePromask: Float
    scelta: String
}

type SheetsScatterConnection {
    distinct(field: SheetsScatterFieldsEnum!): [String!]!
    edges: [SheetsScatterEdge!]!
    group(field: SheetsScatterFieldsEnum!, limit: Int, skip: Int): [SheetsScatterGroupConnection!]!
    max(field: SheetsScatterFieldsEnum!): Float
    min(field: SheetsScatterFieldsEnum!): Float
    nodes: [SheetsScatter!]!
    pageInfo: PageInfo!
    sum(field: SheetsScatterFieldsEnum!): Float
    totalCount: Int!
}

type SheetsScatterEdge {
    next: SheetsScatter
    node: SheetsScatter!
    previous: SheetsScatter
}

type SheetsScatterGroupConnection {
    distinct(field: SheetsScatterFieldsEnum!): [String!]!
    edges: [SheetsScatterEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsScatterFieldsEnum!, limit: Int, skip: Int): [SheetsScatterGroupConnection!]!
    max(field: SheetsScatterFieldsEnum!): Float
    min(field: SheetsScatterFieldsEnum!): Float
    nodes: [SheetsScatter!]!
    pageInfo: PageInfo!
    sum(field: SheetsScatterFieldsEnum!): Float
    totalCount: Int!
}

type SheetsSelezionatiVaccine implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    no: String
    parent: Node
    pro: String
}

type SheetsSelezionatiVaccineConnection {
    distinct(field: SheetsSelezionatiVaccineFieldsEnum!): [String!]!
    edges: [SheetsSelezionatiVaccineEdge!]!
    group(field: SheetsSelezionatiVaccineFieldsEnum!, limit: Int, skip: Int): [SheetsSelezionatiVaccineGroupConnection!]!
    max(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    min(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    nodes: [SheetsSelezionatiVaccine!]!
    pageInfo: PageInfo!
    sum(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    totalCount: Int!
}

type SheetsSelezionatiVaccineEdge {
    next: SheetsSelezionatiVaccine
    node: SheetsSelezionatiVaccine!
    previous: SheetsSelezionatiVaccine
}

type SheetsSelezionatiVaccineGroupConnection {
    distinct(field: SheetsSelezionatiVaccineFieldsEnum!): [String!]!
    edges: [SheetsSelezionatiVaccineEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsSelezionatiVaccineFieldsEnum!, limit: Int, skip: Int): [SheetsSelezionatiVaccineGroupConnection!]!
    max(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    min(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    nodes: [SheetsSelezionatiVaccine!]!
    pageInfo: PageInfo!
    sum(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    totalCount: Int!
}

type SheetsTestiFinding implements Node {
    children: [Node!]!
    finding: String
    id: ID!
    internal: Internal!
    parent: Node
    word: String
}

type SheetsTestiFindingConnection {
    distinct(field: SheetsTestiFindingFieldsEnum!): [String!]!
    edges: [SheetsTestiFindingEdge!]!
    group(field: SheetsTestiFindingFieldsEnum!, limit: Int, skip: Int): [SheetsTestiFindingGroupConnection!]!
    max(field: SheetsTestiFindingFieldsEnum!): Float
    min(field: SheetsTestiFindingFieldsEnum!): Float
    nodes: [SheetsTestiFinding!]!
    pageInfo: PageInfo!
    sum(field: SheetsTestiFindingFieldsEnum!): Float
    totalCount: Int!
}

type SheetsTestiFindingEdge {
    next: SheetsTestiFinding
    node: SheetsTestiFinding!
    previous: SheetsTestiFinding
}

type SheetsTestiFindingGroupConnection {
    distinct(field: SheetsTestiFindingFieldsEnum!): [String!]!
    edges: [SheetsTestiFindingEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsTestiFindingFieldsEnum!, limit: Int, skip: Int): [SheetsTestiFindingGroupConnection!]!
    max(field: SheetsTestiFindingFieldsEnum!): Float
    min(field: SheetsTestiFindingFieldsEnum!): Float
    nodes: [SheetsTestiFinding!]!
    pageInfo: PageInfo!
    sum(field: SheetsTestiFindingFieldsEnum!): Float
    totalCount: Int!
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    jsxRuntime: String
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteFunction implements Node {
    absoluteCompiledFilePath: String!
    children: [Node!]!
    functionRoute: String!
    id: ID!
    internal: Internal!
    matchPath: String
    originalAbsoluteFilePath: String!
    originalRelativeFilePath: String!
    parent: Node
    pluginName: String!
    relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteFunctionEdge {
    next: SiteFunction
    node: SiteFunction!
    previous: SiteFunction
}

type SiteFunctionGroupConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteGroupConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    id: ID!
    internal: Internal!
    internalComponentName: String!
    matchPath: String
    pageContext: JSON
    parent: Node
    path: String!
    pluginCreator: SitePlugin
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: JSON
    parent: Node
    pluginFilepath: String
    pluginOptions: JSON
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SiteSiteMetadata {
    description: String
    siteUrl: String
    title: String
}

enum CommentsJsonFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    comment
    commentId
    createdAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    origin
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    petition___created_at
    petition___slug
    petition___title
    sentences
    showInHome
    user
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childCommentsJson___children
    childCommentsJson___children___children
    childCommentsJson___children___children___children
    childCommentsJson___children___children___id
    childCommentsJson___children___id
    childCommentsJson___children___internal___content
    childCommentsJson___children___internal___contentDigest
    childCommentsJson___children___internal___description
    childCommentsJson___children___internal___fieldOwners
    childCommentsJson___children___internal___ignoreType
    childCommentsJson___children___internal___mediaType
    childCommentsJson___children___internal___owner
    childCommentsJson___children___internal___type
    childCommentsJson___children___parent___children
    childCommentsJson___children___parent___id
    childCommentsJson___comment
    childCommentsJson___commentId
    childCommentsJson___createdAt
    childCommentsJson___id
    childCommentsJson___internal___content
    childCommentsJson___internal___contentDigest
    childCommentsJson___internal___description
    childCommentsJson___internal___fieldOwners
    childCommentsJson___internal___ignoreType
    childCommentsJson___internal___mediaType
    childCommentsJson___internal___owner
    childCommentsJson___internal___type
    childCommentsJson___origin
    childCommentsJson___parent___children
    childCommentsJson___parent___children___children
    childCommentsJson___parent___children___id
    childCommentsJson___parent___id
    childCommentsJson___parent___internal___content
    childCommentsJson___parent___internal___contentDigest
    childCommentsJson___parent___internal___description
    childCommentsJson___parent___internal___fieldOwners
    childCommentsJson___parent___internal___ignoreType
    childCommentsJson___parent___internal___mediaType
    childCommentsJson___parent___internal___owner
    childCommentsJson___parent___internal___type
    childCommentsJson___parent___parent___children
    childCommentsJson___parent___parent___id
    childCommentsJson___petition___created_at
    childCommentsJson___petition___slug
    childCommentsJson___petition___title
    childCommentsJson___sentences
    childCommentsJson___showInHome
    childCommentsJson___user
    childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImagesJson___children
    childImagesJson___children___children
    childImagesJson___children___children___children
    childImagesJson___children___children___id
    childImagesJson___children___id
    childImagesJson___children___internal___content
    childImagesJson___children___internal___contentDigest
    childImagesJson___children___internal___description
    childImagesJson___children___internal___fieldOwners
    childImagesJson___children___internal___ignoreType
    childImagesJson___children___internal___mediaType
    childImagesJson___children___internal___owner
    childImagesJson___children___internal___type
    childImagesJson___children___parent___children
    childImagesJson___children___parent___id
    childImagesJson___count
    childImagesJson___id
    childImagesJson___internal___content
    childImagesJson___internal___contentDigest
    childImagesJson___internal___description
    childImagesJson___internal___fieldOwners
    childImagesJson___internal___ignoreType
    childImagesJson___internal___mediaType
    childImagesJson___internal___owner
    childImagesJson___internal___type
    childImagesJson___items
    childImagesJson___items___card_context___kind
    childImagesJson___items___card_context___weekly_signature_count
    childImagesJson___items___children_count
    childImagesJson___items___comment
    childImagesJson___items___commentable_entity___ask
    childImagesJson___items___commentable_entity___calculated_goal
    childImagesJson___items___commentable_entity___created_at
    childImagesJson___items___commentable_entity___creator_name
    childImagesJson___items___commentable_entity___daily_signature_count
    childImagesJson___items___commentable_entity___daily_signup_count
    childImagesJson___items___commentable_entity___description
    childImagesJson___items___commentable_entity___discoverable
    childImagesJson___items___commentable_entity___display_title
    childImagesJson___items___commentable_entity___displayed_signature_count
    childImagesJson___items___commentable_entity___document_id
    childImagesJson___items___commentable_entity___enable_human_verification
    childImagesJson___items___commentable_entity___hide_comments
    childImagesJson___items___commentable_entity___hide_dm_action_panel
    childImagesJson___items___commentable_entity___id
    childImagesJson___items___commentable_entity___is_pledge
    childImagesJson___items___commentable_entity___is_verified_victory
    childImagesJson___items___commentable_entity___is_victory
    childImagesJson___items___commentable_entity___languages
    childImagesJson___items___commentable_entity___last_edited_at
    childImagesJson___items___commentable_entity___letter_body
    childImagesJson___items___commentable_entity___monthly_signature_count
    childImagesJson___items___commentable_entity___monthly_signup_count
    childImagesJson___items___commentable_entity___original_locale
    childImagesJson___items___commentable_entity___petition_status
    childImagesJson___items___commentable_entity___petition_title
    childImagesJson___items___commentable_entity___progress
    childImagesJson___items___commentable_entity___published_at
    childImagesJson___items___commentable_entity___slug
    childImagesJson___items___commentable_entity___sponsored_campaign
    childImagesJson___items___commentable_entity___status
    childImagesJson___items___commentable_entity___tags
    childImagesJson___items___commentable_entity___targeting_description
    childImagesJson___items___commentable_entity___targets
    childImagesJson___items___commentable_entity___title
    childImagesJson___items___commentable_entity___total_page_views
    childImagesJson___items___commentable_entity___total_share_count
    childImagesJson___items___commentable_entity___total_signature_count
    childImagesJson___items___commentable_entity___total_signup_count
    childImagesJson___items___commentable_entity___weekly_signature_count
    childImagesJson___items___commentable_entity___weekly_signup_count
    childImagesJson___items___commentable_id
    childImagesJson___items___commentable_type
    childImagesJson___items___created_at
    childImagesJson___items___likes
    childImagesJson___items___parent_id
    childImagesJson___items___petition___ask
    childImagesJson___items___petition___calculated_goal
    childImagesJson___items___petition___created_at
    childImagesJson___items___petition___creator_name
    childImagesJson___items___petition___daily_signature_count
    childImagesJson___items___petition___daily_signup_count
    childImagesJson___items___petition___description
    childImagesJson___items___petition___discoverable
    childImagesJson___items___petition___display_title
    childImagesJson___items___petition___displayed_signature_count
    childImagesJson___items___petition___document_id
    childImagesJson___items___petition___enable_human_verification
    childImagesJson___items___petition___hide_comments
    childImagesJson___items___petition___hide_dm_action_panel
    childImagesJson___items___petition___id
    childImagesJson___items___petition___is_pledge
    childImagesJson___items___petition___is_verified_victory
    childImagesJson___items___petition___is_victory
    childImagesJson___items___petition___languages
    childImagesJson___items___petition___last_edited_at
    childImagesJson___items___petition___letter_body
    childImagesJson___items___petition___monthly_signature_count
    childImagesJson___items___petition___monthly_signup_count
    childImagesJson___items___petition___original_locale
    childImagesJson___items___petition___petition_status
    childImagesJson___items___petition___petition_title
    childImagesJson___items___petition___progress
    childImagesJson___items___petition___published_at
    childImagesJson___items___petition___slug
    childImagesJson___items___petition___sponsored_campaign
    childImagesJson___items___petition___status
    childImagesJson___items___petition___tags
    childImagesJson___items___petition___targeting_description
    childImagesJson___items___petition___targets
    childImagesJson___items___petition___title
    childImagesJson___items___petition___total_page_views
    childImagesJson___items___petition___total_share_count
    childImagesJson___items___petition___total_signature_count
    childImagesJson___items___petition___total_signup_count
    childImagesJson___items___petition___victory_description
    childImagesJson___items___petition___weekly_signature_count
    childImagesJson___items___petition___weekly_signup_count
    childImagesJson___items___role
    childImagesJson___items___user___city
    childImagesJson___items___user___country_code
    childImagesJson___items___user___display_name
    childImagesJson___items___user___first_name
    childImagesJson___items___user___id
    childImagesJson___items___user___last_name
    childImagesJson___items___user___locale
    childImagesJson___items___user___short_display_name
    childImagesJson___items___user___slug
    childImagesJson___items___user___state_code
    childImagesJson___last_page
    childImagesJson___limit
    childImagesJson___offset
    childImagesJson___order
    childImagesJson___parent___children
    childImagesJson___parent___children___children
    childImagesJson___parent___children___id
    childImagesJson___parent___id
    childImagesJson___parent___internal___content
    childImagesJson___parent___internal___contentDigest
    childImagesJson___parent___internal___description
    childImagesJson___parent___internal___fieldOwners
    childImagesJson___parent___internal___ignoreType
    childImagesJson___parent___internal___mediaType
    childImagesJson___parent___internal___owner
    childImagesJson___parent___internal___type
    childImagesJson___parent___parent___children
    childImagesJson___parent___parent___id
    childImagesJson___query_source
    childImagesJson___total_count
    children
    childrenCommentsJson
    childrenCommentsJson___children
    childrenCommentsJson___children___children
    childrenCommentsJson___children___children___children
    childrenCommentsJson___children___children___id
    childrenCommentsJson___children___id
    childrenCommentsJson___children___internal___content
    childrenCommentsJson___children___internal___contentDigest
    childrenCommentsJson___children___internal___description
    childrenCommentsJson___children___internal___fieldOwners
    childrenCommentsJson___children___internal___ignoreType
    childrenCommentsJson___children___internal___mediaType
    childrenCommentsJson___children___internal___owner
    childrenCommentsJson___children___internal___type
    childrenCommentsJson___children___parent___children
    childrenCommentsJson___children___parent___id
    childrenCommentsJson___comment
    childrenCommentsJson___commentId
    childrenCommentsJson___createdAt
    childrenCommentsJson___id
    childrenCommentsJson___internal___content
    childrenCommentsJson___internal___contentDigest
    childrenCommentsJson___internal___description
    childrenCommentsJson___internal___fieldOwners
    childrenCommentsJson___internal___ignoreType
    childrenCommentsJson___internal___mediaType
    childrenCommentsJson___internal___owner
    childrenCommentsJson___internal___type
    childrenCommentsJson___origin
    childrenCommentsJson___parent___children
    childrenCommentsJson___parent___children___children
    childrenCommentsJson___parent___children___id
    childrenCommentsJson___parent___id
    childrenCommentsJson___parent___internal___content
    childrenCommentsJson___parent___internal___contentDigest
    childrenCommentsJson___parent___internal___description
    childrenCommentsJson___parent___internal___fieldOwners
    childrenCommentsJson___parent___internal___ignoreType
    childrenCommentsJson___parent___internal___mediaType
    childrenCommentsJson___parent___internal___owner
    childrenCommentsJson___parent___internal___type
    childrenCommentsJson___parent___parent___children
    childrenCommentsJson___parent___parent___id
    childrenCommentsJson___petition___created_at
    childrenCommentsJson___petition___slug
    childrenCommentsJson___petition___title
    childrenCommentsJson___sentences
    childrenCommentsJson___showInHome
    childrenCommentsJson___user
    childrenImageSharp
    childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImagesJson
    childrenImagesJson___children
    childrenImagesJson___children___children
    childrenImagesJson___children___children___children
    childrenImagesJson___children___children___id
    childrenImagesJson___children___id
    childrenImagesJson___children___internal___content
    childrenImagesJson___children___internal___contentDigest
    childrenImagesJson___children___internal___description
    childrenImagesJson___children___internal___fieldOwners
    childrenImagesJson___children___internal___ignoreType
    childrenImagesJson___children___internal___mediaType
    childrenImagesJson___children___internal___owner
    childrenImagesJson___children___internal___type
    childrenImagesJson___children___parent___children
    childrenImagesJson___children___parent___id
    childrenImagesJson___count
    childrenImagesJson___id
    childrenImagesJson___internal___content
    childrenImagesJson___internal___contentDigest
    childrenImagesJson___internal___description
    childrenImagesJson___internal___fieldOwners
    childrenImagesJson___internal___ignoreType
    childrenImagesJson___internal___mediaType
    childrenImagesJson___internal___owner
    childrenImagesJson___internal___type
    childrenImagesJson___items
    childrenImagesJson___items___card_context___kind
    childrenImagesJson___items___card_context___weekly_signature_count
    childrenImagesJson___items___children_count
    childrenImagesJson___items___comment
    childrenImagesJson___items___commentable_entity___ask
    childrenImagesJson___items___commentable_entity___calculated_goal
    childrenImagesJson___items___commentable_entity___created_at
    childrenImagesJson___items___commentable_entity___creator_name
    childrenImagesJson___items___commentable_entity___daily_signature_count
    childrenImagesJson___items___commentable_entity___daily_signup_count
    childrenImagesJson___items___commentable_entity___description
    childrenImagesJson___items___commentable_entity___discoverable
    childrenImagesJson___items___commentable_entity___display_title
    childrenImagesJson___items___commentable_entity___displayed_signature_count
    childrenImagesJson___items___commentable_entity___document_id
    childrenImagesJson___items___commentable_entity___enable_human_verification
    childrenImagesJson___items___commentable_entity___hide_comments
    childrenImagesJson___items___commentable_entity___hide_dm_action_panel
    childrenImagesJson___items___commentable_entity___id
    childrenImagesJson___items___commentable_entity___is_pledge
    childrenImagesJson___items___commentable_entity___is_verified_victory
    childrenImagesJson___items___commentable_entity___is_victory
    childrenImagesJson___items___commentable_entity___languages
    childrenImagesJson___items___commentable_entity___last_edited_at
    childrenImagesJson___items___commentable_entity___letter_body
    childrenImagesJson___items___commentable_entity___monthly_signature_count
    childrenImagesJson___items___commentable_entity___monthly_signup_count
    childrenImagesJson___items___commentable_entity___original_locale
    childrenImagesJson___items___commentable_entity___petition_status
    childrenImagesJson___items___commentable_entity___petition_title
    childrenImagesJson___items___commentable_entity___progress
    childrenImagesJson___items___commentable_entity___published_at
    childrenImagesJson___items___commentable_entity___slug
    childrenImagesJson___items___commentable_entity___sponsored_campaign
    childrenImagesJson___items___commentable_entity___status
    childrenImagesJson___items___commentable_entity___tags
    childrenImagesJson___items___commentable_entity___targeting_description
    childrenImagesJson___items___commentable_entity___targets
    childrenImagesJson___items___commentable_entity___title
    childrenImagesJson___items___commentable_entity___total_page_views
    childrenImagesJson___items___commentable_entity___total_share_count
    childrenImagesJson___items___commentable_entity___total_signature_count
    childrenImagesJson___items___commentable_entity___total_signup_count
    childrenImagesJson___items___commentable_entity___weekly_signature_count
    childrenImagesJson___items___commentable_entity___weekly_signup_count
    childrenImagesJson___items___commentable_id
    childrenImagesJson___items___commentable_type
    childrenImagesJson___items___created_at
    childrenImagesJson___items___likes
    childrenImagesJson___items___parent_id
    childrenImagesJson___items___petition___ask
    childrenImagesJson___items___petition___calculated_goal
    childrenImagesJson___items___petition___created_at
    childrenImagesJson___items___petition___creator_name
    childrenImagesJson___items___petition___daily_signature_count
    childrenImagesJson___items___petition___daily_signup_count
    childrenImagesJson___items___petition___description
    childrenImagesJson___items___petition___discoverable
    childrenImagesJson___items___petition___display_title
    childrenImagesJson___items___petition___displayed_signature_count
    childrenImagesJson___items___petition___document_id
    childrenImagesJson___items___petition___enable_human_verification
    childrenImagesJson___items___petition___hide_comments
    childrenImagesJson___items___petition___hide_dm_action_panel
    childrenImagesJson___items___petition___id
    childrenImagesJson___items___petition___is_pledge
    childrenImagesJson___items___petition___is_verified_victory
    childrenImagesJson___items___petition___is_victory
    childrenImagesJson___items___petition___languages
    childrenImagesJson___items___petition___last_edited_at
    childrenImagesJson___items___petition___letter_body
    childrenImagesJson___items___petition___monthly_signature_count
    childrenImagesJson___items___petition___monthly_signup_count
    childrenImagesJson___items___petition___original_locale
    childrenImagesJson___items___petition___petition_status
    childrenImagesJson___items___petition___petition_title
    childrenImagesJson___items___petition___progress
    childrenImagesJson___items___petition___published_at
    childrenImagesJson___items___petition___slug
    childrenImagesJson___items___petition___sponsored_campaign
    childrenImagesJson___items___petition___status
    childrenImagesJson___items___petition___tags
    childrenImagesJson___items___petition___targeting_description
    childrenImagesJson___items___petition___targets
    childrenImagesJson___items___petition___title
    childrenImagesJson___items___petition___total_page_views
    childrenImagesJson___items___petition___total_share_count
    childrenImagesJson___items___petition___total_signature_count
    childrenImagesJson___items___petition___total_signup_count
    childrenImagesJson___items___petition___victory_description
    childrenImagesJson___items___petition___weekly_signature_count
    childrenImagesJson___items___petition___weekly_signup_count
    childrenImagesJson___items___role
    childrenImagesJson___items___user___city
    childrenImagesJson___items___user___country_code
    childrenImagesJson___items___user___display_name
    childrenImagesJson___items___user___first_name
    childrenImagesJson___items___user___id
    childrenImagesJson___items___user___last_name
    childrenImagesJson___items___user___locale
    childrenImagesJson___items___user___short_display_name
    childrenImagesJson___items___user___slug
    childrenImagesJson___items___user___state_code
    childrenImagesJson___last_page
    childrenImagesJson___limit
    childrenImagesJson___offset
    childrenImagesJson___order
    childrenImagesJson___parent___children
    childrenImagesJson___parent___children___children
    childrenImagesJson___parent___children___id
    childrenImagesJson___parent___id
    childrenImagesJson___parent___internal___content
    childrenImagesJson___parent___internal___contentDigest
    childrenImagesJson___parent___internal___description
    childrenImagesJson___parent___internal___fieldOwners
    childrenImagesJson___parent___internal___ignoreType
    childrenImagesJson___parent___internal___mediaType
    childrenImagesJson___parent___internal___owner
    childrenImagesJson___parent___internal___type
    childrenImagesJson___parent___parent___children
    childrenImagesJson___parent___parent___id
    childrenImagesJson___query_source
    childrenImagesJson___total_count
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum GatsbyImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum GatsbyImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum GatsbyImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum HeadingsMdx {
    h1
    h2
    h3
    h4
    h5
    h6
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageSharpFieldsEnum {
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum ImagesJsonFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    count
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    items
    items___card_context___kind
    items___card_context___weekly_signature_count
    items___children_count
    items___comment
    items___commentable_entity___activity___recruit__count
    items___commentable_entity___activity___recruit__last_updated
    items___commentable_entity___activity___recruit_abi_gmail_count
    items___commentable_entity___activity___recruit_abi_gmail_last_updated
    items___commentable_entity___activity___recruit_copylink_count
    items___commentable_entity___activity___recruit_copylink_last_updated
    items___commentable_entity___activity___recruit_email_count
    items___commentable_entity___activity___recruit_email_last_updated
    items___commentable_entity___activity___recruit_facebook_count
    items___commentable_entity___activity___recruit_facebook_last_updated
    items___commentable_entity___activity___recruit_facebook_messenger_mobile_count
    items___commentable_entity___activity___recruit_facebook_messenger_mobile_last_updated
    items___commentable_entity___activity___recruit_sms_count
    items___commentable_entity___activity___recruit_sms_last_updated
    items___commentable_entity___activity___recruit_twitter_count
    items___commentable_entity___activity___recruit_twitter_last_updated
    items___commentable_entity___activity___recruit_whatsapp_count
    items___commentable_entity___activity___recruit_whatsapp_last_updated
    items___commentable_entity___activity___share_copylink_count
    items___commentable_entity___activity___share_copylink_last_updated
    items___commentable_entity___activity___share_email_count
    items___commentable_entity___activity___share_email_last_updated
    items___commentable_entity___activity___share_facebook_count
    items___commentable_entity___activity___share_facebook_last_updated
    items___commentable_entity___activity___share_facebook_messenger_count
    items___commentable_entity___activity___share_facebook_messenger_last_updated
    items___commentable_entity___activity___share_sms_count
    items___commentable_entity___activity___share_sms_last_updated
    items___commentable_entity___activity___share_twitter_count
    items___commentable_entity___activity___share_twitter_last_updated
    items___commentable_entity___activity___share_whatsapp_count
    items___commentable_entity___activity___share_whatsapp_last_updated
    items___commentable_entity___ask
    items___commentable_entity___calculated_goal
    items___commentable_entity___created_at
    items___commentable_entity___creator_name
    items___commentable_entity___creator_photo___id
    items___commentable_entity___creator_photo___url
    items___commentable_entity___daily_signature_count
    items___commentable_entity___daily_signup_count
    items___commentable_entity___description
    items___commentable_entity___discoverable
    items___commentable_entity___display_title
    items___commentable_entity___displayed_signature_count
    items___commentable_entity___document_id
    items___commentable_entity___enable_human_verification
    items___commentable_entity___hide_comments
    items___commentable_entity___hide_dm_action_panel
    items___commentable_entity___id
    items___commentable_entity___is_pledge
    items___commentable_entity___is_verified_victory
    items___commentable_entity___is_victory
    items___commentable_entity___languages
    items___commentable_entity___last_edited_at
    items___commentable_entity___letter_body
    items___commentable_entity___media___id
    items___commentable_entity___media___type
    items___commentable_entity___media___url
    items___commentable_entity___monthly_signature_count
    items___commentable_entity___monthly_signup_count
    items___commentable_entity___organization___country_code
    items___commentable_entity___organization___formatted_location_string
    items___commentable_entity___organization___id
    items___commentable_entity___organization___name
    items___commentable_entity___organization___slug
    items___commentable_entity___organization___website
    items___commentable_entity___original_locale
    items___commentable_entity___petition_status
    items___commentable_entity___petition_title
    items___commentable_entity___photo___id
    items___commentable_entity___photo___type
    items___commentable_entity___photo___url
    items___commentable_entity___primary_target___display_name
    items___commentable_entity___primary_target___has_email
    items___commentable_entity___primary_target___id
    items___commentable_entity___primary_target___is_person
    items___commentable_entity___primary_target___publicly_visible
    items___commentable_entity___primary_target___slug
    items___commentable_entity___primary_target___type
    items___commentable_entity___progress
    items___commentable_entity___published_at
    items___commentable_entity___relevant_location___city
    items___commentable_entity___relevant_location___country_code
    items___commentable_entity___relevant_location___google_places_id
    items___commentable_entity___relevant_location___lat
    items___commentable_entity___relevant_location___lng
    items___commentable_entity___slug
    items___commentable_entity___sponsored_campaign
    items___commentable_entity___status
    items___commentable_entity___tags
    items___commentable_entity___tags___created_by_owner
    items___commentable_entity___tags___created_by_staff_member
    items___commentable_entity___tags___id
    items___commentable_entity___tags___locale
    items___commentable_entity___tags___name
    items___commentable_entity___tags___photo_id
    items___commentable_entity___tags___slug
    items___commentable_entity___tags___total_count
    items___commentable_entity___targeting_description
    items___commentable_entity___targets
    items___commentable_entity___targets___display_name
    items___commentable_entity___targets___has_email
    items___commentable_entity___targets___id
    items___commentable_entity___targets___is_person
    items___commentable_entity___targets___publicly_visible
    items___commentable_entity___targets___slug
    items___commentable_entity___targets___type
    items___commentable_entity___title
    items___commentable_entity___total_page_views
    items___commentable_entity___total_share_count
    items___commentable_entity___total_signature_count
    items___commentable_entity___total_signup_count
    items___commentable_entity___user___city
    items___commentable_entity___user___country_code
    items___commentable_entity___user___display_name
    items___commentable_entity___user___first_name
    items___commentable_entity___user___id
    items___commentable_entity___user___last_name
    items___commentable_entity___user___locale
    items___commentable_entity___user___short_display_name
    items___commentable_entity___user___slug
    items___commentable_entity___weekly_signature_count
    items___commentable_entity___weekly_signup_count
    items___commentable_id
    items___commentable_type
    items___created_at
    items___likes
    items___parent_id
    items___petition___activity___recruit__count
    items___petition___activity___recruit__last_updated
    items___petition___activity___recruit_copylink_count
    items___petition___activity___recruit_copylink_last_updated
    items___petition___activity___recruit_email_count
    items___petition___activity___recruit_email_last_updated
    items___petition___activity___recruit_facebook_count
    items___petition___activity___recruit_facebook_last_updated
    items___petition___activity___recruit_facebook_messenger_mobile_count
    items___petition___activity___recruit_facebook_messenger_mobile_last_updated
    items___petition___activity___recruit_sms_count
    items___petition___activity___recruit_sms_last_updated
    items___petition___activity___recruit_twitter_count
    items___petition___activity___recruit_twitter_last_updated
    items___petition___activity___recruit_whatsapp_count
    items___petition___activity___recruit_whatsapp_last_updated
    items___petition___activity___share_copylink_count
    items___petition___activity___share_copylink_last_updated
    items___petition___activity___share_email_count
    items___petition___activity___share_email_last_updated
    items___petition___activity___share_facebook_count
    items___petition___activity___share_facebook_last_updated
    items___petition___activity___share_facebook_messenger_count
    items___petition___activity___share_facebook_messenger_last_updated
    items___petition___activity___share_sms_count
    items___petition___activity___share_sms_last_updated
    items___petition___activity___share_twitter_count
    items___petition___activity___share_twitter_last_updated
    items___petition___activity___share_whatsapp_count
    items___petition___activity___share_whatsapp_last_updated
    items___petition___ask
    items___petition___calculated_goal
    items___petition___created_at
    items___petition___creator_name
    items___petition___creator_photo___id
    items___petition___creator_photo___url
    items___petition___daily_signature_count
    items___petition___daily_signup_count
    items___petition___description
    items___petition___discoverable
    items___petition___display_title
    items___petition___displayed_signature_count
    items___petition___document_id
    items___petition___enable_human_verification
    items___petition___hide_comments
    items___petition___hide_dm_action_panel
    items___petition___id
    items___petition___is_pledge
    items___petition___is_verified_victory
    items___petition___is_victory
    items___petition___languages
    items___petition___last_edited_at
    items___petition___letter_body
    items___petition___media___id
    items___petition___media___type
    items___petition___media___url
    items___petition___monthly_signature_count
    items___petition___monthly_signup_count
    items___petition___organization___address
    items___petition___organization___city
    items___petition___organization___country_code
    items___petition___organization___fb_page
    items___petition___organization___formatted_location_string
    items___petition___organization___id
    items___petition___organization___mission
    items___petition___organization___name
    items___petition___organization___postal_code
    items___petition___organization___slug
    items___petition___organization___state
    items___petition___organization___state_code
    items___petition___organization___twitter_page
    items___petition___organization___website
    items___petition___organization___zipcode
    items___petition___original_locale
    items___petition___petition_status
    items___petition___petition_title
    items___petition___photo___id
    items___petition___photo___type
    items___petition___photo___url
    items___petition___primary_target___display_name
    items___petition___primary_target___has_email
    items___petition___primary_target___id
    items___petition___primary_target___is_person
    items___petition___primary_target___locale
    items___petition___primary_target___publicly_visible
    items___petition___primary_target___slug
    items___petition___primary_target___type
    items___petition___progress
    items___petition___published_at
    items___petition___relevant_location___country_code
    items___petition___slug
    items___petition___sponsored_campaign
    items___petition___status
    items___petition___tags
    items___petition___tags___created_by_owner
    items___petition___tags___created_by_staff_member
    items___petition___tags___id
    items___petition___tags___locale
    items___petition___tags___name
    items___petition___tags___photo_id
    items___petition___tags___slug
    items___petition___tags___total_count
    items___petition___targeting_description
    items___petition___targets
    items___petition___targets___confirmed_at
    items___petition___targets___display_name
    items___petition___targets___has_email
    items___petition___targets___id
    items___petition___targets___is_person
    items___petition___targets___locale
    items___petition___targets___publicly_visible
    items___petition___targets___slug
    items___petition___targets___type
    items___petition___title
    items___petition___total_page_views
    items___petition___total_share_count
    items___petition___total_signature_count
    items___petition___total_signup_count
    items___petition___user___city
    items___petition___user___country_code
    items___petition___user___description
    items___petition___user___display_name
    items___petition___user___first_name
    items___petition___user___id
    items___petition___user___last_name
    items___petition___user___locale
    items___petition___user___short_display_name
    items___petition___user___slug
    items___petition___user___state_code
    items___petition___user___website
    items___petition___victory_description
    items___petition___weekly_signature_count
    items___petition___weekly_signup_count
    items___role
    items___user___city
    items___user___country_code
    items___user___display_name
    items___user___first_name
    items___user___id
    items___user___last_name
    items___user___locale
    items___user___photo___id
    items___user___photo___url
    items___user___short_display_name
    items___user___slug
    items___user___state_code
    last_page
    limit
    offset
    order
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    query_source
    total_count
}

enum MdxFieldsEnum {
    body
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fileAbsolutePath
    frontmatter___title
    headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    mdxAST @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    rawBody
    slug
    tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum SheetsArchivioVaccineFieldsEnum {
    author
    children
    childrenCount
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    comment
    commentableId
    commentableType
    createdAt
    descr
    extracted
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    likes
    origin
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    petitionLink
    petitionSlug
    role
    sheetsId
    word
}

enum SheetsChiFaCosaFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    parole
    persone
}

enum SheetsDistribuzioneFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    nomask
    nomaskDelta
    nomask__
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    promaks__
    promask
    promaskDelta
    secondWord
    summedPercentage
    word
}

enum SheetsDistribuzioneV2FieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    nomask
    nomaskDelta
    nomask__
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    promaks__
    promask
    promaskDelta
    secondWord
    summedPercentage
    word
}

enum SheetsEstrattiFieldsEnum {
    author
    children
    childrenCount
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    comment
    commentId
    commentableId
    commentableType
    createdAt
    extracted
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    likes
    origin
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    petitionLink
    petitionSlug
    role
    scelto
    word
}

enum SheetsScatterFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    countNomask
    countPromask
    deltaNomask
    deltaPromask
    finding
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    normalizedNomask
    normalizedPromask
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    percentageBoth
    percentageNomask
    percentagePromask
    scelta
}

enum SheetsSelezionatiVaccineFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    no
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pro
}

enum SheetsTestiFindingFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    finding
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    word
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    jsxRuntime
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___description
    siteMetadata___siteUrl
    siteMetadata___title
}

enum SiteFunctionFieldsEnum {
    absoluteCompiledFilePath
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    functionRoute
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    originalAbsoluteFilePath
    originalRelativeFilePath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginName
    relativeCompiledFilePath
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    pageContext
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input AVIFOptions {
    lossless: Boolean
    quality: Int
    speed: Int
}

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input CommentsJsonFilterInput {
    children: NodeFilterListInput
    comment: StringQueryOperatorInput
    commentId: IntQueryOperatorInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    origin: StringQueryOperatorInput
    parent: NodeFilterInput
    petition: CommentsJsonPetitionFilterInput
    sentences: StringQueryOperatorInput
    showInHome: BooleanQueryOperatorInput
    user: IntQueryOperatorInput
}

input CommentsJsonFilterListInput {
    elemMatch: CommentsJsonFilterInput
}

input CommentsJsonPetitionFilterInput {
    created_at: DateQueryOperatorInput
    slug: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input CommentsJsonSortInput {
    fields: [CommentsJsonFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childCommentsJson: CommentsJsonFilterInput
    childImageSharp: ImageSharpFilterInput
    childImagesJson: ImagesJsonFilterInput
    children: NodeFilterListInput
    childrenCommentsJson: CommentsJsonFilterListInput
    childrenImageSharp: ImageSharpFilterListInput
    childrenImagesJson: ImagesJsonFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
    elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ImagesJsonFilterInput {
    children: NodeFilterListInput
    count: IntQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    items: ImagesJsonItemsFilterListInput
    last_page: BooleanQueryOperatorInput
    limit: IntQueryOperatorInput
    offset: IntQueryOperatorInput
    order: StringQueryOperatorInput
    parent: NodeFilterInput
    query_source: StringQueryOperatorInput
    total_count: IntQueryOperatorInput
}

input ImagesJsonFilterListInput {
    elemMatch: ImagesJsonFilterInput
}

input ImagesJsonItemsCard_contextFilterInput {
    kind: StringQueryOperatorInput
    weekly_signature_count: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityActivityFilterInput {
    recruit__count: IntQueryOperatorInput
    recruit__last_updated: IntQueryOperatorInput
    recruit_abi_gmail_count: IntQueryOperatorInput
    recruit_abi_gmail_last_updated: IntQueryOperatorInput
    recruit_copylink_count: IntQueryOperatorInput
    recruit_copylink_last_updated: IntQueryOperatorInput
    recruit_email_count: IntQueryOperatorInput
    recruit_email_last_updated: IntQueryOperatorInput
    recruit_facebook_count: IntQueryOperatorInput
    recruit_facebook_last_updated: IntQueryOperatorInput
    recruit_facebook_messenger_mobile_count: IntQueryOperatorInput
    recruit_facebook_messenger_mobile_last_updated: IntQueryOperatorInput
    recruit_sms_count: IntQueryOperatorInput
    recruit_sms_last_updated: IntQueryOperatorInput
    recruit_twitter_count: IntQueryOperatorInput
    recruit_twitter_last_updated: IntQueryOperatorInput
    recruit_whatsapp_count: IntQueryOperatorInput
    recruit_whatsapp_last_updated: IntQueryOperatorInput
    share_copylink_count: IntQueryOperatorInput
    share_copylink_last_updated: FloatQueryOperatorInput
    share_email_count: IntQueryOperatorInput
    share_email_last_updated: FloatQueryOperatorInput
    share_facebook_count: IntQueryOperatorInput
    share_facebook_last_updated: FloatQueryOperatorInput
    share_facebook_messenger_count: IntQueryOperatorInput
    share_facebook_messenger_last_updated: FloatQueryOperatorInput
    share_sms_count: IntQueryOperatorInput
    share_sms_last_updated: FloatQueryOperatorInput
    share_twitter_count: IntQueryOperatorInput
    share_twitter_last_updated: FloatQueryOperatorInput
    share_whatsapp_count: IntQueryOperatorInput
    share_whatsapp_last_updated: FloatQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityCreator_photoFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsCommentable_entityCreator_photoSizesFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityCreator_photoSizesFilterInput {
    large: ImagesJsonItemsCommentable_entityCreator_photoSizesLargeFilterInput
    medium: ImagesJsonItemsCommentable_entityCreator_photoSizesMediumFilterInput
    small: ImagesJsonItemsCommentable_entityCreator_photoSizesSmallFilterInput
}

input ImagesJsonItemsCommentable_entityCreator_photoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityCreator_photoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityCreator_photoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityCreator_photoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityCreator_photoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityCreator_photoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityCreator_photoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityCreator_photoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityCreator_photoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityFilterInput {
    activity: ImagesJsonItemsCommentable_entityActivityFilterInput
    ask: StringQueryOperatorInput
    calculated_goal: IntQueryOperatorInput
    created_at: DateQueryOperatorInput
    creator_name: StringQueryOperatorInput
    creator_photo: ImagesJsonItemsCommentable_entityCreator_photoFilterInput
    daily_signature_count: IntQueryOperatorInput
    daily_signup_count: IntQueryOperatorInput
    description: StringQueryOperatorInput
    discoverable: BooleanQueryOperatorInput
    display_title: StringQueryOperatorInput
    displayed_signature_count: IntQueryOperatorInput
    document_id: StringQueryOperatorInput
    enable_human_verification: BooleanQueryOperatorInput
    hide_comments: BooleanQueryOperatorInput
    hide_dm_action_panel: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_pledge: BooleanQueryOperatorInput
    is_verified_victory: BooleanQueryOperatorInput
    is_victory: BooleanQueryOperatorInput
    languages: StringQueryOperatorInput
    last_edited_at: DateQueryOperatorInput
    letter_body: StringQueryOperatorInput
    media: ImagesJsonItemsCommentable_entityMediaFilterInput
    monthly_signature_count: IntQueryOperatorInput
    monthly_signup_count: IntQueryOperatorInput
    organization: ImagesJsonItemsCommentable_entityOrganizationFilterInput
    original_locale: StringQueryOperatorInput
    petition_status: StringQueryOperatorInput
    petition_title: StringQueryOperatorInput
    photo: ImagesJsonItemsCommentable_entityPhotoFilterInput
    primary_target: ImagesJsonItemsCommentable_entityPrimary_targetFilterInput
    progress: FloatQueryOperatorInput
    published_at: DateQueryOperatorInput
    relevant_location: ImagesJsonItemsCommentable_entityRelevant_locationFilterInput
    slug: StringQueryOperatorInput
    sponsored_campaign: BooleanQueryOperatorInput
    status: StringQueryOperatorInput
    tags: ImagesJsonItemsCommentable_entityTagsFilterListInput
    targeting_description: StringQueryOperatorInput
    targets: ImagesJsonItemsCommentable_entityTargetsFilterListInput
    title: StringQueryOperatorInput
    total_page_views: IntQueryOperatorInput
    total_share_count: IntQueryOperatorInput
    total_signature_count: IntQueryOperatorInput
    total_signup_count: IntQueryOperatorInput
    user: ImagesJsonItemsCommentable_entityUserFilterInput
    weekly_signature_count: IntQueryOperatorInput
    weekly_signup_count: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsCommentable_entityMediaSizesFilterInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaSizesFilterInput {
    large: ImagesJsonItemsCommentable_entityMediaSizesLargeFilterInput
    medium: ImagesJsonItemsCommentable_entityMediaSizesMediumFilterInput
    small: ImagesJsonItemsCommentable_entityMediaSizesSmallFilterInput
    square: ImagesJsonItemsCommentable_entityMediaSizesSquareFilterInput
}

input ImagesJsonItemsCommentable_entityMediaSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityMediaSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityMediaSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityMediaSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaSizesSquareFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityMediaSizesSquareSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityMediaSizesSquareSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityOrganizationFilterInput {
    country_code: StringQueryOperatorInput
    formatted_location_string: StringQueryOperatorInput
    id: IntQueryOperatorInput
    name: StringQueryOperatorInput
    photo: ImagesJsonItemsCommentable_entityOrganizationPhotoFilterInput
    slug: StringQueryOperatorInput
    website: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityOrganizationPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityOrganizationPhotoSizesFilterInput {
    large: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesLargeFilterInput
    medium: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesMediumFilterInput
    small: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesSmallFilterInput
}

input ImagesJsonItemsCommentable_entityOrganizationPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityOrganizationPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityOrganizationPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityOrganizationPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityOrganizationPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityOrganizationPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityOrganizationPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsCommentable_entityPhotoSizesFilterInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesFilterInput {
    large: ImagesJsonItemsCommentable_entityPhotoSizesLargeFilterInput
    medium: ImagesJsonItemsCommentable_entityPhotoSizesMediumFilterInput
    small: ImagesJsonItemsCommentable_entityPhotoSizesSmallFilterInput
    square: ImagesJsonItemsCommentable_entityPhotoSizesSquareFilterInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesSquareFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsCommentable_entityPhotoSizesSquareSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPhotoSizesSquareSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPrimary_targetAdditional_dataFilterInput {
    first_name: StringQueryOperatorInput
    last_name: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityPrimary_targetFilterInput {
    additional_data: ImagesJsonItemsCommentable_entityPrimary_targetAdditional_dataFilterInput
    display_name: StringQueryOperatorInput
    has_email: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_person: BooleanQueryOperatorInput
    publicly_visible: BooleanQueryOperatorInput
    slug: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityRelevant_locationFilterInput {
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    google_places_id: StringQueryOperatorInput
    lat: FloatQueryOperatorInput
    lng: FloatQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityTagsFilterInput {
    created_by_owner: BooleanQueryOperatorInput
    created_by_staff_member: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    locale: StringQueryOperatorInput
    name: StringQueryOperatorInput
    photo_id: IntQueryOperatorInput
    slug: StringQueryOperatorInput
    total_count: IntQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityTagsFilterListInput {
    elemMatch: ImagesJsonItemsCommentable_entityTagsFilterInput
}

input ImagesJsonItemsCommentable_entityTargetsAdditional_dataFilterInput {
    first_name: StringQueryOperatorInput
    last_name: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityTargetsFilterInput {
    additional_data: ImagesJsonItemsCommentable_entityTargetsAdditional_dataFilterInput
    display_name: StringQueryOperatorInput
    has_email: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_person: BooleanQueryOperatorInput
    publicly_visible: BooleanQueryOperatorInput
    slug: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ImagesJsonItemsCommentable_entityTargetsFilterListInput {
    elemMatch: ImagesJsonItemsCommentable_entityTargetsFilterInput
}

input ImagesJsonItemsCommentable_entityUserFilterInput {
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    display_name: StringQueryOperatorInput
    first_name: StringQueryOperatorInput
    id: IntQueryOperatorInput
    last_name: StringQueryOperatorInput
    locale: StringQueryOperatorInput
    short_display_name: StringQueryOperatorInput
    slug: StringQueryOperatorInput
}

input ImagesJsonItemsFilterInput {
    card_context: ImagesJsonItemsCard_contextFilterInput
    children_count: IntQueryOperatorInput
    comment: StringQueryOperatorInput
    commentable_entity: ImagesJsonItemsCommentable_entityFilterInput
    commentable_id: IntQueryOperatorInput
    commentable_type: StringQueryOperatorInput
    created_at: DateQueryOperatorInput
    likes: IntQueryOperatorInput
    parent_id: IntQueryOperatorInput
    petition: ImagesJsonItemsPetitionFilterInput
    role: StringQueryOperatorInput
    user: ImagesJsonItemsUserFilterInput
}

input ImagesJsonItemsFilterListInput {
    elemMatch: ImagesJsonItemsFilterInput
}

input ImagesJsonItemsPetitionActivityFilterInput {
    recruit__count: IntQueryOperatorInput
    recruit__last_updated: IntQueryOperatorInput
    recruit_copylink_count: IntQueryOperatorInput
    recruit_copylink_last_updated: IntQueryOperatorInput
    recruit_email_count: IntQueryOperatorInput
    recruit_email_last_updated: IntQueryOperatorInput
    recruit_facebook_count: IntQueryOperatorInput
    recruit_facebook_last_updated: IntQueryOperatorInput
    recruit_facebook_messenger_mobile_count: IntQueryOperatorInput
    recruit_facebook_messenger_mobile_last_updated: IntQueryOperatorInput
    recruit_sms_count: IntQueryOperatorInput
    recruit_sms_last_updated: IntQueryOperatorInput
    recruit_twitter_count: IntQueryOperatorInput
    recruit_twitter_last_updated: IntQueryOperatorInput
    recruit_whatsapp_count: IntQueryOperatorInput
    recruit_whatsapp_last_updated: IntQueryOperatorInput
    share_copylink_count: IntQueryOperatorInput
    share_copylink_last_updated: FloatQueryOperatorInput
    share_email_count: IntQueryOperatorInput
    share_email_last_updated: FloatQueryOperatorInput
    share_facebook_count: IntQueryOperatorInput
    share_facebook_last_updated: FloatQueryOperatorInput
    share_facebook_messenger_count: IntQueryOperatorInput
    share_facebook_messenger_last_updated: FloatQueryOperatorInput
    share_sms_count: IntQueryOperatorInput
    share_sms_last_updated: FloatQueryOperatorInput
    share_twitter_count: IntQueryOperatorInput
    share_twitter_last_updated: FloatQueryOperatorInput
    share_whatsapp_count: IntQueryOperatorInput
    share_whatsapp_last_updated: FloatQueryOperatorInput
}

input ImagesJsonItemsPetitionCreator_photoFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsPetitionCreator_photoSizesFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionCreator_photoSizesFilterInput {
    large: ImagesJsonItemsPetitionCreator_photoSizesLargeFilterInput
    medium: ImagesJsonItemsPetitionCreator_photoSizesMediumFilterInput
    small: ImagesJsonItemsPetitionCreator_photoSizesSmallFilterInput
}

input ImagesJsonItemsPetitionCreator_photoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionCreator_photoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionCreator_photoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionCreator_photoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionCreator_photoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionCreator_photoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionCreator_photoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionCreator_photoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionCreator_photoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionFilterInput {
    activity: ImagesJsonItemsPetitionActivityFilterInput
    ask: StringQueryOperatorInput
    calculated_goal: IntQueryOperatorInput
    created_at: DateQueryOperatorInput
    creator_name: StringQueryOperatorInput
    creator_photo: ImagesJsonItemsPetitionCreator_photoFilterInput
    daily_signature_count: IntQueryOperatorInput
    daily_signup_count: IntQueryOperatorInput
    description: StringQueryOperatorInput
    discoverable: BooleanQueryOperatorInput
    display_title: StringQueryOperatorInput
    displayed_signature_count: IntQueryOperatorInput
    document_id: StringQueryOperatorInput
    enable_human_verification: BooleanQueryOperatorInput
    hide_comments: BooleanQueryOperatorInput
    hide_dm_action_panel: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_pledge: BooleanQueryOperatorInput
    is_verified_victory: BooleanQueryOperatorInput
    is_victory: BooleanQueryOperatorInput
    languages: StringQueryOperatorInput
    last_edited_at: DateQueryOperatorInput
    letter_body: StringQueryOperatorInput
    media: ImagesJsonItemsPetitionMediaFilterInput
    monthly_signature_count: IntQueryOperatorInput
    monthly_signup_count: IntQueryOperatorInput
    organization: ImagesJsonItemsPetitionOrganizationFilterInput
    original_locale: StringQueryOperatorInput
    petition_status: StringQueryOperatorInput
    petition_title: StringQueryOperatorInput
    photo: ImagesJsonItemsPetitionPhotoFilterInput
    primary_target: ImagesJsonItemsPetitionPrimary_targetFilterInput
    progress: FloatQueryOperatorInput
    published_at: DateQueryOperatorInput
    relevant_location: ImagesJsonItemsPetitionRelevant_locationFilterInput
    slug: StringQueryOperatorInput
    sponsored_campaign: BooleanQueryOperatorInput
    status: StringQueryOperatorInput
    tags: ImagesJsonItemsPetitionTagsFilterListInput
    targeting_description: StringQueryOperatorInput
    targets: ImagesJsonItemsPetitionTargetsFilterListInput
    title: StringQueryOperatorInput
    total_page_views: IntQueryOperatorInput
    total_share_count: IntQueryOperatorInput
    total_signature_count: IntQueryOperatorInput
    total_signup_count: IntQueryOperatorInput
    user: ImagesJsonItemsPetitionUserFilterInput
    victory_description: StringQueryOperatorInput
    weekly_signature_count: IntQueryOperatorInput
    weekly_signup_count: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsPetitionMediaSizesFilterInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaSizesFilterInput {
    large: ImagesJsonItemsPetitionMediaSizesLargeFilterInput
    medium: ImagesJsonItemsPetitionMediaSizesMediumFilterInput
    small: ImagesJsonItemsPetitionMediaSizesSmallFilterInput
    square: ImagesJsonItemsPetitionMediaSizesSquareFilterInput
}

input ImagesJsonItemsPetitionMediaSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionMediaSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionMediaSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionMediaSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaSizesSquareFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionMediaSizesSquareSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionMediaSizesSquareSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionOrganizationFilterInput {
    address: StringQueryOperatorInput
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    fb_page: StringQueryOperatorInput
    formatted_location_string: StringQueryOperatorInput
    id: IntQueryOperatorInput
    mission: StringQueryOperatorInput
    name: StringQueryOperatorInput
    photo: ImagesJsonItemsPetitionOrganizationPhotoFilterInput
    postal_code: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    state: StringQueryOperatorInput
    state_code: StringQueryOperatorInput
    twitter_page: StringQueryOperatorInput
    website: StringQueryOperatorInput
    zipcode: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionOrganizationPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsPetitionOrganizationPhotoSizesFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionOrganizationPhotoSizesFilterInput {
    large: ImagesJsonItemsPetitionOrganizationPhotoSizesLargeFilterInput
    medium: ImagesJsonItemsPetitionOrganizationPhotoSizesMediumFilterInput
    small: ImagesJsonItemsPetitionOrganizationPhotoSizesSmallFilterInput
}

input ImagesJsonItemsPetitionOrganizationPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionOrganizationPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionOrganizationPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionOrganizationPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionOrganizationPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionOrganizationPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionOrganizationPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionOrganizationPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionOrganizationPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsPetitionPhotoSizesFilterInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoSizesFilterInput {
    large: ImagesJsonItemsPetitionPhotoSizesLargeFilterInput
    medium: ImagesJsonItemsPetitionPhotoSizesMediumFilterInput
    small: ImagesJsonItemsPetitionPhotoSizesSmallFilterInput
    square: ImagesJsonItemsPetitionPhotoSizesSquareFilterInput
}

input ImagesJsonItemsPetitionPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoSizesSquareFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsPetitionPhotoSizesSquareSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionPhotoSizesSquareSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionPrimary_targetAdditional_dataFilterInput {
    first_name: StringQueryOperatorInput
    last_name: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionPrimary_targetFilterInput {
    additional_data: ImagesJsonItemsPetitionPrimary_targetAdditional_dataFilterInput
    display_name: StringQueryOperatorInput
    has_email: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_person: BooleanQueryOperatorInput
    locale: StringQueryOperatorInput
    publicly_visible: BooleanQueryOperatorInput
    slug: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionRelevant_locationFilterInput {
    country_code: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionTagsFilterInput {
    created_by_owner: BooleanQueryOperatorInput
    created_by_staff_member: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    locale: StringQueryOperatorInput
    name: StringQueryOperatorInput
    photo_id: IntQueryOperatorInput
    slug: StringQueryOperatorInput
    total_count: IntQueryOperatorInput
}

input ImagesJsonItemsPetitionTagsFilterListInput {
    elemMatch: ImagesJsonItemsPetitionTagsFilterInput
}

input ImagesJsonItemsPetitionTargetsAdditional_dataFilterInput {
    first_name: StringQueryOperatorInput
    last_name: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionTargetsFilterInput {
    additional_data: ImagesJsonItemsPetitionTargetsAdditional_dataFilterInput
    confirmed_at: DateQueryOperatorInput
    display_name: StringQueryOperatorInput
    has_email: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_person: BooleanQueryOperatorInput
    locale: StringQueryOperatorInput
    publicly_visible: BooleanQueryOperatorInput
    slug: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ImagesJsonItemsPetitionTargetsFilterListInput {
    elemMatch: ImagesJsonItemsPetitionTargetsFilterInput
}

input ImagesJsonItemsPetitionUserFilterInput {
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    description: StringQueryOperatorInput
    display_name: StringQueryOperatorInput
    first_name: StringQueryOperatorInput
    id: IntQueryOperatorInput
    last_name: StringQueryOperatorInput
    locale: StringQueryOperatorInput
    short_display_name: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    state_code: StringQueryOperatorInput
    website: StringQueryOperatorInput
}

input ImagesJsonItemsUserFilterInput {
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    display_name: StringQueryOperatorInput
    first_name: StringQueryOperatorInput
    id: IntQueryOperatorInput
    last_name: StringQueryOperatorInput
    locale: StringQueryOperatorInput
    photo: ImagesJsonItemsUserPhotoFilterInput
    short_display_name: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    state_code: StringQueryOperatorInput
}

input ImagesJsonItemsUserPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: ImagesJsonItemsUserPhotoSizesFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsUserPhotoSizesFilterInput {
    large: ImagesJsonItemsUserPhotoSizesLargeFilterInput
    medium: ImagesJsonItemsUserPhotoSizesMediumFilterInput
    small: ImagesJsonItemsUserPhotoSizesSmallFilterInput
    xlarge: ImagesJsonItemsUserPhotoSizesXlargeFilterInput
}

input ImagesJsonItemsUserPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsUserPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsUserPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsUserPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsUserPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsUserPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsUserPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsUserPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsUserPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonItemsUserPhotoSizesXlargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: ImagesJsonItemsUserPhotoSizesXlargeSizeFilterInput
    url: StringQueryOperatorInput
}

input ImagesJsonItemsUserPhotoSizesXlargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImagesJsonSortInput {
    fields: [ImagesJsonFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input MdxFilterInput {
    body: StringQueryOperatorInput
    children: NodeFilterListInput
    excerpt: StringQueryOperatorInput
    fileAbsolutePath: StringQueryOperatorInput
    frontmatter: MdxFrontmatterFilterInput
    headings: MdxHeadingMdxFilterListInput
    html: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    mdxAST: JSONQueryOperatorInput
    parent: NodeFilterInput
    rawBody: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    tableOfContents: JSONQueryOperatorInput
    timeToRead: IntQueryOperatorInput
    wordCount: MdxWordCountFilterInput
}

input MdxFrontmatterFilterInput {
    title: StringQueryOperatorInput
}

input MdxHeadingMdxFilterInput {
    depth: IntQueryOperatorInput
    value: StringQueryOperatorInput
}

input MdxHeadingMdxFilterListInput {
    elemMatch: MdxHeadingMdxFilterInput
}

input MdxSortInput {
    fields: [MdxFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input MdxWordCountFilterInput {
    paragraphs: IntQueryOperatorInput
    sentences: IntQueryOperatorInput
    words: IntQueryOperatorInput
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input SheetsArchivioVaccineFilterInput {
    author: StringQueryOperatorInput
    children: NodeFilterListInput
    childrenCount: StringQueryOperatorInput
    comment: StringQueryOperatorInput
    commentableId: StringQueryOperatorInput
    commentableType: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    descr: StringQueryOperatorInput
    extracted: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    likes: StringQueryOperatorInput
    origin: StringQueryOperatorInput
    parent: NodeFilterInput
    petitionLink: StringQueryOperatorInput
    petitionSlug: StringQueryOperatorInput
    role: StringQueryOperatorInput
    sheetsId: StringQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsArchivioVaccineSortInput {
    fields: [SheetsArchivioVaccineFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsChiFaCosaFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    parole: StringQueryOperatorInput
    persone: StringQueryOperatorInput
}

input SheetsChiFaCosaSortInput {
    fields: [SheetsChiFaCosaFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsDistribuzioneFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    nomask: IntQueryOperatorInput
    nomaskDelta: FloatQueryOperatorInput
    nomask__: FloatQueryOperatorInput
    parent: NodeFilterInput
    promaks__: FloatQueryOperatorInput
    promask: IntQueryOperatorInput
    promaskDelta: FloatQueryOperatorInput
    secondWord: StringQueryOperatorInput
    summedPercentage: FloatQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsDistribuzioneSortInput {
    fields: [SheetsDistribuzioneFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsDistribuzioneV2FilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    nomask: StringQueryOperatorInput
    nomaskDelta: FloatQueryOperatorInput
    nomask__: FloatQueryOperatorInput
    parent: NodeFilterInput
    promaks__: FloatQueryOperatorInput
    promask: StringQueryOperatorInput
    promaskDelta: FloatQueryOperatorInput
    secondWord: StringQueryOperatorInput
    summedPercentage: FloatQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsDistribuzioneV2SortInput {
    fields: [SheetsDistribuzioneV2FieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsEstrattiFilterInput {
    author: StringQueryOperatorInput
    children: NodeFilterListInput
    childrenCount: StringQueryOperatorInput
    comment: StringQueryOperatorInput
    commentId: IntQueryOperatorInput
    commentableId: StringQueryOperatorInput
    commentableType: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    extracted: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    likes: StringQueryOperatorInput
    origin: StringQueryOperatorInput
    parent: NodeFilterInput
    petitionLink: StringQueryOperatorInput
    petitionSlug: StringQueryOperatorInput
    role: StringQueryOperatorInput
    scelto: StringQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsEstrattiSortInput {
    fields: [SheetsEstrattiFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsScatterFilterInput {
    children: NodeFilterListInput
    countNomask: IntQueryOperatorInput
    countPromask: IntQueryOperatorInput
    deltaNomask: FloatQueryOperatorInput
    deltaPromask: FloatQueryOperatorInput
    finding: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    normalizedNomask: FloatQueryOperatorInput
    normalizedPromask: FloatQueryOperatorInput
    parent: NodeFilterInput
    percentageBoth: FloatQueryOperatorInput
    percentageNomask: FloatQueryOperatorInput
    percentagePromask: FloatQueryOperatorInput
    scelta: StringQueryOperatorInput
}

input SheetsScatterSortInput {
    fields: [SheetsScatterFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsSelezionatiVaccineFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    no: StringQueryOperatorInput
    parent: NodeFilterInput
    pro: StringQueryOperatorInput
}

input SheetsSelezionatiVaccineSortInput {
    fields: [SheetsSelezionatiVaccineFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsTestiFindingFilterInput {
    children: NodeFilterListInput
    finding: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    word: StringQueryOperatorInput
}

input SheetsTestiFindingSortInput {
    fields: [SheetsTestiFindingFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    jsxRuntime: StringQueryOperatorInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
}

input SiteFunctionFilterInput {
    absoluteCompiledFilePath: StringQueryOperatorInput
    children: NodeFilterListInput
    functionRoute: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    matchPath: StringQueryOperatorInput
    originalAbsoluteFilePath: StringQueryOperatorInput
    originalRelativeFilePath: StringQueryOperatorInput
    parent: NodeFilterInput
    pluginName: StringQueryOperatorInput
    relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
    fields: [SiteFunctionFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    matchPath: StringQueryOperatorInput
    pageContext: JSONQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: JSONQueryOperatorInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: JSONQueryOperatorInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
    description: StringQueryOperatorInput
    siteUrl: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input WebPOptions {
    quality: Int
}
