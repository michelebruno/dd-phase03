# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Add date formatting options."
directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

"Link to node by foreign-key relation."
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"Link to File node by relative path."
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"Proxy resolver from another field."
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"Infer field types from field values."
directive @infer on OBJECT

"Do not infer field types from field values."
directive @dontInfer on OBJECT

"Define the mime-types handled by this type."
directive @mimeTypes(
    "The mime-types handled by this type."
    types: [String!]! = []
) on OBJECT

"Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`."
directive @childOf(
    "A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin."
    mimeTypes: [String!]! = [],
    "A list of types this type is a child of. Usually these are the types handled by a transformer plugin."
    types: [String!]! = []
) on OBJECT

"""

DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".

Adds root query fields for an interface. All implementing types must also implement the Node interface.
"""
directive @nodeInterface on INTERFACE

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type CommentsJson implements Node {
    children: [Node!]!
    comment: String
    commentId: Int
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    internal: Internal!
    origin: String
    parent: Node
    petition: CommentsJsonPetition
    sentences: [[String]]
    showInHome: Boolean
    user: Int
}

type CommentsJsonConnection {
    distinct(field: CommentsJsonFieldsEnum!): [String!]!
    edges: [CommentsJsonEdge!]!
    group(field: CommentsJsonFieldsEnum!, limit: Int, skip: Int): [CommentsJsonGroupConnection!]!
    max(field: CommentsJsonFieldsEnum!): Float
    min(field: CommentsJsonFieldsEnum!): Float
    nodes: [CommentsJson!]!
    pageInfo: PageInfo!
    sum(field: CommentsJsonFieldsEnum!): Float
    totalCount: Int!
}

type CommentsJsonEdge {
    next: CommentsJson
    node: CommentsJson!
    previous: CommentsJson
}

type CommentsJsonGroupConnection {
    distinct(field: CommentsJsonFieldsEnum!): [String!]!
    edges: [CommentsJsonEdge!]!
    field: String!
    fieldValue: String
    group(field: CommentsJsonFieldsEnum!, limit: Int, skip: Int): [CommentsJsonGroupConnection!]!
    max(field: CommentsJsonFieldsEnum!): Float
    min(field: CommentsJsonFieldsEnum!): Float
    nodes: [CommentsJson!]!
    pageInfo: PageInfo!
    sum(field: CommentsJsonFieldsEnum!): Float
    totalCount: Int!
}

type CommentsJsonPetition {
    created_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    slug: String
    title: String
}

type DataJson implements Node {
    american: String
    benefit: String
    body: String
    building: String
    chance: String
    children: [Node!]!
    choice: String
    classrooms: String
    concern: String
    count: Int
    covid19: String
    decision: String
    disease: String
    district: String
    doctor: String
    effort: String
    face_masks: String
    family: String
    freedom: String
    granddaughter: String
    grandparent: String
    health_issues: String
    healthcare_workers: String
    hospitals: String
    human_beings: String
    id: ID!
    individual: String
    infections: String
    internal: Internal!
    items: [DataJsonItems]
    kids: String
    last_page: Boolean
    leader: String
    limit: Int
    loved_ones: String
    mandate: String
    mask: String
    mask_mandate: String
    measure: String
    number: String
    offset: Int
    opinion: String
    options: String
    order: String
    parent: Node
    parents: String
    physician: String
    precaution: String
    quarantine: String
    query_source: String
    reason: String
    reasons: String
    recommendation: String
    resident: String
    result: String
    rights: String
    school: String
    scientist: String
    student: String
    system: String
    teacher: String
    total_count: Int
    vaccine: String
    variant: String
}

type DataJsonConnection {
    distinct(field: DataJsonFieldsEnum!): [String!]!
    edges: [DataJsonEdge!]!
    group(field: DataJsonFieldsEnum!, limit: Int, skip: Int): [DataJsonGroupConnection!]!
    max(field: DataJsonFieldsEnum!): Float
    min(field: DataJsonFieldsEnum!): Float
    nodes: [DataJson!]!
    pageInfo: PageInfo!
    sum(field: DataJsonFieldsEnum!): Float
    totalCount: Int!
}

type DataJsonEdge {
    next: DataJson
    node: DataJson!
    previous: DataJson
}

type DataJsonGroupConnection {
    distinct(field: DataJsonFieldsEnum!): [String!]!
    edges: [DataJsonEdge!]!
    field: String!
    fieldValue: String
    group(field: DataJsonFieldsEnum!, limit: Int, skip: Int): [DataJsonGroupConnection!]!
    max(field: DataJsonFieldsEnum!): Float
    min(field: DataJsonFieldsEnum!): Float
    nodes: [DataJson!]!
    pageInfo: PageInfo!
    sum(field: DataJsonFieldsEnum!): Float
    totalCount: Int!
}

type DataJsonItems {
    card_context: DataJsonItemsCard_context
    children_count: Int
    comment: String
    commentable_entity: DataJsonItemsCommentable_entity
    commentable_id: Int
    commentable_type: String
    created_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    likes: Int
    parent_id: Int
    petition: DataJsonItemsPetition
    role: String
    user: DataJsonItemsUser
}

type DataJsonItemsCard_context {
    kind: String
    weekly_signature_count: Int
}

type DataJsonItemsCommentable_entity {
    activity: DataJsonItemsCommentable_entityActivity
    ask: String
    calculated_goal: Int
    created_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    creator_name: String
    creator_photo: DataJsonItemsCommentable_entityCreator_photo
    daily_signature_count: Int
    daily_signup_count: Int
    description: String
    discoverable: Boolean
    display_title: String
    displayed_signature_count: Int
    document_id: String
    enable_human_verification: Boolean
    hide_comments: Boolean
    hide_dm_action_panel: Boolean
    id: Int
    is_pledge: Boolean
    is_verified_victory: Boolean
    is_victory: Boolean
    languages: [String]
    last_edited_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    letter_body: String
    media: DataJsonItemsCommentable_entityMedia
    monthly_signature_count: Int
    monthly_signup_count: Int
    organization: DataJsonItemsCommentable_entityOrganization
    original_locale: String
    petition_status: String
    petition_title: String
    photo: DataJsonItemsCommentable_entityPhoto
    primary_target: DataJsonItemsCommentable_entityPrimary_target
    progress: Float
    published_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    relevant_location: DataJsonItemsCommentable_entityRelevant_location
    slug: String
    sponsored_campaign: Boolean
    status: String
    tags: [DataJsonItemsCommentable_entityTags]
    targeting_description: String
    targets: [DataJsonItemsCommentable_entityTargets]
    title: String
    total_page_views: Int
    total_share_count: Int
    total_signature_count: Int
    total_signup_count: Int
    user: DataJsonItemsCommentable_entityUser
    weekly_signature_count: Int
    weekly_signup_count: Int
}

type DataJsonItemsCommentable_entityActivity {
    recruit__count: Int
    recruit__last_updated: Int
    recruit_abi_gmail_count: Int
    recruit_abi_gmail_last_updated: Int
    recruit_copylink_count: Int
    recruit_copylink_last_updated: Int
    recruit_email_count: Int
    recruit_email_last_updated: Int
    recruit_facebook_count: Int
    recruit_facebook_last_updated: Int
    recruit_facebook_messenger_mobile_count: Int
    recruit_facebook_messenger_mobile_last_updated: Int
    recruit_sms_count: Int
    recruit_sms_last_updated: Int
    recruit_twitter_count: Int
    recruit_twitter_last_updated: Int
    recruit_whatsapp_count: Int
    recruit_whatsapp_last_updated: Int
    share_copylink_count: Int
    share_copylink_last_updated: Float
    share_email_count: Int
    share_email_last_updated: Float
    share_facebook_count: Int
    share_facebook_last_updated: Float
    share_facebook_messenger_count: Int
    share_facebook_messenger_last_updated: Float
    share_sms_count: Int
    share_sms_last_updated: Float
    share_twitter_count: Int
    share_twitter_last_updated: Float
    share_whatsapp_count: Int
    share_whatsapp_last_updated: Float
}

type DataJsonItemsCommentable_entityCreator_photo {
    id: Int
    sizes: DataJsonItemsCommentable_entityCreator_photoSizes
    url: String
}

type DataJsonItemsCommentable_entityCreator_photoSizes {
    large: DataJsonItemsCommentable_entityCreator_photoSizesLarge
    medium: DataJsonItemsCommentable_entityCreator_photoSizesMedium
    small: DataJsonItemsCommentable_entityCreator_photoSizesSmall
}

type DataJsonItemsCommentable_entityCreator_photoSizesLarge {
    processing: Boolean
    size: DataJsonItemsCommentable_entityCreator_photoSizesLargeSize
    url: String
}

type DataJsonItemsCommentable_entityCreator_photoSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityCreator_photoSizesMedium {
    processing: Boolean
    size: DataJsonItemsCommentable_entityCreator_photoSizesMediumSize
    url: String
}

type DataJsonItemsCommentable_entityCreator_photoSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityCreator_photoSizesSmall {
    processing: Boolean
    size: DataJsonItemsCommentable_entityCreator_photoSizesSmallSize
    url: String
}

type DataJsonItemsCommentable_entityCreator_photoSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityMedia {
    id: Int
    sizes: DataJsonItemsCommentable_entityMediaSizes
    type: String
    url: String
}

type DataJsonItemsCommentable_entityMediaSizes {
    large: DataJsonItemsCommentable_entityMediaSizesLarge
    medium: DataJsonItemsCommentable_entityMediaSizesMedium
    small: DataJsonItemsCommentable_entityMediaSizesSmall
    square: DataJsonItemsCommentable_entityMediaSizesSquare
}

type DataJsonItemsCommentable_entityMediaSizesLarge {
    processing: Boolean
    size: DataJsonItemsCommentable_entityMediaSizesLargeSize
    url: String
}

type DataJsonItemsCommentable_entityMediaSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityMediaSizesMedium {
    processing: Boolean
    size: DataJsonItemsCommentable_entityMediaSizesMediumSize
    url: String
}

type DataJsonItemsCommentable_entityMediaSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityMediaSizesSmall {
    processing: Boolean
    size: DataJsonItemsCommentable_entityMediaSizesSmallSize
    url: String
}

type DataJsonItemsCommentable_entityMediaSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityMediaSizesSquare {
    processing: Boolean
    size: DataJsonItemsCommentable_entityMediaSizesSquareSize
    url: String
}

type DataJsonItemsCommentable_entityMediaSizesSquareSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityOrganization {
    country_code: String
    formatted_location_string: String
    id: Int
    name: String
    photo: DataJsonItemsCommentable_entityOrganizationPhoto
    slug: String
    website: String
}

type DataJsonItemsCommentable_entityOrganizationPhoto {
    id: Int
    sizes: DataJsonItemsCommentable_entityOrganizationPhotoSizes
    url: String
}

type DataJsonItemsCommentable_entityOrganizationPhotoSizes {
    large: DataJsonItemsCommentable_entityOrganizationPhotoSizesLarge
    medium: DataJsonItemsCommentable_entityOrganizationPhotoSizesMedium
    small: DataJsonItemsCommentable_entityOrganizationPhotoSizesSmall
}

type DataJsonItemsCommentable_entityOrganizationPhotoSizesLarge {
    processing: Boolean
    size: DataJsonItemsCommentable_entityOrganizationPhotoSizesLargeSize
    url: String
}

type DataJsonItemsCommentable_entityOrganizationPhotoSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityOrganizationPhotoSizesMedium {
    processing: Boolean
    size: DataJsonItemsCommentable_entityOrganizationPhotoSizesMediumSize
    url: String
}

type DataJsonItemsCommentable_entityOrganizationPhotoSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityOrganizationPhotoSizesSmall {
    processing: Boolean
    size: DataJsonItemsCommentable_entityOrganizationPhotoSizesSmallSize
    url: String
}

type DataJsonItemsCommentable_entityOrganizationPhotoSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityPhoto {
    id: Int
    sizes: DataJsonItemsCommentable_entityPhotoSizes
    type: String
    url: String
}

type DataJsonItemsCommentable_entityPhotoSizes {
    large: DataJsonItemsCommentable_entityPhotoSizesLarge
    medium: DataJsonItemsCommentable_entityPhotoSizesMedium
    small: DataJsonItemsCommentable_entityPhotoSizesSmall
    square: DataJsonItemsCommentable_entityPhotoSizesSquare
}

type DataJsonItemsCommentable_entityPhotoSizesLarge {
    processing: Boolean
    size: DataJsonItemsCommentable_entityPhotoSizesLargeSize
    url: String
}

type DataJsonItemsCommentable_entityPhotoSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityPhotoSizesMedium {
    processing: Boolean
    size: DataJsonItemsCommentable_entityPhotoSizesMediumSize
    url: String
}

type DataJsonItemsCommentable_entityPhotoSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityPhotoSizesSmall {
    processing: Boolean
    size: DataJsonItemsCommentable_entityPhotoSizesSmallSize
    url: String
}

type DataJsonItemsCommentable_entityPhotoSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityPhotoSizesSquare {
    processing: Boolean
    size: DataJsonItemsCommentable_entityPhotoSizesSquareSize
    url: String
}

type DataJsonItemsCommentable_entityPhotoSizesSquareSize {
    height: Int
    width: Int
}

type DataJsonItemsCommentable_entityPrimary_target {
    additional_data: DataJsonItemsCommentable_entityPrimary_targetAdditional_data
    display_name: String
    has_email: Boolean
    id: Int
    is_person: Boolean
    publicly_visible: Boolean
    slug: String
    type: String
}

type DataJsonItemsCommentable_entityPrimary_targetAdditional_data {
    first_name: String
    last_name: String
    title: String
}

type DataJsonItemsCommentable_entityRelevant_location {
    city: String
    country_code: String
    google_places_id: String
    lat: Float
    lng: Float
}

type DataJsonItemsCommentable_entityTags {
    created_by_owner: Boolean
    created_by_staff_member: Boolean
    id: Int
    locale: String
    name: String
    photo_id: Int
    slug: String
    total_count: Int
}

type DataJsonItemsCommentable_entityTargets {
    additional_data: DataJsonItemsCommentable_entityTargetsAdditional_data
    display_name: String
    has_email: Boolean
    id: Int
    is_person: Boolean
    publicly_visible: Boolean
    slug: String
    type: String
}

type DataJsonItemsCommentable_entityTargetsAdditional_data {
    first_name: String
    last_name: String
    title: String
}

type DataJsonItemsCommentable_entityUser {
    city: String
    country_code: String
    display_name: String
    first_name: String
    id: Int
    last_name: String
    locale: String
    short_display_name: String
    slug: String
}

type DataJsonItemsPetition {
    activity: DataJsonItemsPetitionActivity
    ask: String
    calculated_goal: Int
    created_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    creator_name: String
    creator_photo: DataJsonItemsPetitionCreator_photo
    daily_signature_count: Int
    daily_signup_count: Int
    description: String
    discoverable: Boolean
    display_title: String
    displayed_signature_count: Int
    document_id: String
    enable_human_verification: Boolean
    hide_comments: Boolean
    hide_dm_action_panel: Boolean
    id: Int
    is_pledge: Boolean
    is_verified_victory: Boolean
    is_victory: Boolean
    languages: [String]
    last_edited_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    letter_body: String
    media: DataJsonItemsPetitionMedia
    monthly_signature_count: Int
    monthly_signup_count: Int
    organization: DataJsonItemsPetitionOrganization
    original_locale: String
    petition_status: String
    petition_title: String
    photo: DataJsonItemsPetitionPhoto
    primary_target: DataJsonItemsPetitionPrimary_target
    progress: Float
    published_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    relevant_location: DataJsonItemsPetitionRelevant_location
    slug: String
    sponsored_campaign: Boolean
    status: String
    tags: [DataJsonItemsPetitionTags]
    targeting_description: String
    targets: [DataJsonItemsPetitionTargets]
    title: String
    total_page_views: Int
    total_share_count: Int
    total_signature_count: Int
    total_signup_count: Int
    user: DataJsonItemsPetitionUser
    victory_description: String
    weekly_signature_count: Int
    weekly_signup_count: Int
}

type DataJsonItemsPetitionActivity {
    recruit__count: Int
    recruit__last_updated: Int
    recruit_copylink_count: Int
    recruit_copylink_last_updated: Int
    recruit_email_count: Int
    recruit_email_last_updated: Int
    recruit_facebook_count: Int
    recruit_facebook_last_updated: Int
    recruit_facebook_messenger_mobile_count: Int
    recruit_facebook_messenger_mobile_last_updated: Int
    recruit_sms_count: Int
    recruit_sms_last_updated: Int
    recruit_twitter_count: Int
    recruit_twitter_last_updated: Int
    recruit_whatsapp_count: Int
    recruit_whatsapp_last_updated: Int
    share_copylink_count: Int
    share_copylink_last_updated: Float
    share_email_count: Int
    share_email_last_updated: Float
    share_facebook_count: Int
    share_facebook_last_updated: Float
    share_facebook_messenger_count: Int
    share_facebook_messenger_last_updated: Float
    share_sms_count: Int
    share_sms_last_updated: Float
    share_twitter_count: Int
    share_twitter_last_updated: Float
    share_whatsapp_count: Int
    share_whatsapp_last_updated: Float
}

type DataJsonItemsPetitionCreator_photo {
    id: Int
    sizes: DataJsonItemsPetitionCreator_photoSizes
    url: String
}

type DataJsonItemsPetitionCreator_photoSizes {
    large: DataJsonItemsPetitionCreator_photoSizesLarge
    medium: DataJsonItemsPetitionCreator_photoSizesMedium
    small: DataJsonItemsPetitionCreator_photoSizesSmall
}

type DataJsonItemsPetitionCreator_photoSizesLarge {
    processing: Boolean
    size: DataJsonItemsPetitionCreator_photoSizesLargeSize
    url: String
}

type DataJsonItemsPetitionCreator_photoSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionCreator_photoSizesMedium {
    processing: Boolean
    size: DataJsonItemsPetitionCreator_photoSizesMediumSize
    url: String
}

type DataJsonItemsPetitionCreator_photoSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionCreator_photoSizesSmall {
    processing: Boolean
    size: DataJsonItemsPetitionCreator_photoSizesSmallSize
    url: String
}

type DataJsonItemsPetitionCreator_photoSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionMedia {
    id: Int
    sizes: DataJsonItemsPetitionMediaSizes
    type: String
    url: String
}

type DataJsonItemsPetitionMediaSizes {
    large: DataJsonItemsPetitionMediaSizesLarge
    medium: DataJsonItemsPetitionMediaSizesMedium
    small: DataJsonItemsPetitionMediaSizesSmall
    square: DataJsonItemsPetitionMediaSizesSquare
}

type DataJsonItemsPetitionMediaSizesLarge {
    processing: Boolean
    size: DataJsonItemsPetitionMediaSizesLargeSize
    url: String
}

type DataJsonItemsPetitionMediaSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionMediaSizesMedium {
    processing: Boolean
    size: DataJsonItemsPetitionMediaSizesMediumSize
    url: String
}

type DataJsonItemsPetitionMediaSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionMediaSizesSmall {
    processing: Boolean
    size: DataJsonItemsPetitionMediaSizesSmallSize
    url: String
}

type DataJsonItemsPetitionMediaSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionMediaSizesSquare {
    processing: Boolean
    size: DataJsonItemsPetitionMediaSizesSquareSize
    url: String
}

type DataJsonItemsPetitionMediaSizesSquareSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionOrganization {
    address: String
    city: String
    country_code: String
    fb_page: String
    formatted_location_string: String
    id: Int
    mission: String
    name: String
    photo: DataJsonItemsPetitionOrganizationPhoto
    postal_code: String
    slug: String
    state: String
    state_code: String
    twitter_page: String
    website: String
    zipcode: String
}

type DataJsonItemsPetitionOrganizationPhoto {
    id: Int
    sizes: DataJsonItemsPetitionOrganizationPhotoSizes
    url: String
}

type DataJsonItemsPetitionOrganizationPhotoSizes {
    large: DataJsonItemsPetitionOrganizationPhotoSizesLarge
    medium: DataJsonItemsPetitionOrganizationPhotoSizesMedium
    small: DataJsonItemsPetitionOrganizationPhotoSizesSmall
}

type DataJsonItemsPetitionOrganizationPhotoSizesLarge {
    processing: Boolean
    size: DataJsonItemsPetitionOrganizationPhotoSizesLargeSize
    url: String
}

type DataJsonItemsPetitionOrganizationPhotoSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionOrganizationPhotoSizesMedium {
    processing: Boolean
    size: DataJsonItemsPetitionOrganizationPhotoSizesMediumSize
    url: String
}

type DataJsonItemsPetitionOrganizationPhotoSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionOrganizationPhotoSizesSmall {
    processing: Boolean
    size: DataJsonItemsPetitionOrganizationPhotoSizesSmallSize
    url: String
}

type DataJsonItemsPetitionOrganizationPhotoSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionPhoto {
    id: Int
    sizes: DataJsonItemsPetitionPhotoSizes
    type: String
    url: String
}

type DataJsonItemsPetitionPhotoSizes {
    large: DataJsonItemsPetitionPhotoSizesLarge
    medium: DataJsonItemsPetitionPhotoSizesMedium
    small: DataJsonItemsPetitionPhotoSizesSmall
    square: DataJsonItemsPetitionPhotoSizesSquare
}

type DataJsonItemsPetitionPhotoSizesLarge {
    processing: Boolean
    size: DataJsonItemsPetitionPhotoSizesLargeSize
    url: String
}

type DataJsonItemsPetitionPhotoSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionPhotoSizesMedium {
    processing: Boolean
    size: DataJsonItemsPetitionPhotoSizesMediumSize
    url: String
}

type DataJsonItemsPetitionPhotoSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionPhotoSizesSmall {
    processing: Boolean
    size: DataJsonItemsPetitionPhotoSizesSmallSize
    url: String
}

type DataJsonItemsPetitionPhotoSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionPhotoSizesSquare {
    processing: Boolean
    size: DataJsonItemsPetitionPhotoSizesSquareSize
    url: String
}

type DataJsonItemsPetitionPhotoSizesSquareSize {
    height: Int
    width: Int
}

type DataJsonItemsPetitionPrimary_target {
    additional_data: DataJsonItemsPetitionPrimary_targetAdditional_data
    display_name: String
    has_email: Boolean
    id: Int
    is_person: Boolean
    locale: String
    publicly_visible: Boolean
    slug: String
    type: String
}

type DataJsonItemsPetitionPrimary_targetAdditional_data {
    first_name: String
    last_name: String
}

type DataJsonItemsPetitionRelevant_location {
    country_code: String
}

type DataJsonItemsPetitionTags {
    created_by_owner: Boolean
    created_by_staff_member: Boolean
    id: Int
    locale: String
    name: String
    photo_id: Int
    slug: String
    total_count: Int
}

type DataJsonItemsPetitionTargets {
    additional_data: DataJsonItemsPetitionTargetsAdditional_data
    confirmed_at(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    display_name: String
    has_email: Boolean
    id: Int
    is_person: Boolean
    locale: String
    publicly_visible: Boolean
    slug: String
    type: String
}

type DataJsonItemsPetitionTargetsAdditional_data {
    first_name: String
    last_name: String
}

type DataJsonItemsPetitionUser {
    city: String
    country_code: String
    description: String
    display_name: String
    first_name: String
    id: Int
    last_name: String
    locale: String
    short_display_name: String
    slug: String
    state_code: String
    website: String
}

type DataJsonItemsUser {
    city: String
    country_code: String
    display_name: String
    first_name: String
    id: Int
    last_name: String
    locale: String
    photo: DataJsonItemsUserPhoto
    short_display_name: String
    slug: String
    state_code: String
}

type DataJsonItemsUserPhoto {
    id: Int
    sizes: DataJsonItemsUserPhotoSizes
    url: String
}

type DataJsonItemsUserPhotoSizes {
    large: DataJsonItemsUserPhotoSizesLarge
    medium: DataJsonItemsUserPhotoSizesMedium
    small: DataJsonItemsUserPhotoSizesSmall
    xlarge: DataJsonItemsUserPhotoSizesXlarge
}

type DataJsonItemsUserPhotoSizesLarge {
    processing: Boolean
    size: DataJsonItemsUserPhotoSizesLargeSize
    url: String
}

type DataJsonItemsUserPhotoSizesLargeSize {
    height: Int
    width: Int
}

type DataJsonItemsUserPhotoSizesMedium {
    processing: Boolean
    size: DataJsonItemsUserPhotoSizesMediumSize
    url: String
}

type DataJsonItemsUserPhotoSizesMediumSize {
    height: Int
    width: Int
}

type DataJsonItemsUserPhotoSizesSmall {
    processing: Boolean
    size: DataJsonItemsUserPhotoSizesSmallSize
    url: String
}

type DataJsonItemsUserPhotoSizesSmallSize {
    height: Int
    width: Int
}

type DataJsonItemsUserPhotoSizesXlarge {
    processing: Boolean
    size: DataJsonItemsUserPhotoSizesXlargeSize
    url: String
}

type DataJsonItemsUserPhotoSizesXlargeSize {
    height: Int
    width: Int
}

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    "Returns the first child node of type CommentsJson or null if there are no children of given type on this node"
    childCommentsJson: CommentsJson
    "Returns the first child node of type DataJson or null if there are no children of given type on this node"
    childDataJson: DataJson
    "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
    childImageSharp: ImageSharp
    children: [Node!]!
    "Returns all children nodes filtered by type CommentsJson"
    childrenCommentsJson: [CommentsJson]
    "Returns all children nodes filtered by type DataJson"
    childrenDataJson: [DataJson]
    "Returns all children nodes filtered by type ImageSharp"
    childrenImageSharp: [ImageSharp]
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Options to pass to sharp when generating AVIF images."
        avifOptions: AVIFOptions,
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat],
        """

        The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
        The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
        matching the aspect ratio of the source image.
        """
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
        and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overridden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download.
        You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
        does not actually span the full width of the screen, in which case you should pass the correct size here.
        """
        sizes: String,
        "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type Mdx implements Node {
    body: String!
    children: [Node!]!
    excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
    fileAbsolutePath: String!
    frontmatter: MdxFrontmatter
    headings(depth: HeadingsMdx): [MdxHeadingMdx]
    html: String
    id: ID!
    internal: Internal!
    mdxAST: JSON
    parent: Node
    rawBody: String!
    slug: String
    tableOfContents(maxDepth: Int): JSON
    timeToRead: Int
    wordCount: MdxWordCount
}

type MdxConnection {
    distinct(field: MdxFieldsEnum!): [String!]!
    edges: [MdxEdge!]!
    group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
    max(field: MdxFieldsEnum!): Float
    min(field: MdxFieldsEnum!): Float
    nodes: [Mdx!]!
    pageInfo: PageInfo!
    sum(field: MdxFieldsEnum!): Float
    totalCount: Int!
}

type MdxEdge {
    next: Mdx
    node: Mdx!
    previous: Mdx
}

type MdxFrontmatter {
    title: String!
}

type MdxGroupConnection {
    distinct(field: MdxFieldsEnum!): [String!]!
    edges: [MdxEdge!]!
    field: String!
    fieldValue: String
    group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
    max(field: MdxFieldsEnum!): Float
    min(field: MdxFieldsEnum!): Float
    nodes: [Mdx!]!
    pageInfo: PageInfo!
    sum(field: MdxFieldsEnum!): Float
    totalCount: Int!
}

type MdxHeadingMdx {
    depth: Int
    value: String
}

type MdxWordCount {
    paragraphs: Int
    sentences: Int
    words: Int
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type Query {
    allCommentsJson(filter: CommentsJsonFilterInput, limit: Int, skip: Int, sort: CommentsJsonSortInput): CommentsJsonConnection!
    allDataJson(filter: DataJsonFilterInput, limit: Int, skip: Int, sort: DataJsonSortInput): DataJsonConnection!
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allMdx(filter: MdxFilterInput, limit: Int, skip: Int, sort: MdxSortInput): MdxConnection!
    allSheetsArchivioVaccine(filter: SheetsArchivioVaccineFilterInput, limit: Int, skip: Int, sort: SheetsArchivioVaccineSortInput): SheetsArchivioVaccineConnection!
    allSheetsChiFaCosa(filter: SheetsChiFaCosaFilterInput, limit: Int, skip: Int, sort: SheetsChiFaCosaSortInput): SheetsChiFaCosaConnection!
    allSheetsCopiaDiDistribuzione(filter: SheetsCopiaDiDistribuzioneFilterInput, limit: Int, skip: Int, sort: SheetsCopiaDiDistribuzioneSortInput): SheetsCopiaDiDistribuzioneConnection!
    allSheetsDistribuzione(filter: SheetsDistribuzioneFilterInput, limit: Int, skip: Int, sort: SheetsDistribuzioneSortInput): SheetsDistribuzioneConnection!
    allSheetsDistribuzioneV2(filter: SheetsDistribuzioneV2FilterInput, limit: Int, skip: Int, sort: SheetsDistribuzioneV2SortInput): SheetsDistribuzioneV2Connection!
    allSheetsEstratti(filter: SheetsEstrattiFilterInput, limit: Int, skip: Int, sort: SheetsEstrattiSortInput): SheetsEstrattiConnection!
    allSheetsScatter(filter: SheetsScatterFilterInput, limit: Int, skip: Int, sort: SheetsScatterSortInput): SheetsScatterConnection!
    allSheetsSelezionatiVaccine(filter: SheetsSelezionatiVaccineFilterInput, limit: Int, skip: Int, sort: SheetsSelezionatiVaccineSortInput): SheetsSelezionatiVaccineConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    commentsJson(children: NodeFilterListInput, comment: StringQueryOperatorInput, commentId: IntQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, origin: StringQueryOperatorInput, parent: NodeFilterInput, petition: CommentsJsonPetitionFilterInput, sentences: StringQueryOperatorInput, showInHome: BooleanQueryOperatorInput, user: IntQueryOperatorInput): CommentsJson
    dataJson(american: StringQueryOperatorInput, benefit: StringQueryOperatorInput, body: StringQueryOperatorInput, building: StringQueryOperatorInput, chance: StringQueryOperatorInput, children: NodeFilterListInput, choice: StringQueryOperatorInput, classrooms: StringQueryOperatorInput, concern: StringQueryOperatorInput, count: IntQueryOperatorInput, covid19: StringQueryOperatorInput, decision: StringQueryOperatorInput, disease: StringQueryOperatorInput, district: StringQueryOperatorInput, doctor: StringQueryOperatorInput, effort: StringQueryOperatorInput, face_masks: StringQueryOperatorInput, family: StringQueryOperatorInput, freedom: StringQueryOperatorInput, granddaughter: StringQueryOperatorInput, grandparent: StringQueryOperatorInput, health_issues: StringQueryOperatorInput, healthcare_workers: StringQueryOperatorInput, hospitals: StringQueryOperatorInput, human_beings: StringQueryOperatorInput, id: StringQueryOperatorInput, individual: StringQueryOperatorInput, infections: StringQueryOperatorInput, internal: InternalFilterInput, items: DataJsonItemsFilterListInput, kids: StringQueryOperatorInput, last_page: BooleanQueryOperatorInput, leader: StringQueryOperatorInput, limit: IntQueryOperatorInput, loved_ones: StringQueryOperatorInput, mandate: StringQueryOperatorInput, mask: StringQueryOperatorInput, mask_mandate: StringQueryOperatorInput, measure: StringQueryOperatorInput, number: StringQueryOperatorInput, offset: IntQueryOperatorInput, opinion: StringQueryOperatorInput, options: StringQueryOperatorInput, order: StringQueryOperatorInput, parent: NodeFilterInput, parents: StringQueryOperatorInput, physician: StringQueryOperatorInput, precaution: StringQueryOperatorInput, quarantine: StringQueryOperatorInput, query_source: StringQueryOperatorInput, reason: StringQueryOperatorInput, reasons: StringQueryOperatorInput, recommendation: StringQueryOperatorInput, resident: StringQueryOperatorInput, result: StringQueryOperatorInput, rights: StringQueryOperatorInput, school: StringQueryOperatorInput, scientist: StringQueryOperatorInput, student: StringQueryOperatorInput, system: StringQueryOperatorInput, teacher: StringQueryOperatorInput, total_count: IntQueryOperatorInput, vaccine: StringQueryOperatorInput, variant: StringQueryOperatorInput): DataJson
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childCommentsJson: CommentsJsonFilterInput, childDataJson: DataJsonFilterInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, childrenCommentsJson: CommentsJsonFilterListInput, childrenDataJson: DataJsonFilterListInput, childrenImageSharp: ImageSharpFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
    mdx(body: StringQueryOperatorInput, children: NodeFilterListInput, excerpt: StringQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MdxFrontmatterFilterInput, headings: MdxHeadingMdxFilterListInput, html: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, mdxAST: JSONQueryOperatorInput, parent: NodeFilterInput, rawBody: StringQueryOperatorInput, slug: StringQueryOperatorInput, tableOfContents: JSONQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MdxWordCountFilterInput): Mdx
    sheetsArchivioVaccine(author: StringQueryOperatorInput, children: NodeFilterListInput, childrenCount: StringQueryOperatorInput, comment: StringQueryOperatorInput, commentableId: StringQueryOperatorInput, commentableType: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, descr: StringQueryOperatorInput, extracted: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, likes: StringQueryOperatorInput, origin: StringQueryOperatorInput, parent: NodeFilterInput, petitionLink: StringQueryOperatorInput, petitionSlug: StringQueryOperatorInput, role: StringQueryOperatorInput, sheetsId: StringQueryOperatorInput, word: StringQueryOperatorInput): SheetsArchivioVaccine
    sheetsChiFaCosa(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, parole: StringQueryOperatorInput, persone: StringQueryOperatorInput): SheetsChiFaCosa
    sheetsCopiaDiDistribuzione(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, nomask: IntQueryOperatorInput, nomaskDelta: FloatQueryOperatorInput, nomask__: FloatQueryOperatorInput, parent: NodeFilterInput, promaks__: FloatQueryOperatorInput, promask: IntQueryOperatorInput, promaskDelta: FloatQueryOperatorInput, secondWord: StringQueryOperatorInput, summedPercentage: FloatQueryOperatorInput, word: StringQueryOperatorInput): SheetsCopiaDiDistribuzione
    sheetsDistribuzione(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, nomask: IntQueryOperatorInput, nomaskDelta: FloatQueryOperatorInput, nomask__: FloatQueryOperatorInput, parent: NodeFilterInput, promaks__: FloatQueryOperatorInput, promask: IntQueryOperatorInput, promaskDelta: FloatQueryOperatorInput, secondWord: StringQueryOperatorInput, summedPercentage: FloatQueryOperatorInput, word: StringQueryOperatorInput): SheetsDistribuzione
    sheetsDistribuzioneV2(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, nomask: StringQueryOperatorInput, nomaskDelta: FloatQueryOperatorInput, nomask__: FloatQueryOperatorInput, parent: NodeFilterInput, promaks__: FloatQueryOperatorInput, promask: StringQueryOperatorInput, promaskDelta: FloatQueryOperatorInput, secondWord: StringQueryOperatorInput, summedPercentage: FloatQueryOperatorInput, word: StringQueryOperatorInput): SheetsDistribuzioneV2
    sheetsEstratti(author: StringQueryOperatorInput, children: NodeFilterListInput, childrenCount: StringQueryOperatorInput, comment: StringQueryOperatorInput, commentId: IntQueryOperatorInput, commentableId: StringQueryOperatorInput, commentableType: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, extracted: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, likes: StringQueryOperatorInput, origin: StringQueryOperatorInput, parent: NodeFilterInput, petitionLink: StringQueryOperatorInput, petitionSlug: StringQueryOperatorInput, role: StringQueryOperatorInput, scelto: StringQueryOperatorInput, word: StringQueryOperatorInput): SheetsEstratti
    sheetsScatter(children: NodeFilterListInput, countNomask: IntQueryOperatorInput, countPromask: IntQueryOperatorInput, deltaNomask: FloatQueryOperatorInput, deltaPromask: FloatQueryOperatorInput, finding: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, normalizedNomask: FloatQueryOperatorInput, normalizedPromask: FloatQueryOperatorInput, parent: NodeFilterInput, percentageBoth: FloatQueryOperatorInput, percentageNomask: FloatQueryOperatorInput, percentagePromask: FloatQueryOperatorInput, scelta: StringQueryOperatorInput): SheetsScatter
    sheetsSelezionatiVaccine(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, no: StringQueryOperatorInput, parent: NodeFilterInput, pro: StringQueryOperatorInput): SheetsSelezionatiVaccine
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, jsxRuntime: StringQueryOperatorInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, children: NodeFilterListInput, functionRoute: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, parent: NodeFilterInput, pluginName: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: JSONQueryOperatorInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type SheetsArchivioVaccine implements Node {
    author: String
    children: [Node!]!
    childrenCount: String
    comment: String
    commentableId: String
    commentableType: String
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    descr: String
    extracted: String
    id: ID!
    internal: Internal!
    likes: String
    origin: String
    parent: Node
    petitionLink: String
    petitionSlug: String
    role: String
    sheetsId: String
    word: String
}

type SheetsArchivioVaccineConnection {
    distinct(field: SheetsArchivioVaccineFieldsEnum!): [String!]!
    edges: [SheetsArchivioVaccineEdge!]!
    group(field: SheetsArchivioVaccineFieldsEnum!, limit: Int, skip: Int): [SheetsArchivioVaccineGroupConnection!]!
    max(field: SheetsArchivioVaccineFieldsEnum!): Float
    min(field: SheetsArchivioVaccineFieldsEnum!): Float
    nodes: [SheetsArchivioVaccine!]!
    pageInfo: PageInfo!
    sum(field: SheetsArchivioVaccineFieldsEnum!): Float
    totalCount: Int!
}

type SheetsArchivioVaccineEdge {
    next: SheetsArchivioVaccine
    node: SheetsArchivioVaccine!
    previous: SheetsArchivioVaccine
}

type SheetsArchivioVaccineGroupConnection {
    distinct(field: SheetsArchivioVaccineFieldsEnum!): [String!]!
    edges: [SheetsArchivioVaccineEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsArchivioVaccineFieldsEnum!, limit: Int, skip: Int): [SheetsArchivioVaccineGroupConnection!]!
    max(field: SheetsArchivioVaccineFieldsEnum!): Float
    min(field: SheetsArchivioVaccineFieldsEnum!): Float
    nodes: [SheetsArchivioVaccine!]!
    pageInfo: PageInfo!
    sum(field: SheetsArchivioVaccineFieldsEnum!): Float
    totalCount: Int!
}

type SheetsChiFaCosa implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
    parole: String
    persone: String
}

type SheetsChiFaCosaConnection {
    distinct(field: SheetsChiFaCosaFieldsEnum!): [String!]!
    edges: [SheetsChiFaCosaEdge!]!
    group(field: SheetsChiFaCosaFieldsEnum!, limit: Int, skip: Int): [SheetsChiFaCosaGroupConnection!]!
    max(field: SheetsChiFaCosaFieldsEnum!): Float
    min(field: SheetsChiFaCosaFieldsEnum!): Float
    nodes: [SheetsChiFaCosa!]!
    pageInfo: PageInfo!
    sum(field: SheetsChiFaCosaFieldsEnum!): Float
    totalCount: Int!
}

type SheetsChiFaCosaEdge {
    next: SheetsChiFaCosa
    node: SheetsChiFaCosa!
    previous: SheetsChiFaCosa
}

type SheetsChiFaCosaGroupConnection {
    distinct(field: SheetsChiFaCosaFieldsEnum!): [String!]!
    edges: [SheetsChiFaCosaEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsChiFaCosaFieldsEnum!, limit: Int, skip: Int): [SheetsChiFaCosaGroupConnection!]!
    max(field: SheetsChiFaCosaFieldsEnum!): Float
    min(field: SheetsChiFaCosaFieldsEnum!): Float
    nodes: [SheetsChiFaCosa!]!
    pageInfo: PageInfo!
    sum(field: SheetsChiFaCosaFieldsEnum!): Float
    totalCount: Int!
}

type SheetsCopiaDiDistribuzione implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    nomask: Int
    nomaskDelta: Float
    nomask__: Float
    parent: Node
    promaks__: Float
    promask: Int
    promaskDelta: Float
    secondWord: String
    summedPercentage: Float
    word: String
}

type SheetsCopiaDiDistribuzioneConnection {
    distinct(field: SheetsCopiaDiDistribuzioneFieldsEnum!): [String!]!
    edges: [SheetsCopiaDiDistribuzioneEdge!]!
    group(field: SheetsCopiaDiDistribuzioneFieldsEnum!, limit: Int, skip: Int): [SheetsCopiaDiDistribuzioneGroupConnection!]!
    max(field: SheetsCopiaDiDistribuzioneFieldsEnum!): Float
    min(field: SheetsCopiaDiDistribuzioneFieldsEnum!): Float
    nodes: [SheetsCopiaDiDistribuzione!]!
    pageInfo: PageInfo!
    sum(field: SheetsCopiaDiDistribuzioneFieldsEnum!): Float
    totalCount: Int!
}

type SheetsCopiaDiDistribuzioneEdge {
    next: SheetsCopiaDiDistribuzione
    node: SheetsCopiaDiDistribuzione!
    previous: SheetsCopiaDiDistribuzione
}

type SheetsCopiaDiDistribuzioneGroupConnection {
    distinct(field: SheetsCopiaDiDistribuzioneFieldsEnum!): [String!]!
    edges: [SheetsCopiaDiDistribuzioneEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsCopiaDiDistribuzioneFieldsEnum!, limit: Int, skip: Int): [SheetsCopiaDiDistribuzioneGroupConnection!]!
    max(field: SheetsCopiaDiDistribuzioneFieldsEnum!): Float
    min(field: SheetsCopiaDiDistribuzioneFieldsEnum!): Float
    nodes: [SheetsCopiaDiDistribuzione!]!
    pageInfo: PageInfo!
    sum(field: SheetsCopiaDiDistribuzioneFieldsEnum!): Float
    totalCount: Int!
}

type SheetsDistribuzione implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    nomask: Int
    nomaskDelta: Float
    nomask__: Float
    parent: Node
    promaks__: Float
    promask: Int
    promaskDelta: Float
    secondWord: String
    summedPercentage: Float
    word: String
}

type SheetsDistribuzioneConnection {
    distinct(field: SheetsDistribuzioneFieldsEnum!): [String!]!
    edges: [SheetsDistribuzioneEdge!]!
    group(field: SheetsDistribuzioneFieldsEnum!, limit: Int, skip: Int): [SheetsDistribuzioneGroupConnection!]!
    max(field: SheetsDistribuzioneFieldsEnum!): Float
    min(field: SheetsDistribuzioneFieldsEnum!): Float
    nodes: [SheetsDistribuzione!]!
    pageInfo: PageInfo!
    sum(field: SheetsDistribuzioneFieldsEnum!): Float
    totalCount: Int!
}

type SheetsDistribuzioneEdge {
    next: SheetsDistribuzione
    node: SheetsDistribuzione!
    previous: SheetsDistribuzione
}

type SheetsDistribuzioneGroupConnection {
    distinct(field: SheetsDistribuzioneFieldsEnum!): [String!]!
    edges: [SheetsDistribuzioneEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsDistribuzioneFieldsEnum!, limit: Int, skip: Int): [SheetsDistribuzioneGroupConnection!]!
    max(field: SheetsDistribuzioneFieldsEnum!): Float
    min(field: SheetsDistribuzioneFieldsEnum!): Float
    nodes: [SheetsDistribuzione!]!
    pageInfo: PageInfo!
    sum(field: SheetsDistribuzioneFieldsEnum!): Float
    totalCount: Int!
}

type SheetsDistribuzioneV2 implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    nomask: String
    nomaskDelta: Float
    nomask__: Float
    parent: Node
    promaks__: Float
    promask: String
    promaskDelta: Float
    secondWord: String
    summedPercentage: Float
    word: String
}

type SheetsDistribuzioneV2Connection {
    distinct(field: SheetsDistribuzioneV2FieldsEnum!): [String!]!
    edges: [SheetsDistribuzioneV2Edge!]!
    group(field: SheetsDistribuzioneV2FieldsEnum!, limit: Int, skip: Int): [SheetsDistribuzioneV2GroupConnection!]!
    max(field: SheetsDistribuzioneV2FieldsEnum!): Float
    min(field: SheetsDistribuzioneV2FieldsEnum!): Float
    nodes: [SheetsDistribuzioneV2!]!
    pageInfo: PageInfo!
    sum(field: SheetsDistribuzioneV2FieldsEnum!): Float
    totalCount: Int!
}

type SheetsDistribuzioneV2Edge {
    next: SheetsDistribuzioneV2
    node: SheetsDistribuzioneV2!
    previous: SheetsDistribuzioneV2
}

type SheetsDistribuzioneV2GroupConnection {
    distinct(field: SheetsDistribuzioneV2FieldsEnum!): [String!]!
    edges: [SheetsDistribuzioneV2Edge!]!
    field: String!
    fieldValue: String
    group(field: SheetsDistribuzioneV2FieldsEnum!, limit: Int, skip: Int): [SheetsDistribuzioneV2GroupConnection!]!
    max(field: SheetsDistribuzioneV2FieldsEnum!): Float
    min(field: SheetsDistribuzioneV2FieldsEnum!): Float
    nodes: [SheetsDistribuzioneV2!]!
    pageInfo: PageInfo!
    sum(field: SheetsDistribuzioneV2FieldsEnum!): Float
    totalCount: Int!
}

type SheetsEstratti implements Node {
    author: String
    children: [Node!]!
    childrenCount: String
    comment: String
    commentId: Int
    commentableId: String
    commentableType: String
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    extracted: String
    id: ID!
    internal: Internal!
    likes: String
    origin: String
    parent: Node
    petitionLink: String
    petitionSlug: String
    role: String
    scelto: String
    splitted: [String]
    userId: String
    word: String
}

type SheetsEstrattiConnection {
    distinct(field: SheetsEstrattiFieldsEnum!): [String!]!
    edges: [SheetsEstrattiEdge!]!
    group(field: SheetsEstrattiFieldsEnum!, limit: Int, skip: Int): [SheetsEstrattiGroupConnection!]!
    max(field: SheetsEstrattiFieldsEnum!): Float
    min(field: SheetsEstrattiFieldsEnum!): Float
    nodes: [SheetsEstratti!]!
    pageInfo: PageInfo!
    sum(field: SheetsEstrattiFieldsEnum!): Float
    totalCount: Int!
}

type SheetsEstrattiEdge {
    next: SheetsEstratti
    node: SheetsEstratti!
    previous: SheetsEstratti
}

type SheetsEstrattiGroupConnection {
    distinct(field: SheetsEstrattiFieldsEnum!): [String!]!
    edges: [SheetsEstrattiEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsEstrattiFieldsEnum!, limit: Int, skip: Int): [SheetsEstrattiGroupConnection!]!
    max(field: SheetsEstrattiFieldsEnum!): Float
    min(field: SheetsEstrattiFieldsEnum!): Float
    nodes: [SheetsEstratti!]!
    pageInfo: PageInfo!
    sum(field: SheetsEstrattiFieldsEnum!): Float
    totalCount: Int!
}

type SheetsScatter implements Node {
    children: [Node!]!
    countNomask: Int
    countPromask: Int
    deltaNomask: Float
    deltaPromask: Float
    finding: String
    id: ID!
    internal: Internal!
    name: String
    normalizedNomask: Float
    normalizedPromask: Float
    parent: Node
    percentageBoth: Float
    percentageNomask: Float
    percentagePromask: Float
    scelta: String
}

type SheetsScatterConnection {
    distinct(field: SheetsScatterFieldsEnum!): [String!]!
    edges: [SheetsScatterEdge!]!
    group(field: SheetsScatterFieldsEnum!, limit: Int, skip: Int): [SheetsScatterGroupConnection!]!
    max(field: SheetsScatterFieldsEnum!): Float
    min(field: SheetsScatterFieldsEnum!): Float
    nodes: [SheetsScatter!]!
    pageInfo: PageInfo!
    sum(field: SheetsScatterFieldsEnum!): Float
    totalCount: Int!
}

type SheetsScatterEdge {
    next: SheetsScatter
    node: SheetsScatter!
    previous: SheetsScatter
}

type SheetsScatterGroupConnection {
    distinct(field: SheetsScatterFieldsEnum!): [String!]!
    edges: [SheetsScatterEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsScatterFieldsEnum!, limit: Int, skip: Int): [SheetsScatterGroupConnection!]!
    max(field: SheetsScatterFieldsEnum!): Float
    min(field: SheetsScatterFieldsEnum!): Float
    nodes: [SheetsScatter!]!
    pageInfo: PageInfo!
    sum(field: SheetsScatterFieldsEnum!): Float
    totalCount: Int!
}

type SheetsSelezionatiVaccine implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    no: String
    parent: Node
    pro: String
}

type SheetsSelezionatiVaccineConnection {
    distinct(field: SheetsSelezionatiVaccineFieldsEnum!): [String!]!
    edges: [SheetsSelezionatiVaccineEdge!]!
    group(field: SheetsSelezionatiVaccineFieldsEnum!, limit: Int, skip: Int): [SheetsSelezionatiVaccineGroupConnection!]!
    max(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    min(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    nodes: [SheetsSelezionatiVaccine!]!
    pageInfo: PageInfo!
    sum(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    totalCount: Int!
}

type SheetsSelezionatiVaccineEdge {
    next: SheetsSelezionatiVaccine
    node: SheetsSelezionatiVaccine!
    previous: SheetsSelezionatiVaccine
}

type SheetsSelezionatiVaccineGroupConnection {
    distinct(field: SheetsSelezionatiVaccineFieldsEnum!): [String!]!
    edges: [SheetsSelezionatiVaccineEdge!]!
    field: String!
    fieldValue: String
    group(field: SheetsSelezionatiVaccineFieldsEnum!, limit: Int, skip: Int): [SheetsSelezionatiVaccineGroupConnection!]!
    max(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    min(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    nodes: [SheetsSelezionatiVaccine!]!
    pageInfo: PageInfo!
    sum(field: SheetsSelezionatiVaccineFieldsEnum!): Float
    totalCount: Int!
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    jsxRuntime: String
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteFunction implements Node {
    absoluteCompiledFilePath: String!
    children: [Node!]!
    functionRoute: String!
    id: ID!
    internal: Internal!
    matchPath: String
    originalAbsoluteFilePath: String!
    originalRelativeFilePath: String!
    parent: Node
    pluginName: String!
    relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteFunctionEdge {
    next: SiteFunction
    node: SiteFunction!
    previous: SiteFunction
}

type SiteFunctionGroupConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteGroupConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    id: ID!
    internal: Internal!
    internalComponentName: String!
    matchPath: String
    pageContext: JSON
    parent: Node
    path: String!
    pluginCreator: SitePlugin
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: JSON
    parent: Node
    pluginFilepath: String
    pluginOptions: JSON
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SiteSiteMetadata {
    description: String
    image: String
    siteUrl: String
    title: String
    titleTemplate: String
}

enum CommentsJsonFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    comment
    commentId
    createdAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    origin
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    petition___created_at
    petition___slug
    petition___title
    sentences
    showInHome
    user
}

enum DataJsonFieldsEnum {
    american
    benefit
    body
    building
    chance
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    choice
    classrooms
    concern
    count
    covid19
    decision
    disease
    district
    doctor
    effort
    face_masks
    family
    freedom
    granddaughter
    grandparent
    health_issues
    healthcare_workers
    hospitals
    human_beings
    id
    individual
    infections
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    items
    items___card_context___kind
    items___card_context___weekly_signature_count
    items___children_count
    items___comment
    items___commentable_entity___activity___recruit__count
    items___commentable_entity___activity___recruit__last_updated
    items___commentable_entity___activity___recruit_abi_gmail_count
    items___commentable_entity___activity___recruit_abi_gmail_last_updated
    items___commentable_entity___activity___recruit_copylink_count
    items___commentable_entity___activity___recruit_copylink_last_updated
    items___commentable_entity___activity___recruit_email_count
    items___commentable_entity___activity___recruit_email_last_updated
    items___commentable_entity___activity___recruit_facebook_count
    items___commentable_entity___activity___recruit_facebook_last_updated
    items___commentable_entity___activity___recruit_facebook_messenger_mobile_count
    items___commentable_entity___activity___recruit_facebook_messenger_mobile_last_updated
    items___commentable_entity___activity___recruit_sms_count
    items___commentable_entity___activity___recruit_sms_last_updated
    items___commentable_entity___activity___recruit_twitter_count
    items___commentable_entity___activity___recruit_twitter_last_updated
    items___commentable_entity___activity___recruit_whatsapp_count
    items___commentable_entity___activity___recruit_whatsapp_last_updated
    items___commentable_entity___activity___share_copylink_count
    items___commentable_entity___activity___share_copylink_last_updated
    items___commentable_entity___activity___share_email_count
    items___commentable_entity___activity___share_email_last_updated
    items___commentable_entity___activity___share_facebook_count
    items___commentable_entity___activity___share_facebook_last_updated
    items___commentable_entity___activity___share_facebook_messenger_count
    items___commentable_entity___activity___share_facebook_messenger_last_updated
    items___commentable_entity___activity___share_sms_count
    items___commentable_entity___activity___share_sms_last_updated
    items___commentable_entity___activity___share_twitter_count
    items___commentable_entity___activity___share_twitter_last_updated
    items___commentable_entity___activity___share_whatsapp_count
    items___commentable_entity___activity___share_whatsapp_last_updated
    items___commentable_entity___ask
    items___commentable_entity___calculated_goal
    items___commentable_entity___created_at
    items___commentable_entity___creator_name
    items___commentable_entity___creator_photo___id
    items___commentable_entity___creator_photo___url
    items___commentable_entity___daily_signature_count
    items___commentable_entity___daily_signup_count
    items___commentable_entity___description
    items___commentable_entity___discoverable
    items___commentable_entity___display_title
    items___commentable_entity___displayed_signature_count
    items___commentable_entity___document_id
    items___commentable_entity___enable_human_verification
    items___commentable_entity___hide_comments
    items___commentable_entity___hide_dm_action_panel
    items___commentable_entity___id
    items___commentable_entity___is_pledge
    items___commentable_entity___is_verified_victory
    items___commentable_entity___is_victory
    items___commentable_entity___languages
    items___commentable_entity___last_edited_at
    items___commentable_entity___letter_body
    items___commentable_entity___media___id
    items___commentable_entity___media___type
    items___commentable_entity___media___url
    items___commentable_entity___monthly_signature_count
    items___commentable_entity___monthly_signup_count
    items___commentable_entity___organization___country_code
    items___commentable_entity___organization___formatted_location_string
    items___commentable_entity___organization___id
    items___commentable_entity___organization___name
    items___commentable_entity___organization___slug
    items___commentable_entity___organization___website
    items___commentable_entity___original_locale
    items___commentable_entity___petition_status
    items___commentable_entity___petition_title
    items___commentable_entity___photo___id
    items___commentable_entity___photo___type
    items___commentable_entity___photo___url
    items___commentable_entity___primary_target___display_name
    items___commentable_entity___primary_target___has_email
    items___commentable_entity___primary_target___id
    items___commentable_entity___primary_target___is_person
    items___commentable_entity___primary_target___publicly_visible
    items___commentable_entity___primary_target___slug
    items___commentable_entity___primary_target___type
    items___commentable_entity___progress
    items___commentable_entity___published_at
    items___commentable_entity___relevant_location___city
    items___commentable_entity___relevant_location___country_code
    items___commentable_entity___relevant_location___google_places_id
    items___commentable_entity___relevant_location___lat
    items___commentable_entity___relevant_location___lng
    items___commentable_entity___slug
    items___commentable_entity___sponsored_campaign
    items___commentable_entity___status
    items___commentable_entity___tags
    items___commentable_entity___tags___created_by_owner
    items___commentable_entity___tags___created_by_staff_member
    items___commentable_entity___tags___id
    items___commentable_entity___tags___locale
    items___commentable_entity___tags___name
    items___commentable_entity___tags___photo_id
    items___commentable_entity___tags___slug
    items___commentable_entity___tags___total_count
    items___commentable_entity___targeting_description
    items___commentable_entity___targets
    items___commentable_entity___targets___display_name
    items___commentable_entity___targets___has_email
    items___commentable_entity___targets___id
    items___commentable_entity___targets___is_person
    items___commentable_entity___targets___publicly_visible
    items___commentable_entity___targets___slug
    items___commentable_entity___targets___type
    items___commentable_entity___title
    items___commentable_entity___total_page_views
    items___commentable_entity___total_share_count
    items___commentable_entity___total_signature_count
    items___commentable_entity___total_signup_count
    items___commentable_entity___user___city
    items___commentable_entity___user___country_code
    items___commentable_entity___user___display_name
    items___commentable_entity___user___first_name
    items___commentable_entity___user___id
    items___commentable_entity___user___last_name
    items___commentable_entity___user___locale
    items___commentable_entity___user___short_display_name
    items___commentable_entity___user___slug
    items___commentable_entity___weekly_signature_count
    items___commentable_entity___weekly_signup_count
    items___commentable_id
    items___commentable_type
    items___created_at
    items___likes
    items___parent_id
    items___petition___activity___recruit__count
    items___petition___activity___recruit__last_updated
    items___petition___activity___recruit_copylink_count
    items___petition___activity___recruit_copylink_last_updated
    items___petition___activity___recruit_email_count
    items___petition___activity___recruit_email_last_updated
    items___petition___activity___recruit_facebook_count
    items___petition___activity___recruit_facebook_last_updated
    items___petition___activity___recruit_facebook_messenger_mobile_count
    items___petition___activity___recruit_facebook_messenger_mobile_last_updated
    items___petition___activity___recruit_sms_count
    items___petition___activity___recruit_sms_last_updated
    items___petition___activity___recruit_twitter_count
    items___petition___activity___recruit_twitter_last_updated
    items___petition___activity___recruit_whatsapp_count
    items___petition___activity___recruit_whatsapp_last_updated
    items___petition___activity___share_copylink_count
    items___petition___activity___share_copylink_last_updated
    items___petition___activity___share_email_count
    items___petition___activity___share_email_last_updated
    items___petition___activity___share_facebook_count
    items___petition___activity___share_facebook_last_updated
    items___petition___activity___share_facebook_messenger_count
    items___petition___activity___share_facebook_messenger_last_updated
    items___petition___activity___share_sms_count
    items___petition___activity___share_sms_last_updated
    items___petition___activity___share_twitter_count
    items___petition___activity___share_twitter_last_updated
    items___petition___activity___share_whatsapp_count
    items___petition___activity___share_whatsapp_last_updated
    items___petition___ask
    items___petition___calculated_goal
    items___petition___created_at
    items___petition___creator_name
    items___petition___creator_photo___id
    items___petition___creator_photo___url
    items___petition___daily_signature_count
    items___petition___daily_signup_count
    items___petition___description
    items___petition___discoverable
    items___petition___display_title
    items___petition___displayed_signature_count
    items___petition___document_id
    items___petition___enable_human_verification
    items___petition___hide_comments
    items___petition___hide_dm_action_panel
    items___petition___id
    items___petition___is_pledge
    items___petition___is_verified_victory
    items___petition___is_victory
    items___petition___languages
    items___petition___last_edited_at
    items___petition___letter_body
    items___petition___media___id
    items___petition___media___type
    items___petition___media___url
    items___petition___monthly_signature_count
    items___petition___monthly_signup_count
    items___petition___organization___address
    items___petition___organization___city
    items___petition___organization___country_code
    items___petition___organization___fb_page
    items___petition___organization___formatted_location_string
    items___petition___organization___id
    items___petition___organization___mission
    items___petition___organization___name
    items___petition___organization___postal_code
    items___petition___organization___slug
    items___petition___organization___state
    items___petition___organization___state_code
    items___petition___organization___twitter_page
    items___petition___organization___website
    items___petition___organization___zipcode
    items___petition___original_locale
    items___petition___petition_status
    items___petition___petition_title
    items___petition___photo___id
    items___petition___photo___type
    items___petition___photo___url
    items___petition___primary_target___display_name
    items___petition___primary_target___has_email
    items___petition___primary_target___id
    items___petition___primary_target___is_person
    items___petition___primary_target___locale
    items___petition___primary_target___publicly_visible
    items___petition___primary_target___slug
    items___petition___primary_target___type
    items___petition___progress
    items___petition___published_at
    items___petition___relevant_location___country_code
    items___petition___slug
    items___petition___sponsored_campaign
    items___petition___status
    items___petition___tags
    items___petition___tags___created_by_owner
    items___petition___tags___created_by_staff_member
    items___petition___tags___id
    items___petition___tags___locale
    items___petition___tags___name
    items___petition___tags___photo_id
    items___petition___tags___slug
    items___petition___tags___total_count
    items___petition___targeting_description
    items___petition___targets
    items___petition___targets___confirmed_at
    items___petition___targets___display_name
    items___petition___targets___has_email
    items___petition___targets___id
    items___petition___targets___is_person
    items___petition___targets___locale
    items___petition___targets___publicly_visible
    items___petition___targets___slug
    items___petition___targets___type
    items___petition___title
    items___petition___total_page_views
    items___petition___total_share_count
    items___petition___total_signature_count
    items___petition___total_signup_count
    items___petition___user___city
    items___petition___user___country_code
    items___petition___user___description
    items___petition___user___display_name
    items___petition___user___first_name
    items___petition___user___id
    items___petition___user___last_name
    items___petition___user___locale
    items___petition___user___short_display_name
    items___petition___user___slug
    items___petition___user___state_code
    items___petition___user___website
    items___petition___victory_description
    items___petition___weekly_signature_count
    items___petition___weekly_signup_count
    items___role
    items___user___city
    items___user___country_code
    items___user___display_name
    items___user___first_name
    items___user___id
    items___user___last_name
    items___user___locale
    items___user___photo___id
    items___user___photo___url
    items___user___short_display_name
    items___user___slug
    items___user___state_code
    kids
    last_page
    leader
    limit
    loved_ones
    mandate
    mask
    mask_mandate
    measure
    number
    offset
    opinion
    options
    order
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    parents
    physician
    precaution
    quarantine
    query_source
    reason
    reasons
    recommendation
    resident
    result
    rights
    school
    scientist
    student
    system
    teacher
    total_count
    vaccine
    variant
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childCommentsJson___children
    childCommentsJson___children___children
    childCommentsJson___children___children___children
    childCommentsJson___children___children___id
    childCommentsJson___children___id
    childCommentsJson___children___internal___content
    childCommentsJson___children___internal___contentDigest
    childCommentsJson___children___internal___description
    childCommentsJson___children___internal___fieldOwners
    childCommentsJson___children___internal___ignoreType
    childCommentsJson___children___internal___mediaType
    childCommentsJson___children___internal___owner
    childCommentsJson___children___internal___type
    childCommentsJson___children___parent___children
    childCommentsJson___children___parent___id
    childCommentsJson___comment
    childCommentsJson___commentId
    childCommentsJson___createdAt
    childCommentsJson___id
    childCommentsJson___internal___content
    childCommentsJson___internal___contentDigest
    childCommentsJson___internal___description
    childCommentsJson___internal___fieldOwners
    childCommentsJson___internal___ignoreType
    childCommentsJson___internal___mediaType
    childCommentsJson___internal___owner
    childCommentsJson___internal___type
    childCommentsJson___origin
    childCommentsJson___parent___children
    childCommentsJson___parent___children___children
    childCommentsJson___parent___children___id
    childCommentsJson___parent___id
    childCommentsJson___parent___internal___content
    childCommentsJson___parent___internal___contentDigest
    childCommentsJson___parent___internal___description
    childCommentsJson___parent___internal___fieldOwners
    childCommentsJson___parent___internal___ignoreType
    childCommentsJson___parent___internal___mediaType
    childCommentsJson___parent___internal___owner
    childCommentsJson___parent___internal___type
    childCommentsJson___parent___parent___children
    childCommentsJson___parent___parent___id
    childCommentsJson___petition___created_at
    childCommentsJson___petition___slug
    childCommentsJson___petition___title
    childCommentsJson___sentences
    childCommentsJson___showInHome
    childCommentsJson___user
    childDataJson___american
    childDataJson___benefit
    childDataJson___body
    childDataJson___building
    childDataJson___chance
    childDataJson___children
    childDataJson___children___children
    childDataJson___children___children___children
    childDataJson___children___children___id
    childDataJson___children___id
    childDataJson___children___internal___content
    childDataJson___children___internal___contentDigest
    childDataJson___children___internal___description
    childDataJson___children___internal___fieldOwners
    childDataJson___children___internal___ignoreType
    childDataJson___children___internal___mediaType
    childDataJson___children___internal___owner
    childDataJson___children___internal___type
    childDataJson___children___parent___children
    childDataJson___children___parent___id
    childDataJson___choice
    childDataJson___classrooms
    childDataJson___concern
    childDataJson___count
    childDataJson___covid19
    childDataJson___decision
    childDataJson___disease
    childDataJson___district
    childDataJson___doctor
    childDataJson___effort
    childDataJson___face_masks
    childDataJson___family
    childDataJson___freedom
    childDataJson___granddaughter
    childDataJson___grandparent
    childDataJson___health_issues
    childDataJson___healthcare_workers
    childDataJson___hospitals
    childDataJson___human_beings
    childDataJson___id
    childDataJson___individual
    childDataJson___infections
    childDataJson___internal___content
    childDataJson___internal___contentDigest
    childDataJson___internal___description
    childDataJson___internal___fieldOwners
    childDataJson___internal___ignoreType
    childDataJson___internal___mediaType
    childDataJson___internal___owner
    childDataJson___internal___type
    childDataJson___items
    childDataJson___items___card_context___kind
    childDataJson___items___card_context___weekly_signature_count
    childDataJson___items___children_count
    childDataJson___items___comment
    childDataJson___items___commentable_entity___ask
    childDataJson___items___commentable_entity___calculated_goal
    childDataJson___items___commentable_entity___created_at
    childDataJson___items___commentable_entity___creator_name
    childDataJson___items___commentable_entity___daily_signature_count
    childDataJson___items___commentable_entity___daily_signup_count
    childDataJson___items___commentable_entity___description
    childDataJson___items___commentable_entity___discoverable
    childDataJson___items___commentable_entity___display_title
    childDataJson___items___commentable_entity___displayed_signature_count
    childDataJson___items___commentable_entity___document_id
    childDataJson___items___commentable_entity___enable_human_verification
    childDataJson___items___commentable_entity___hide_comments
    childDataJson___items___commentable_entity___hide_dm_action_panel
    childDataJson___items___commentable_entity___id
    childDataJson___items___commentable_entity___is_pledge
    childDataJson___items___commentable_entity___is_verified_victory
    childDataJson___items___commentable_entity___is_victory
    childDataJson___items___commentable_entity___languages
    childDataJson___items___commentable_entity___last_edited_at
    childDataJson___items___commentable_entity___letter_body
    childDataJson___items___commentable_entity___monthly_signature_count
    childDataJson___items___commentable_entity___monthly_signup_count
    childDataJson___items___commentable_entity___original_locale
    childDataJson___items___commentable_entity___petition_status
    childDataJson___items___commentable_entity___petition_title
    childDataJson___items___commentable_entity___progress
    childDataJson___items___commentable_entity___published_at
    childDataJson___items___commentable_entity___slug
    childDataJson___items___commentable_entity___sponsored_campaign
    childDataJson___items___commentable_entity___status
    childDataJson___items___commentable_entity___tags
    childDataJson___items___commentable_entity___targeting_description
    childDataJson___items___commentable_entity___targets
    childDataJson___items___commentable_entity___title
    childDataJson___items___commentable_entity___total_page_views
    childDataJson___items___commentable_entity___total_share_count
    childDataJson___items___commentable_entity___total_signature_count
    childDataJson___items___commentable_entity___total_signup_count
    childDataJson___items___commentable_entity___weekly_signature_count
    childDataJson___items___commentable_entity___weekly_signup_count
    childDataJson___items___commentable_id
    childDataJson___items___commentable_type
    childDataJson___items___created_at
    childDataJson___items___likes
    childDataJson___items___parent_id
    childDataJson___items___petition___ask
    childDataJson___items___petition___calculated_goal
    childDataJson___items___petition___created_at
    childDataJson___items___petition___creator_name
    childDataJson___items___petition___daily_signature_count
    childDataJson___items___petition___daily_signup_count
    childDataJson___items___petition___description
    childDataJson___items___petition___discoverable
    childDataJson___items___petition___display_title
    childDataJson___items___petition___displayed_signature_count
    childDataJson___items___petition___document_id
    childDataJson___items___petition___enable_human_verification
    childDataJson___items___petition___hide_comments
    childDataJson___items___petition___hide_dm_action_panel
    childDataJson___items___petition___id
    childDataJson___items___petition___is_pledge
    childDataJson___items___petition___is_verified_victory
    childDataJson___items___petition___is_victory
    childDataJson___items___petition___languages
    childDataJson___items___petition___last_edited_at
    childDataJson___items___petition___letter_body
    childDataJson___items___petition___monthly_signature_count
    childDataJson___items___petition___monthly_signup_count
    childDataJson___items___petition___original_locale
    childDataJson___items___petition___petition_status
    childDataJson___items___petition___petition_title
    childDataJson___items___petition___progress
    childDataJson___items___petition___published_at
    childDataJson___items___petition___slug
    childDataJson___items___petition___sponsored_campaign
    childDataJson___items___petition___status
    childDataJson___items___petition___tags
    childDataJson___items___petition___targeting_description
    childDataJson___items___petition___targets
    childDataJson___items___petition___title
    childDataJson___items___petition___total_page_views
    childDataJson___items___petition___total_share_count
    childDataJson___items___petition___total_signature_count
    childDataJson___items___petition___total_signup_count
    childDataJson___items___petition___victory_description
    childDataJson___items___petition___weekly_signature_count
    childDataJson___items___petition___weekly_signup_count
    childDataJson___items___role
    childDataJson___items___user___city
    childDataJson___items___user___country_code
    childDataJson___items___user___display_name
    childDataJson___items___user___first_name
    childDataJson___items___user___id
    childDataJson___items___user___last_name
    childDataJson___items___user___locale
    childDataJson___items___user___short_display_name
    childDataJson___items___user___slug
    childDataJson___items___user___state_code
    childDataJson___kids
    childDataJson___last_page
    childDataJson___leader
    childDataJson___limit
    childDataJson___loved_ones
    childDataJson___mandate
    childDataJson___mask
    childDataJson___mask_mandate
    childDataJson___measure
    childDataJson___number
    childDataJson___offset
    childDataJson___opinion
    childDataJson___options
    childDataJson___order
    childDataJson___parent___children
    childDataJson___parent___children___children
    childDataJson___parent___children___id
    childDataJson___parent___id
    childDataJson___parent___internal___content
    childDataJson___parent___internal___contentDigest
    childDataJson___parent___internal___description
    childDataJson___parent___internal___fieldOwners
    childDataJson___parent___internal___ignoreType
    childDataJson___parent___internal___mediaType
    childDataJson___parent___internal___owner
    childDataJson___parent___internal___type
    childDataJson___parent___parent___children
    childDataJson___parent___parent___id
    childDataJson___parents
    childDataJson___physician
    childDataJson___precaution
    childDataJson___quarantine
    childDataJson___query_source
    childDataJson___reason
    childDataJson___reasons
    childDataJson___recommendation
    childDataJson___resident
    childDataJson___result
    childDataJson___rights
    childDataJson___school
    childDataJson___scientist
    childDataJson___student
    childDataJson___system
    childDataJson___teacher
    childDataJson___total_count
    childDataJson___vaccine
    childDataJson___variant
    childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children
    childrenCommentsJson
    childrenCommentsJson___children
    childrenCommentsJson___children___children
    childrenCommentsJson___children___children___children
    childrenCommentsJson___children___children___id
    childrenCommentsJson___children___id
    childrenCommentsJson___children___internal___content
    childrenCommentsJson___children___internal___contentDigest
    childrenCommentsJson___children___internal___description
    childrenCommentsJson___children___internal___fieldOwners
    childrenCommentsJson___children___internal___ignoreType
    childrenCommentsJson___children___internal___mediaType
    childrenCommentsJson___children___internal___owner
    childrenCommentsJson___children___internal___type
    childrenCommentsJson___children___parent___children
    childrenCommentsJson___children___parent___id
    childrenCommentsJson___comment
    childrenCommentsJson___commentId
    childrenCommentsJson___createdAt
    childrenCommentsJson___id
    childrenCommentsJson___internal___content
    childrenCommentsJson___internal___contentDigest
    childrenCommentsJson___internal___description
    childrenCommentsJson___internal___fieldOwners
    childrenCommentsJson___internal___ignoreType
    childrenCommentsJson___internal___mediaType
    childrenCommentsJson___internal___owner
    childrenCommentsJson___internal___type
    childrenCommentsJson___origin
    childrenCommentsJson___parent___children
    childrenCommentsJson___parent___children___children
    childrenCommentsJson___parent___children___id
    childrenCommentsJson___parent___id
    childrenCommentsJson___parent___internal___content
    childrenCommentsJson___parent___internal___contentDigest
    childrenCommentsJson___parent___internal___description
    childrenCommentsJson___parent___internal___fieldOwners
    childrenCommentsJson___parent___internal___ignoreType
    childrenCommentsJson___parent___internal___mediaType
    childrenCommentsJson___parent___internal___owner
    childrenCommentsJson___parent___internal___type
    childrenCommentsJson___parent___parent___children
    childrenCommentsJson___parent___parent___id
    childrenCommentsJson___petition___created_at
    childrenCommentsJson___petition___slug
    childrenCommentsJson___petition___title
    childrenCommentsJson___sentences
    childrenCommentsJson___showInHome
    childrenCommentsJson___user
    childrenDataJson
    childrenDataJson___american
    childrenDataJson___benefit
    childrenDataJson___body
    childrenDataJson___building
    childrenDataJson___chance
    childrenDataJson___children
    childrenDataJson___children___children
    childrenDataJson___children___children___children
    childrenDataJson___children___children___id
    childrenDataJson___children___id
    childrenDataJson___children___internal___content
    childrenDataJson___children___internal___contentDigest
    childrenDataJson___children___internal___description
    childrenDataJson___children___internal___fieldOwners
    childrenDataJson___children___internal___ignoreType
    childrenDataJson___children___internal___mediaType
    childrenDataJson___children___internal___owner
    childrenDataJson___children___internal___type
    childrenDataJson___children___parent___children
    childrenDataJson___children___parent___id
    childrenDataJson___choice
    childrenDataJson___classrooms
    childrenDataJson___concern
    childrenDataJson___count
    childrenDataJson___covid19
    childrenDataJson___decision
    childrenDataJson___disease
    childrenDataJson___district
    childrenDataJson___doctor
    childrenDataJson___effort
    childrenDataJson___face_masks
    childrenDataJson___family
    childrenDataJson___freedom
    childrenDataJson___granddaughter
    childrenDataJson___grandparent
    childrenDataJson___health_issues
    childrenDataJson___healthcare_workers
    childrenDataJson___hospitals
    childrenDataJson___human_beings
    childrenDataJson___id
    childrenDataJson___individual
    childrenDataJson___infections
    childrenDataJson___internal___content
    childrenDataJson___internal___contentDigest
    childrenDataJson___internal___description
    childrenDataJson___internal___fieldOwners
    childrenDataJson___internal___ignoreType
    childrenDataJson___internal___mediaType
    childrenDataJson___internal___owner
    childrenDataJson___internal___type
    childrenDataJson___items
    childrenDataJson___items___card_context___kind
    childrenDataJson___items___card_context___weekly_signature_count
    childrenDataJson___items___children_count
    childrenDataJson___items___comment
    childrenDataJson___items___commentable_entity___ask
    childrenDataJson___items___commentable_entity___calculated_goal
    childrenDataJson___items___commentable_entity___created_at
    childrenDataJson___items___commentable_entity___creator_name
    childrenDataJson___items___commentable_entity___daily_signature_count
    childrenDataJson___items___commentable_entity___daily_signup_count
    childrenDataJson___items___commentable_entity___description
    childrenDataJson___items___commentable_entity___discoverable
    childrenDataJson___items___commentable_entity___display_title
    childrenDataJson___items___commentable_entity___displayed_signature_count
    childrenDataJson___items___commentable_entity___document_id
    childrenDataJson___items___commentable_entity___enable_human_verification
    childrenDataJson___items___commentable_entity___hide_comments
    childrenDataJson___items___commentable_entity___hide_dm_action_panel
    childrenDataJson___items___commentable_entity___id
    childrenDataJson___items___commentable_entity___is_pledge
    childrenDataJson___items___commentable_entity___is_verified_victory
    childrenDataJson___items___commentable_entity___is_victory
    childrenDataJson___items___commentable_entity___languages
    childrenDataJson___items___commentable_entity___last_edited_at
    childrenDataJson___items___commentable_entity___letter_body
    childrenDataJson___items___commentable_entity___monthly_signature_count
    childrenDataJson___items___commentable_entity___monthly_signup_count
    childrenDataJson___items___commentable_entity___original_locale
    childrenDataJson___items___commentable_entity___petition_status
    childrenDataJson___items___commentable_entity___petition_title
    childrenDataJson___items___commentable_entity___progress
    childrenDataJson___items___commentable_entity___published_at
    childrenDataJson___items___commentable_entity___slug
    childrenDataJson___items___commentable_entity___sponsored_campaign
    childrenDataJson___items___commentable_entity___status
    childrenDataJson___items___commentable_entity___tags
    childrenDataJson___items___commentable_entity___targeting_description
    childrenDataJson___items___commentable_entity___targets
    childrenDataJson___items___commentable_entity___title
    childrenDataJson___items___commentable_entity___total_page_views
    childrenDataJson___items___commentable_entity___total_share_count
    childrenDataJson___items___commentable_entity___total_signature_count
    childrenDataJson___items___commentable_entity___total_signup_count
    childrenDataJson___items___commentable_entity___weekly_signature_count
    childrenDataJson___items___commentable_entity___weekly_signup_count
    childrenDataJson___items___commentable_id
    childrenDataJson___items___commentable_type
    childrenDataJson___items___created_at
    childrenDataJson___items___likes
    childrenDataJson___items___parent_id
    childrenDataJson___items___petition___ask
    childrenDataJson___items___petition___calculated_goal
    childrenDataJson___items___petition___created_at
    childrenDataJson___items___petition___creator_name
    childrenDataJson___items___petition___daily_signature_count
    childrenDataJson___items___petition___daily_signup_count
    childrenDataJson___items___petition___description
    childrenDataJson___items___petition___discoverable
    childrenDataJson___items___petition___display_title
    childrenDataJson___items___petition___displayed_signature_count
    childrenDataJson___items___petition___document_id
    childrenDataJson___items___petition___enable_human_verification
    childrenDataJson___items___petition___hide_comments
    childrenDataJson___items___petition___hide_dm_action_panel
    childrenDataJson___items___petition___id
    childrenDataJson___items___petition___is_pledge
    childrenDataJson___items___petition___is_verified_victory
    childrenDataJson___items___petition___is_victory
    childrenDataJson___items___petition___languages
    childrenDataJson___items___petition___last_edited_at
    childrenDataJson___items___petition___letter_body
    childrenDataJson___items___petition___monthly_signature_count
    childrenDataJson___items___petition___monthly_signup_count
    childrenDataJson___items___petition___original_locale
    childrenDataJson___items___petition___petition_status
    childrenDataJson___items___petition___petition_title
    childrenDataJson___items___petition___progress
    childrenDataJson___items___petition___published_at
    childrenDataJson___items___petition___slug
    childrenDataJson___items___petition___sponsored_campaign
    childrenDataJson___items___petition___status
    childrenDataJson___items___petition___tags
    childrenDataJson___items___petition___targeting_description
    childrenDataJson___items___petition___targets
    childrenDataJson___items___petition___title
    childrenDataJson___items___petition___total_page_views
    childrenDataJson___items___petition___total_share_count
    childrenDataJson___items___petition___total_signature_count
    childrenDataJson___items___petition___total_signup_count
    childrenDataJson___items___petition___victory_description
    childrenDataJson___items___petition___weekly_signature_count
    childrenDataJson___items___petition___weekly_signup_count
    childrenDataJson___items___role
    childrenDataJson___items___user___city
    childrenDataJson___items___user___country_code
    childrenDataJson___items___user___display_name
    childrenDataJson___items___user___first_name
    childrenDataJson___items___user___id
    childrenDataJson___items___user___last_name
    childrenDataJson___items___user___locale
    childrenDataJson___items___user___short_display_name
    childrenDataJson___items___user___slug
    childrenDataJson___items___user___state_code
    childrenDataJson___kids
    childrenDataJson___last_page
    childrenDataJson___leader
    childrenDataJson___limit
    childrenDataJson___loved_ones
    childrenDataJson___mandate
    childrenDataJson___mask
    childrenDataJson___mask_mandate
    childrenDataJson___measure
    childrenDataJson___number
    childrenDataJson___offset
    childrenDataJson___opinion
    childrenDataJson___options
    childrenDataJson___order
    childrenDataJson___parent___children
    childrenDataJson___parent___children___children
    childrenDataJson___parent___children___id
    childrenDataJson___parent___id
    childrenDataJson___parent___internal___content
    childrenDataJson___parent___internal___contentDigest
    childrenDataJson___parent___internal___description
    childrenDataJson___parent___internal___fieldOwners
    childrenDataJson___parent___internal___ignoreType
    childrenDataJson___parent___internal___mediaType
    childrenDataJson___parent___internal___owner
    childrenDataJson___parent___internal___type
    childrenDataJson___parent___parent___children
    childrenDataJson___parent___parent___id
    childrenDataJson___parents
    childrenDataJson___physician
    childrenDataJson___precaution
    childrenDataJson___quarantine
    childrenDataJson___query_source
    childrenDataJson___reason
    childrenDataJson___reasons
    childrenDataJson___recommendation
    childrenDataJson___resident
    childrenDataJson___result
    childrenDataJson___rights
    childrenDataJson___school
    childrenDataJson___scientist
    childrenDataJson___student
    childrenDataJson___system
    childrenDataJson___teacher
    childrenDataJson___total_count
    childrenDataJson___vaccine
    childrenDataJson___variant
    childrenImageSharp
    childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum GatsbyImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum GatsbyImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum GatsbyImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum HeadingsMdx {
    h1
    h2
    h3
    h4
    h5
    h6
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageSharpFieldsEnum {
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum MdxFieldsEnum {
    body
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fileAbsolutePath
    frontmatter___title
    headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    mdxAST @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    rawBody
    slug
    tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum SheetsArchivioVaccineFieldsEnum {
    author
    children
    childrenCount
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    comment
    commentableId
    commentableType
    createdAt
    descr
    extracted
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    likes
    origin
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    petitionLink
    petitionSlug
    role
    sheetsId
    word
}

enum SheetsChiFaCosaFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    parole
    persone
}

enum SheetsCopiaDiDistribuzioneFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    nomask
    nomaskDelta
    nomask__
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    promaks__
    promask
    promaskDelta
    secondWord
    summedPercentage
    word
}

enum SheetsDistribuzioneFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    nomask
    nomaskDelta
    nomask__
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    promaks__
    promask
    promaskDelta
    secondWord
    summedPercentage
    word
}

enum SheetsDistribuzioneV2FieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    nomask
    nomaskDelta
    nomask__
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    promaks__
    promask
    promaskDelta
    secondWord
    summedPercentage
    word
}

enum SheetsEstrattiFieldsEnum {
    author
    children
    childrenCount
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    comment
    commentId
    commentableId
    commentableType
    createdAt
    extracted
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    likes
    origin
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    petitionLink
    petitionSlug
    role
    scelto
    word
}

enum SheetsScatterFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    countNomask
    countPromask
    deltaNomask
    deltaPromask
    finding
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    normalizedNomask
    normalizedPromask
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    percentageBoth
    percentageNomask
    percentagePromask
    scelta
}

enum SheetsSelezionatiVaccineFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    no
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pro
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    jsxRuntime
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___description
    siteMetadata___image
    siteMetadata___siteUrl
    siteMetadata___title
    siteMetadata___titleTemplate
}

enum SiteFunctionFieldsEnum {
    absoluteCompiledFilePath
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    functionRoute
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    originalAbsoluteFilePath
    originalRelativeFilePath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginName
    relativeCompiledFilePath
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    pageContext
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input AVIFOptions {
    lossless: Boolean
    quality: Int
    speed: Int
}

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input CommentsJsonFilterInput {
    children: NodeFilterListInput
    comment: StringQueryOperatorInput
    commentId: IntQueryOperatorInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    origin: StringQueryOperatorInput
    parent: NodeFilterInput
    petition: CommentsJsonPetitionFilterInput
    sentences: StringQueryOperatorInput
    showInHome: BooleanQueryOperatorInput
    user: IntQueryOperatorInput
}

input CommentsJsonFilterListInput {
    elemMatch: CommentsJsonFilterInput
}

input CommentsJsonPetitionFilterInput {
    created_at: DateQueryOperatorInput
    slug: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input CommentsJsonSortInput {
    fields: [CommentsJsonFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DataJsonFilterInput {
    american: StringQueryOperatorInput
    benefit: StringQueryOperatorInput
    body: StringQueryOperatorInput
    building: StringQueryOperatorInput
    chance: StringQueryOperatorInput
    children: NodeFilterListInput
    choice: StringQueryOperatorInput
    classrooms: StringQueryOperatorInput
    concern: StringQueryOperatorInput
    count: IntQueryOperatorInput
    covid19: StringQueryOperatorInput
    decision: StringQueryOperatorInput
    disease: StringQueryOperatorInput
    district: StringQueryOperatorInput
    doctor: StringQueryOperatorInput
    effort: StringQueryOperatorInput
    face_masks: StringQueryOperatorInput
    family: StringQueryOperatorInput
    freedom: StringQueryOperatorInput
    granddaughter: StringQueryOperatorInput
    grandparent: StringQueryOperatorInput
    health_issues: StringQueryOperatorInput
    healthcare_workers: StringQueryOperatorInput
    hospitals: StringQueryOperatorInput
    human_beings: StringQueryOperatorInput
    id: StringQueryOperatorInput
    individual: StringQueryOperatorInput
    infections: StringQueryOperatorInput
    internal: InternalFilterInput
    items: DataJsonItemsFilterListInput
    kids: StringQueryOperatorInput
    last_page: BooleanQueryOperatorInput
    leader: StringQueryOperatorInput
    limit: IntQueryOperatorInput
    loved_ones: StringQueryOperatorInput
    mandate: StringQueryOperatorInput
    mask: StringQueryOperatorInput
    mask_mandate: StringQueryOperatorInput
    measure: StringQueryOperatorInput
    number: StringQueryOperatorInput
    offset: IntQueryOperatorInput
    opinion: StringQueryOperatorInput
    options: StringQueryOperatorInput
    order: StringQueryOperatorInput
    parent: NodeFilterInput
    parents: StringQueryOperatorInput
    physician: StringQueryOperatorInput
    precaution: StringQueryOperatorInput
    quarantine: StringQueryOperatorInput
    query_source: StringQueryOperatorInput
    reason: StringQueryOperatorInput
    reasons: StringQueryOperatorInput
    recommendation: StringQueryOperatorInput
    resident: StringQueryOperatorInput
    result: StringQueryOperatorInput
    rights: StringQueryOperatorInput
    school: StringQueryOperatorInput
    scientist: StringQueryOperatorInput
    student: StringQueryOperatorInput
    system: StringQueryOperatorInput
    teacher: StringQueryOperatorInput
    total_count: IntQueryOperatorInput
    vaccine: StringQueryOperatorInput
    variant: StringQueryOperatorInput
}

input DataJsonFilterListInput {
    elemMatch: DataJsonFilterInput
}

input DataJsonItemsCard_contextFilterInput {
    kind: StringQueryOperatorInput
    weekly_signature_count: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityActivityFilterInput {
    recruit__count: IntQueryOperatorInput
    recruit__last_updated: IntQueryOperatorInput
    recruit_abi_gmail_count: IntQueryOperatorInput
    recruit_abi_gmail_last_updated: IntQueryOperatorInput
    recruit_copylink_count: IntQueryOperatorInput
    recruit_copylink_last_updated: IntQueryOperatorInput
    recruit_email_count: IntQueryOperatorInput
    recruit_email_last_updated: IntQueryOperatorInput
    recruit_facebook_count: IntQueryOperatorInput
    recruit_facebook_last_updated: IntQueryOperatorInput
    recruit_facebook_messenger_mobile_count: IntQueryOperatorInput
    recruit_facebook_messenger_mobile_last_updated: IntQueryOperatorInput
    recruit_sms_count: IntQueryOperatorInput
    recruit_sms_last_updated: IntQueryOperatorInput
    recruit_twitter_count: IntQueryOperatorInput
    recruit_twitter_last_updated: IntQueryOperatorInput
    recruit_whatsapp_count: IntQueryOperatorInput
    recruit_whatsapp_last_updated: IntQueryOperatorInput
    share_copylink_count: IntQueryOperatorInput
    share_copylink_last_updated: FloatQueryOperatorInput
    share_email_count: IntQueryOperatorInput
    share_email_last_updated: FloatQueryOperatorInput
    share_facebook_count: IntQueryOperatorInput
    share_facebook_last_updated: FloatQueryOperatorInput
    share_facebook_messenger_count: IntQueryOperatorInput
    share_facebook_messenger_last_updated: FloatQueryOperatorInput
    share_sms_count: IntQueryOperatorInput
    share_sms_last_updated: FloatQueryOperatorInput
    share_twitter_count: IntQueryOperatorInput
    share_twitter_last_updated: FloatQueryOperatorInput
    share_whatsapp_count: IntQueryOperatorInput
    share_whatsapp_last_updated: FloatQueryOperatorInput
}

input DataJsonItemsCommentable_entityCreator_photoFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsCommentable_entityCreator_photoSizesFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityCreator_photoSizesFilterInput {
    large: DataJsonItemsCommentable_entityCreator_photoSizesLargeFilterInput
    medium: DataJsonItemsCommentable_entityCreator_photoSizesMediumFilterInput
    small: DataJsonItemsCommentable_entityCreator_photoSizesSmallFilterInput
}

input DataJsonItemsCommentable_entityCreator_photoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityCreator_photoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityCreator_photoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityCreator_photoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityCreator_photoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityCreator_photoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityCreator_photoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityCreator_photoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityCreator_photoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityFilterInput {
    activity: DataJsonItemsCommentable_entityActivityFilterInput
    ask: StringQueryOperatorInput
    calculated_goal: IntQueryOperatorInput
    created_at: DateQueryOperatorInput
    creator_name: StringQueryOperatorInput
    creator_photo: DataJsonItemsCommentable_entityCreator_photoFilterInput
    daily_signature_count: IntQueryOperatorInput
    daily_signup_count: IntQueryOperatorInput
    description: StringQueryOperatorInput
    discoverable: BooleanQueryOperatorInput
    display_title: StringQueryOperatorInput
    displayed_signature_count: IntQueryOperatorInput
    document_id: StringQueryOperatorInput
    enable_human_verification: BooleanQueryOperatorInput
    hide_comments: BooleanQueryOperatorInput
    hide_dm_action_panel: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_pledge: BooleanQueryOperatorInput
    is_verified_victory: BooleanQueryOperatorInput
    is_victory: BooleanQueryOperatorInput
    languages: StringQueryOperatorInput
    last_edited_at: DateQueryOperatorInput
    letter_body: StringQueryOperatorInput
    media: DataJsonItemsCommentable_entityMediaFilterInput
    monthly_signature_count: IntQueryOperatorInput
    monthly_signup_count: IntQueryOperatorInput
    organization: DataJsonItemsCommentable_entityOrganizationFilterInput
    original_locale: StringQueryOperatorInput
    petition_status: StringQueryOperatorInput
    petition_title: StringQueryOperatorInput
    photo: DataJsonItemsCommentable_entityPhotoFilterInput
    primary_target: DataJsonItemsCommentable_entityPrimary_targetFilterInput
    progress: FloatQueryOperatorInput
    published_at: DateQueryOperatorInput
    relevant_location: DataJsonItemsCommentable_entityRelevant_locationFilterInput
    slug: StringQueryOperatorInput
    sponsored_campaign: BooleanQueryOperatorInput
    status: StringQueryOperatorInput
    tags: DataJsonItemsCommentable_entityTagsFilterListInput
    targeting_description: StringQueryOperatorInput
    targets: DataJsonItemsCommentable_entityTargetsFilterListInput
    title: StringQueryOperatorInput
    total_page_views: IntQueryOperatorInput
    total_share_count: IntQueryOperatorInput
    total_signature_count: IntQueryOperatorInput
    total_signup_count: IntQueryOperatorInput
    user: DataJsonItemsCommentable_entityUserFilterInput
    weekly_signature_count: IntQueryOperatorInput
    weekly_signup_count: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsCommentable_entityMediaSizesFilterInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaSizesFilterInput {
    large: DataJsonItemsCommentable_entityMediaSizesLargeFilterInput
    medium: DataJsonItemsCommentable_entityMediaSizesMediumFilterInput
    small: DataJsonItemsCommentable_entityMediaSizesSmallFilterInput
    square: DataJsonItemsCommentable_entityMediaSizesSquareFilterInput
}

input DataJsonItemsCommentable_entityMediaSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityMediaSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityMediaSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityMediaSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaSizesSquareFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityMediaSizesSquareSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityMediaSizesSquareSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityOrganizationFilterInput {
    country_code: StringQueryOperatorInput
    formatted_location_string: StringQueryOperatorInput
    id: IntQueryOperatorInput
    name: StringQueryOperatorInput
    photo: DataJsonItemsCommentable_entityOrganizationPhotoFilterInput
    slug: StringQueryOperatorInput
    website: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityOrganizationPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsCommentable_entityOrganizationPhotoSizesFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityOrganizationPhotoSizesFilterInput {
    large: DataJsonItemsCommentable_entityOrganizationPhotoSizesLargeFilterInput
    medium: DataJsonItemsCommentable_entityOrganizationPhotoSizesMediumFilterInput
    small: DataJsonItemsCommentable_entityOrganizationPhotoSizesSmallFilterInput
}

input DataJsonItemsCommentable_entityOrganizationPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityOrganizationPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityOrganizationPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityOrganizationPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityOrganizationPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityOrganizationPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityOrganizationPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityOrganizationPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityOrganizationPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsCommentable_entityPhotoSizesFilterInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoSizesFilterInput {
    large: DataJsonItemsCommentable_entityPhotoSizesLargeFilterInput
    medium: DataJsonItemsCommentable_entityPhotoSizesMediumFilterInput
    small: DataJsonItemsCommentable_entityPhotoSizesSmallFilterInput
    square: DataJsonItemsCommentable_entityPhotoSizesSquareFilterInput
}

input DataJsonItemsCommentable_entityPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoSizesSquareFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsCommentable_entityPhotoSizesSquareSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityPhotoSizesSquareSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityPrimary_targetAdditional_dataFilterInput {
    first_name: StringQueryOperatorInput
    last_name: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityPrimary_targetFilterInput {
    additional_data: DataJsonItemsCommentable_entityPrimary_targetAdditional_dataFilterInput
    display_name: StringQueryOperatorInput
    has_email: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_person: BooleanQueryOperatorInput
    publicly_visible: BooleanQueryOperatorInput
    slug: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityRelevant_locationFilterInput {
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    google_places_id: StringQueryOperatorInput
    lat: FloatQueryOperatorInput
    lng: FloatQueryOperatorInput
}

input DataJsonItemsCommentable_entityTagsFilterInput {
    created_by_owner: BooleanQueryOperatorInput
    created_by_staff_member: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    locale: StringQueryOperatorInput
    name: StringQueryOperatorInput
    photo_id: IntQueryOperatorInput
    slug: StringQueryOperatorInput
    total_count: IntQueryOperatorInput
}

input DataJsonItemsCommentable_entityTagsFilterListInput {
    elemMatch: DataJsonItemsCommentable_entityTagsFilterInput
}

input DataJsonItemsCommentable_entityTargetsAdditional_dataFilterInput {
    first_name: StringQueryOperatorInput
    last_name: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityTargetsFilterInput {
    additional_data: DataJsonItemsCommentable_entityTargetsAdditional_dataFilterInput
    display_name: StringQueryOperatorInput
    has_email: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_person: BooleanQueryOperatorInput
    publicly_visible: BooleanQueryOperatorInput
    slug: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input DataJsonItemsCommentable_entityTargetsFilterListInput {
    elemMatch: DataJsonItemsCommentable_entityTargetsFilterInput
}

input DataJsonItemsCommentable_entityUserFilterInput {
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    display_name: StringQueryOperatorInput
    first_name: StringQueryOperatorInput
    id: IntQueryOperatorInput
    last_name: StringQueryOperatorInput
    locale: StringQueryOperatorInput
    short_display_name: StringQueryOperatorInput
    slug: StringQueryOperatorInput
}

input DataJsonItemsFilterInput {
    card_context: DataJsonItemsCard_contextFilterInput
    children_count: IntQueryOperatorInput
    comment: StringQueryOperatorInput
    commentable_entity: DataJsonItemsCommentable_entityFilterInput
    commentable_id: IntQueryOperatorInput
    commentable_type: StringQueryOperatorInput
    created_at: DateQueryOperatorInput
    likes: IntQueryOperatorInput
    parent_id: IntQueryOperatorInput
    petition: DataJsonItemsPetitionFilterInput
    role: StringQueryOperatorInput
    user: DataJsonItemsUserFilterInput
}

input DataJsonItemsFilterListInput {
    elemMatch: DataJsonItemsFilterInput
}

input DataJsonItemsPetitionActivityFilterInput {
    recruit__count: IntQueryOperatorInput
    recruit__last_updated: IntQueryOperatorInput
    recruit_copylink_count: IntQueryOperatorInput
    recruit_copylink_last_updated: IntQueryOperatorInput
    recruit_email_count: IntQueryOperatorInput
    recruit_email_last_updated: IntQueryOperatorInput
    recruit_facebook_count: IntQueryOperatorInput
    recruit_facebook_last_updated: IntQueryOperatorInput
    recruit_facebook_messenger_mobile_count: IntQueryOperatorInput
    recruit_facebook_messenger_mobile_last_updated: IntQueryOperatorInput
    recruit_sms_count: IntQueryOperatorInput
    recruit_sms_last_updated: IntQueryOperatorInput
    recruit_twitter_count: IntQueryOperatorInput
    recruit_twitter_last_updated: IntQueryOperatorInput
    recruit_whatsapp_count: IntQueryOperatorInput
    recruit_whatsapp_last_updated: IntQueryOperatorInput
    share_copylink_count: IntQueryOperatorInput
    share_copylink_last_updated: FloatQueryOperatorInput
    share_email_count: IntQueryOperatorInput
    share_email_last_updated: FloatQueryOperatorInput
    share_facebook_count: IntQueryOperatorInput
    share_facebook_last_updated: FloatQueryOperatorInput
    share_facebook_messenger_count: IntQueryOperatorInput
    share_facebook_messenger_last_updated: FloatQueryOperatorInput
    share_sms_count: IntQueryOperatorInput
    share_sms_last_updated: FloatQueryOperatorInput
    share_twitter_count: IntQueryOperatorInput
    share_twitter_last_updated: FloatQueryOperatorInput
    share_whatsapp_count: IntQueryOperatorInput
    share_whatsapp_last_updated: FloatQueryOperatorInput
}

input DataJsonItemsPetitionCreator_photoFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsPetitionCreator_photoSizesFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionCreator_photoSizesFilterInput {
    large: DataJsonItemsPetitionCreator_photoSizesLargeFilterInput
    medium: DataJsonItemsPetitionCreator_photoSizesMediumFilterInput
    small: DataJsonItemsPetitionCreator_photoSizesSmallFilterInput
}

input DataJsonItemsPetitionCreator_photoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionCreator_photoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionCreator_photoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionCreator_photoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionCreator_photoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionCreator_photoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionCreator_photoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionCreator_photoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionCreator_photoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionFilterInput {
    activity: DataJsonItemsPetitionActivityFilterInput
    ask: StringQueryOperatorInput
    calculated_goal: IntQueryOperatorInput
    created_at: DateQueryOperatorInput
    creator_name: StringQueryOperatorInput
    creator_photo: DataJsonItemsPetitionCreator_photoFilterInput
    daily_signature_count: IntQueryOperatorInput
    daily_signup_count: IntQueryOperatorInput
    description: StringQueryOperatorInput
    discoverable: BooleanQueryOperatorInput
    display_title: StringQueryOperatorInput
    displayed_signature_count: IntQueryOperatorInput
    document_id: StringQueryOperatorInput
    enable_human_verification: BooleanQueryOperatorInput
    hide_comments: BooleanQueryOperatorInput
    hide_dm_action_panel: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_pledge: BooleanQueryOperatorInput
    is_verified_victory: BooleanQueryOperatorInput
    is_victory: BooleanQueryOperatorInput
    languages: StringQueryOperatorInput
    last_edited_at: DateQueryOperatorInput
    letter_body: StringQueryOperatorInput
    media: DataJsonItemsPetitionMediaFilterInput
    monthly_signature_count: IntQueryOperatorInput
    monthly_signup_count: IntQueryOperatorInput
    organization: DataJsonItemsPetitionOrganizationFilterInput
    original_locale: StringQueryOperatorInput
    petition_status: StringQueryOperatorInput
    petition_title: StringQueryOperatorInput
    photo: DataJsonItemsPetitionPhotoFilterInput
    primary_target: DataJsonItemsPetitionPrimary_targetFilterInput
    progress: FloatQueryOperatorInput
    published_at: DateQueryOperatorInput
    relevant_location: DataJsonItemsPetitionRelevant_locationFilterInput
    slug: StringQueryOperatorInput
    sponsored_campaign: BooleanQueryOperatorInput
    status: StringQueryOperatorInput
    tags: DataJsonItemsPetitionTagsFilterListInput
    targeting_description: StringQueryOperatorInput
    targets: DataJsonItemsPetitionTargetsFilterListInput
    title: StringQueryOperatorInput
    total_page_views: IntQueryOperatorInput
    total_share_count: IntQueryOperatorInput
    total_signature_count: IntQueryOperatorInput
    total_signup_count: IntQueryOperatorInput
    user: DataJsonItemsPetitionUserFilterInput
    victory_description: StringQueryOperatorInput
    weekly_signature_count: IntQueryOperatorInput
    weekly_signup_count: IntQueryOperatorInput
}

input DataJsonItemsPetitionMediaFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsPetitionMediaSizesFilterInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionMediaSizesFilterInput {
    large: DataJsonItemsPetitionMediaSizesLargeFilterInput
    medium: DataJsonItemsPetitionMediaSizesMediumFilterInput
    small: DataJsonItemsPetitionMediaSizesSmallFilterInput
    square: DataJsonItemsPetitionMediaSizesSquareFilterInput
}

input DataJsonItemsPetitionMediaSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionMediaSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionMediaSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionMediaSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionMediaSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionMediaSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionMediaSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionMediaSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionMediaSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionMediaSizesSquareFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionMediaSizesSquareSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionMediaSizesSquareSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionOrganizationFilterInput {
    address: StringQueryOperatorInput
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    fb_page: StringQueryOperatorInput
    formatted_location_string: StringQueryOperatorInput
    id: IntQueryOperatorInput
    mission: StringQueryOperatorInput
    name: StringQueryOperatorInput
    photo: DataJsonItemsPetitionOrganizationPhotoFilterInput
    postal_code: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    state: StringQueryOperatorInput
    state_code: StringQueryOperatorInput
    twitter_page: StringQueryOperatorInput
    website: StringQueryOperatorInput
    zipcode: StringQueryOperatorInput
}

input DataJsonItemsPetitionOrganizationPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsPetitionOrganizationPhotoSizesFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionOrganizationPhotoSizesFilterInput {
    large: DataJsonItemsPetitionOrganizationPhotoSizesLargeFilterInput
    medium: DataJsonItemsPetitionOrganizationPhotoSizesMediumFilterInput
    small: DataJsonItemsPetitionOrganizationPhotoSizesSmallFilterInput
}

input DataJsonItemsPetitionOrganizationPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionOrganizationPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionOrganizationPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionOrganizationPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionOrganizationPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionOrganizationPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionOrganizationPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionOrganizationPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionOrganizationPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsPetitionPhotoSizesFilterInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionPhotoSizesFilterInput {
    large: DataJsonItemsPetitionPhotoSizesLargeFilterInput
    medium: DataJsonItemsPetitionPhotoSizesMediumFilterInput
    small: DataJsonItemsPetitionPhotoSizesSmallFilterInput
    square: DataJsonItemsPetitionPhotoSizesSquareFilterInput
}

input DataJsonItemsPetitionPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionPhotoSizesSquareFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsPetitionPhotoSizesSquareSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsPetitionPhotoSizesSquareSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsPetitionPrimary_targetAdditional_dataFilterInput {
    first_name: StringQueryOperatorInput
    last_name: StringQueryOperatorInput
}

input DataJsonItemsPetitionPrimary_targetFilterInput {
    additional_data: DataJsonItemsPetitionPrimary_targetAdditional_dataFilterInput
    display_name: StringQueryOperatorInput
    has_email: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_person: BooleanQueryOperatorInput
    locale: StringQueryOperatorInput
    publicly_visible: BooleanQueryOperatorInput
    slug: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input DataJsonItemsPetitionRelevant_locationFilterInput {
    country_code: StringQueryOperatorInput
}

input DataJsonItemsPetitionTagsFilterInput {
    created_by_owner: BooleanQueryOperatorInput
    created_by_staff_member: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    locale: StringQueryOperatorInput
    name: StringQueryOperatorInput
    photo_id: IntQueryOperatorInput
    slug: StringQueryOperatorInput
    total_count: IntQueryOperatorInput
}

input DataJsonItemsPetitionTagsFilterListInput {
    elemMatch: DataJsonItemsPetitionTagsFilterInput
}

input DataJsonItemsPetitionTargetsAdditional_dataFilterInput {
    first_name: StringQueryOperatorInput
    last_name: StringQueryOperatorInput
}

input DataJsonItemsPetitionTargetsFilterInput {
    additional_data: DataJsonItemsPetitionTargetsAdditional_dataFilterInput
    confirmed_at: DateQueryOperatorInput
    display_name: StringQueryOperatorInput
    has_email: BooleanQueryOperatorInput
    id: IntQueryOperatorInput
    is_person: BooleanQueryOperatorInput
    locale: StringQueryOperatorInput
    publicly_visible: BooleanQueryOperatorInput
    slug: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input DataJsonItemsPetitionTargetsFilterListInput {
    elemMatch: DataJsonItemsPetitionTargetsFilterInput
}

input DataJsonItemsPetitionUserFilterInput {
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    description: StringQueryOperatorInput
    display_name: StringQueryOperatorInput
    first_name: StringQueryOperatorInput
    id: IntQueryOperatorInput
    last_name: StringQueryOperatorInput
    locale: StringQueryOperatorInput
    short_display_name: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    state_code: StringQueryOperatorInput
    website: StringQueryOperatorInput
}

input DataJsonItemsUserFilterInput {
    city: StringQueryOperatorInput
    country_code: StringQueryOperatorInput
    display_name: StringQueryOperatorInput
    first_name: StringQueryOperatorInput
    id: IntQueryOperatorInput
    last_name: StringQueryOperatorInput
    locale: StringQueryOperatorInput
    photo: DataJsonItemsUserPhotoFilterInput
    short_display_name: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    state_code: StringQueryOperatorInput
}

input DataJsonItemsUserPhotoFilterInput {
    id: IntQueryOperatorInput
    sizes: DataJsonItemsUserPhotoSizesFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsUserPhotoSizesFilterInput {
    large: DataJsonItemsUserPhotoSizesLargeFilterInput
    medium: DataJsonItemsUserPhotoSizesMediumFilterInput
    small: DataJsonItemsUserPhotoSizesSmallFilterInput
    xlarge: DataJsonItemsUserPhotoSizesXlargeFilterInput
}

input DataJsonItemsUserPhotoSizesLargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsUserPhotoSizesLargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsUserPhotoSizesLargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsUserPhotoSizesMediumFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsUserPhotoSizesMediumSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsUserPhotoSizesMediumSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsUserPhotoSizesSmallFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsUserPhotoSizesSmallSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsUserPhotoSizesSmallSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonItemsUserPhotoSizesXlargeFilterInput {
    processing: BooleanQueryOperatorInput
    size: DataJsonItemsUserPhotoSizesXlargeSizeFilterInput
    url: StringQueryOperatorInput
}

input DataJsonItemsUserPhotoSizesXlargeSizeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input DataJsonSortInput {
    fields: [DataJsonFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childCommentsJson: CommentsJsonFilterInput
    childDataJson: DataJsonFilterInput
    childImageSharp: ImageSharpFilterInput
    children: NodeFilterListInput
    childrenCommentsJson: CommentsJsonFilterListInput
    childrenDataJson: DataJsonFilterListInput
    childrenImageSharp: ImageSharpFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
    elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input MdxFilterInput {
    body: StringQueryOperatorInput
    children: NodeFilterListInput
    excerpt: StringQueryOperatorInput
    fileAbsolutePath: StringQueryOperatorInput
    frontmatter: MdxFrontmatterFilterInput
    headings: MdxHeadingMdxFilterListInput
    html: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    mdxAST: JSONQueryOperatorInput
    parent: NodeFilterInput
    rawBody: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    tableOfContents: JSONQueryOperatorInput
    timeToRead: IntQueryOperatorInput
    wordCount: MdxWordCountFilterInput
}

input MdxFrontmatterFilterInput {
    title: StringQueryOperatorInput
}

input MdxHeadingMdxFilterInput {
    depth: IntQueryOperatorInput
    value: StringQueryOperatorInput
}

input MdxHeadingMdxFilterListInput {
    elemMatch: MdxHeadingMdxFilterInput
}

input MdxSortInput {
    fields: [MdxFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input MdxWordCountFilterInput {
    paragraphs: IntQueryOperatorInput
    sentences: IntQueryOperatorInput
    words: IntQueryOperatorInput
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input SheetsArchivioVaccineFilterInput {
    author: StringQueryOperatorInput
    children: NodeFilterListInput
    childrenCount: StringQueryOperatorInput
    comment: StringQueryOperatorInput
    commentableId: StringQueryOperatorInput
    commentableType: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    descr: StringQueryOperatorInput
    extracted: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    likes: StringQueryOperatorInput
    origin: StringQueryOperatorInput
    parent: NodeFilterInput
    petitionLink: StringQueryOperatorInput
    petitionSlug: StringQueryOperatorInput
    role: StringQueryOperatorInput
    sheetsId: StringQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsArchivioVaccineSortInput {
    fields: [SheetsArchivioVaccineFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsChiFaCosaFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    parole: StringQueryOperatorInput
    persone: StringQueryOperatorInput
}

input SheetsChiFaCosaSortInput {
    fields: [SheetsChiFaCosaFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsCopiaDiDistribuzioneFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    nomask: IntQueryOperatorInput
    nomaskDelta: FloatQueryOperatorInput
    nomask__: FloatQueryOperatorInput
    parent: NodeFilterInput
    promaks__: FloatQueryOperatorInput
    promask: IntQueryOperatorInput
    promaskDelta: FloatQueryOperatorInput
    secondWord: StringQueryOperatorInput
    summedPercentage: FloatQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsCopiaDiDistribuzioneSortInput {
    fields: [SheetsCopiaDiDistribuzioneFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsDistribuzioneFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    nomask: IntQueryOperatorInput
    nomaskDelta: FloatQueryOperatorInput
    nomask__: FloatQueryOperatorInput
    parent: NodeFilterInput
    promaks__: FloatQueryOperatorInput
    promask: IntQueryOperatorInput
    promaskDelta: FloatQueryOperatorInput
    secondWord: StringQueryOperatorInput
    summedPercentage: FloatQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsDistribuzioneSortInput {
    fields: [SheetsDistribuzioneFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsDistribuzioneV2FilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    nomask: StringQueryOperatorInput
    nomaskDelta: FloatQueryOperatorInput
    nomask__: FloatQueryOperatorInput
    parent: NodeFilterInput
    promaks__: FloatQueryOperatorInput
    promask: StringQueryOperatorInput
    promaskDelta: FloatQueryOperatorInput
    secondWord: StringQueryOperatorInput
    summedPercentage: FloatQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsDistribuzioneV2SortInput {
    fields: [SheetsDistribuzioneV2FieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsEstrattiFilterInput {
    author: StringQueryOperatorInput
    children: NodeFilterListInput
    childrenCount: StringQueryOperatorInput
    comment: StringQueryOperatorInput
    commentId: IntQueryOperatorInput
    commentableId: StringQueryOperatorInput
    commentableType: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    extracted: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    likes: StringQueryOperatorInput
    origin: StringQueryOperatorInput
    parent: NodeFilterInput
    petitionLink: StringQueryOperatorInput
    petitionSlug: StringQueryOperatorInput
    role: StringQueryOperatorInput
    scelto: StringQueryOperatorInput
    word: StringQueryOperatorInput
}

input SheetsEstrattiSortInput {
    fields: [SheetsEstrattiFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsScatterFilterInput {
    children: NodeFilterListInput
    countNomask: IntQueryOperatorInput
    countPromask: IntQueryOperatorInput
    deltaNomask: FloatQueryOperatorInput
    deltaPromask: FloatQueryOperatorInput
    finding: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    normalizedNomask: FloatQueryOperatorInput
    normalizedPromask: FloatQueryOperatorInput
    parent: NodeFilterInput
    percentageBoth: FloatQueryOperatorInput
    percentageNomask: FloatQueryOperatorInput
    percentagePromask: FloatQueryOperatorInput
    scelta: StringQueryOperatorInput
}

input SheetsScatterSortInput {
    fields: [SheetsScatterFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SheetsSelezionatiVaccineFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    no: StringQueryOperatorInput
    parent: NodeFilterInput
    pro: StringQueryOperatorInput
}

input SheetsSelezionatiVaccineSortInput {
    fields: [SheetsSelezionatiVaccineFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    jsxRuntime: StringQueryOperatorInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
}

input SiteFunctionFilterInput {
    absoluteCompiledFilePath: StringQueryOperatorInput
    children: NodeFilterListInput
    functionRoute: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    matchPath: StringQueryOperatorInput
    originalAbsoluteFilePath: StringQueryOperatorInput
    originalRelativeFilePath: StringQueryOperatorInput
    parent: NodeFilterInput
    pluginName: StringQueryOperatorInput
    relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
    fields: [SiteFunctionFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    matchPath: StringQueryOperatorInput
    pageContext: JSONQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: JSONQueryOperatorInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: JSONQueryOperatorInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
    description: StringQueryOperatorInput
    image: StringQueryOperatorInput
    siteUrl: StringQueryOperatorInput
    title: StringQueryOperatorInput
    titleTemplate: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input WebPOptions {
    quality: Int
}
